# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.

struct AdminApi <: OpenAPI.APIClientImpl
    client::OpenAPI.Clients.Client
end

"""
The default API base path for APIs in `AdminApi`.
This can be used to construct the `OpenAPI.Clients.Client` instance.
"""
basepath(::Type{ AdminApi }) = "https://misskey.qwjyh.net/api"

const _returntypes_admin_abuse_user_reports_AdminApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Vector{AdminAbuseUserReports200ResponseInner},
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_admin_abuse_user_reports(_api::AdminApi, admin_abuse_user_reports_request::AdminAbuseUserReportsRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_admin_abuse_user_reports_AdminApi, "/admin/abuse-user-reports", ["bearerAuth", ], admin_abuse_user_reports_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""admin/abuse-user-reports

No description provided.  **Credential required**: *Yes* / **Permission**: *read:admin:abuse-user-reports*

Params:
- admin_abuse_user_reports_request::AdminAbuseUserReportsRequest (required)

Return: Vector{AdminAbuseUserReports200ResponseInner}, OpenAPI.Clients.ApiResponse
"""
function admin_abuse_user_reports(_api::AdminApi, admin_abuse_user_reports_request::AdminAbuseUserReportsRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_abuse_user_reports(_api, admin_abuse_user_reports_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function admin_abuse_user_reports(_api::AdminApi, response_stream::Channel, admin_abuse_user_reports_request::AdminAbuseUserReportsRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_abuse_user_reports(_api, admin_abuse_user_reports_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_admin_accounts_create_AdminApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => AdminAccountsCreate200Response,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_admin_accounts_create(_api::AdminApi, admin_accounts_create_request::AdminAccountsCreateRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_admin_accounts_create_AdminApi, "/admin/accounts/create", [], admin_accounts_create_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""admin/accounts/create

No description provided.  **Credential required**: *No*

Params:
- admin_accounts_create_request::AdminAccountsCreateRequest (required)

Return: AdminAccountsCreate200Response, OpenAPI.Clients.ApiResponse
"""
function admin_accounts_create(_api::AdminApi, admin_accounts_create_request::AdminAccountsCreateRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_accounts_create(_api, admin_accounts_create_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function admin_accounts_create(_api::AdminApi, response_stream::Channel, admin_accounts_create_request::AdminAccountsCreateRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_accounts_create(_api, admin_accounts_create_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_admin_accounts_delete_AdminApi = Dict{Regex,Type}(
    Regex("^" * replace("204", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_admin_accounts_delete(_api::AdminApi, admin_accounts_delete_request::AdminAccountsDeleteRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_admin_accounts_delete_AdminApi, "/admin/accounts/delete", ["bearerAuth", ], admin_accounts_delete_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""admin/accounts/delete

No description provided.  **Credential required**: *Yes* / **Permission**: *write:admin:account*

Params:
- admin_accounts_delete_request::AdminAccountsDeleteRequest (required)

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function admin_accounts_delete(_api::AdminApi, admin_accounts_delete_request::AdminAccountsDeleteRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_accounts_delete(_api, admin_accounts_delete_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function admin_accounts_delete(_api::AdminApi, response_stream::Channel, admin_accounts_delete_request::AdminAccountsDeleteRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_accounts_delete(_api, admin_accounts_delete_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_admin_accounts_find_by_email_AdminApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => UserDetailedNotMe,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_admin_accounts_find_by_email(_api::AdminApi, admin_accounts_find_by_email_request::AdminAccountsFindByEmailRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_admin_accounts_find_by_email_AdminApi, "/admin/accounts/find-by-email", ["bearerAuth", ], admin_accounts_find_by_email_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""admin/accounts/find-by-email

No description provided.  **Credential required**: *Yes* / **Permission**: *read:admin:account*

Params:
- admin_accounts_find_by_email_request::AdminAccountsFindByEmailRequest (required)

Return: UserDetailedNotMe, OpenAPI.Clients.ApiResponse
"""
function admin_accounts_find_by_email(_api::AdminApi, admin_accounts_find_by_email_request::AdminAccountsFindByEmailRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_accounts_find_by_email(_api, admin_accounts_find_by_email_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function admin_accounts_find_by_email(_api::AdminApi, response_stream::Channel, admin_accounts_find_by_email_request::AdminAccountsFindByEmailRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_accounts_find_by_email(_api, admin_accounts_find_by_email_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_admin_ad_create_AdminApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Ad,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_admin_ad_create(_api::AdminApi, admin_ad_create_request::AdminAdCreateRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_admin_ad_create_AdminApi, "/admin/ad/create", ["bearerAuth", ], admin_ad_create_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""admin/ad/create

No description provided.  **Credential required**: *Yes* / **Permission**: *write:admin:ad*

Params:
- admin_ad_create_request::AdminAdCreateRequest (required)

Return: Ad, OpenAPI.Clients.ApiResponse
"""
function admin_ad_create(_api::AdminApi, admin_ad_create_request::AdminAdCreateRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_ad_create(_api, admin_ad_create_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function admin_ad_create(_api::AdminApi, response_stream::Channel, admin_ad_create_request::AdminAdCreateRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_ad_create(_api, admin_ad_create_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_admin_ad_delete_AdminApi = Dict{Regex,Type}(
    Regex("^" * replace("204", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_admin_ad_delete(_api::AdminApi, admin_ad_delete_request::AdminAdDeleteRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_admin_ad_delete_AdminApi, "/admin/ad/delete", ["bearerAuth", ], admin_ad_delete_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""admin/ad/delete

No description provided.  **Credential required**: *Yes* / **Permission**: *write:admin:ad*

Params:
- admin_ad_delete_request::AdminAdDeleteRequest (required)

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function admin_ad_delete(_api::AdminApi, admin_ad_delete_request::AdminAdDeleteRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_ad_delete(_api, admin_ad_delete_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function admin_ad_delete(_api::AdminApi, response_stream::Channel, admin_ad_delete_request::AdminAdDeleteRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_ad_delete(_api, admin_ad_delete_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_admin_ad_list_AdminApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Vector{Ad},
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_admin_ad_list(_api::AdminApi, admin_ad_list_request::AdminAdListRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_admin_ad_list_AdminApi, "/admin/ad/list", ["bearerAuth", ], admin_ad_list_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""admin/ad/list

No description provided.  **Credential required**: *Yes* / **Permission**: *read:admin:ad*

Params:
- admin_ad_list_request::AdminAdListRequest (required)

Return: Vector{Ad}, OpenAPI.Clients.ApiResponse
"""
function admin_ad_list(_api::AdminApi, admin_ad_list_request::AdminAdListRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_ad_list(_api, admin_ad_list_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function admin_ad_list(_api::AdminApi, response_stream::Channel, admin_ad_list_request::AdminAdListRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_ad_list(_api, admin_ad_list_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_admin_ad_update_AdminApi = Dict{Regex,Type}(
    Regex("^" * replace("204", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_admin_ad_update(_api::AdminApi, admin_ad_update_request::AdminAdUpdateRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_admin_ad_update_AdminApi, "/admin/ad/update", ["bearerAuth", ], admin_ad_update_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""admin/ad/update

No description provided.  **Credential required**: *Yes* / **Permission**: *write:admin:ad*

Params:
- admin_ad_update_request::AdminAdUpdateRequest (required)

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function admin_ad_update(_api::AdminApi, admin_ad_update_request::AdminAdUpdateRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_ad_update(_api, admin_ad_update_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function admin_ad_update(_api::AdminApi, response_stream::Channel, admin_ad_update_request::AdminAdUpdateRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_ad_update(_api, admin_ad_update_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_admin_announcements_create_AdminApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => AdminAnnouncementsCreate200Response,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_admin_announcements_create(_api::AdminApi, admin_announcements_create_request::AdminAnnouncementsCreateRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_admin_announcements_create_AdminApi, "/admin/announcements/create", ["bearerAuth", ], admin_announcements_create_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""admin/announcements/create

No description provided.  **Credential required**: *Yes* / **Permission**: *write:admin:announcements*

Params:
- admin_announcements_create_request::AdminAnnouncementsCreateRequest (required)

Return: AdminAnnouncementsCreate200Response, OpenAPI.Clients.ApiResponse
"""
function admin_announcements_create(_api::AdminApi, admin_announcements_create_request::AdminAnnouncementsCreateRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_announcements_create(_api, admin_announcements_create_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function admin_announcements_create(_api::AdminApi, response_stream::Channel, admin_announcements_create_request::AdminAnnouncementsCreateRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_announcements_create(_api, admin_announcements_create_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_admin_announcements_delete_AdminApi = Dict{Regex,Type}(
    Regex("^" * replace("204", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_admin_announcements_delete(_api::AdminApi, admin_ad_delete_request::AdminAdDeleteRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_admin_announcements_delete_AdminApi, "/admin/announcements/delete", ["bearerAuth", ], admin_ad_delete_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""admin/announcements/delete

No description provided.  **Credential required**: *Yes* / **Permission**: *write:admin:announcements*

Params:
- admin_ad_delete_request::AdminAdDeleteRequest (required)

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function admin_announcements_delete(_api::AdminApi, admin_ad_delete_request::AdminAdDeleteRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_announcements_delete(_api, admin_ad_delete_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function admin_announcements_delete(_api::AdminApi, response_stream::Channel, admin_ad_delete_request::AdminAdDeleteRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_announcements_delete(_api, admin_ad_delete_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_admin_announcements_list_AdminApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Vector{AdminAnnouncementsList200ResponseInner},
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_admin_announcements_list(_api::AdminApi, admin_announcements_list_request::AdminAnnouncementsListRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_admin_announcements_list_AdminApi, "/admin/announcements/list", ["bearerAuth", ], admin_announcements_list_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""admin/announcements/list

No description provided.  **Credential required**: *Yes* / **Permission**: *read:admin:announcements*

Params:
- admin_announcements_list_request::AdminAnnouncementsListRequest (required)

Return: Vector{AdminAnnouncementsList200ResponseInner}, OpenAPI.Clients.ApiResponse
"""
function admin_announcements_list(_api::AdminApi, admin_announcements_list_request::AdminAnnouncementsListRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_announcements_list(_api, admin_announcements_list_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function admin_announcements_list(_api::AdminApi, response_stream::Channel, admin_announcements_list_request::AdminAnnouncementsListRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_announcements_list(_api, admin_announcements_list_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_admin_announcements_update_AdminApi = Dict{Regex,Type}(
    Regex("^" * replace("204", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_admin_announcements_update(_api::AdminApi, admin_announcements_update_request::AdminAnnouncementsUpdateRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_admin_announcements_update_AdminApi, "/admin/announcements/update", ["bearerAuth", ], admin_announcements_update_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""admin/announcements/update

No description provided.  **Credential required**: *Yes* / **Permission**: *write:admin:announcements*

Params:
- admin_announcements_update_request::AdminAnnouncementsUpdateRequest (required)

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function admin_announcements_update(_api::AdminApi, admin_announcements_update_request::AdminAnnouncementsUpdateRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_announcements_update(_api, admin_announcements_update_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function admin_announcements_update(_api::AdminApi, response_stream::Channel, admin_announcements_update_request::AdminAnnouncementsUpdateRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_announcements_update(_api, admin_announcements_update_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_admin_avatar_decorations_create_AdminApi = Dict{Regex,Type}(
    Regex("^" * replace("204", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_admin_avatar_decorations_create(_api::AdminApi, admin_avatar_decorations_create_request::AdminAvatarDecorationsCreateRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_admin_avatar_decorations_create_AdminApi, "/admin/avatar-decorations/create", ["bearerAuth", ], admin_avatar_decorations_create_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""admin/avatar-decorations/create

No description provided.  **Credential required**: *Yes* / **Permission**: *write:admin:avatar-decorations*

Params:
- admin_avatar_decorations_create_request::AdminAvatarDecorationsCreateRequest (required)

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function admin_avatar_decorations_create(_api::AdminApi, admin_avatar_decorations_create_request::AdminAvatarDecorationsCreateRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_avatar_decorations_create(_api, admin_avatar_decorations_create_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function admin_avatar_decorations_create(_api::AdminApi, response_stream::Channel, admin_avatar_decorations_create_request::AdminAvatarDecorationsCreateRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_avatar_decorations_create(_api, admin_avatar_decorations_create_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_admin_avatar_decorations_delete_AdminApi = Dict{Regex,Type}(
    Regex("^" * replace("204", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_admin_avatar_decorations_delete(_api::AdminApi, admin_ad_delete_request::AdminAdDeleteRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_admin_avatar_decorations_delete_AdminApi, "/admin/avatar-decorations/delete", ["bearerAuth", ], admin_ad_delete_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""admin/avatar-decorations/delete

No description provided.  **Credential required**: *Yes* / **Permission**: *write:admin:avatar-decorations*

Params:
- admin_ad_delete_request::AdminAdDeleteRequest (required)

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function admin_avatar_decorations_delete(_api::AdminApi, admin_ad_delete_request::AdminAdDeleteRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_avatar_decorations_delete(_api, admin_ad_delete_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function admin_avatar_decorations_delete(_api::AdminApi, response_stream::Channel, admin_ad_delete_request::AdminAdDeleteRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_avatar_decorations_delete(_api, admin_ad_delete_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_admin_avatar_decorations_list_AdminApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Vector{AdminAvatarDecorationsList200ResponseInner},
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_admin_avatar_decorations_list(_api::AdminApi, admin_announcements_list_request::AdminAnnouncementsListRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_admin_avatar_decorations_list_AdminApi, "/admin/avatar-decorations/list", ["bearerAuth", ], admin_announcements_list_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""admin/avatar-decorations/list

No description provided.  **Credential required**: *Yes* / **Permission**: *read:admin:avatar-decorations*

Params:
- admin_announcements_list_request::AdminAnnouncementsListRequest (required)

Return: Vector{AdminAvatarDecorationsList200ResponseInner}, OpenAPI.Clients.ApiResponse
"""
function admin_avatar_decorations_list(_api::AdminApi, admin_announcements_list_request::AdminAnnouncementsListRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_avatar_decorations_list(_api, admin_announcements_list_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function admin_avatar_decorations_list(_api::AdminApi, response_stream::Channel, admin_announcements_list_request::AdminAnnouncementsListRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_avatar_decorations_list(_api, admin_announcements_list_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_admin_avatar_decorations_update_AdminApi = Dict{Regex,Type}(
    Regex("^" * replace("204", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_admin_avatar_decorations_update(_api::AdminApi, admin_avatar_decorations_update_request::AdminAvatarDecorationsUpdateRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_admin_avatar_decorations_update_AdminApi, "/admin/avatar-decorations/update", ["bearerAuth", ], admin_avatar_decorations_update_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""admin/avatar-decorations/update

No description provided.  **Credential required**: *Yes* / **Permission**: *write:admin:avatar-decorations*

Params:
- admin_avatar_decorations_update_request::AdminAvatarDecorationsUpdateRequest (required)

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function admin_avatar_decorations_update(_api::AdminApi, admin_avatar_decorations_update_request::AdminAvatarDecorationsUpdateRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_avatar_decorations_update(_api, admin_avatar_decorations_update_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function admin_avatar_decorations_update(_api::AdminApi, response_stream::Channel, admin_avatar_decorations_update_request::AdminAvatarDecorationsUpdateRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_avatar_decorations_update(_api, admin_avatar_decorations_update_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_admin_delete_account_AdminApi = Dict{Regex,Type}(
    Regex("^" * replace("204", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_admin_delete_account(_api::AdminApi, admin_accounts_delete_request::AdminAccountsDeleteRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_admin_delete_account_AdminApi, "/admin/delete-account", ["bearerAuth", ], admin_accounts_delete_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""admin/delete-account

No description provided.  **Credential required**: *Yes* / **Permission**: *write:admin:delete-account*

Params:
- admin_accounts_delete_request::AdminAccountsDeleteRequest (required)

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function admin_delete_account(_api::AdminApi, admin_accounts_delete_request::AdminAccountsDeleteRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_delete_account(_api, admin_accounts_delete_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function admin_delete_account(_api::AdminApi, response_stream::Channel, admin_accounts_delete_request::AdminAccountsDeleteRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_delete_account(_api, admin_accounts_delete_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_admin_delete_all_files_of_a_user_AdminApi = Dict{Regex,Type}(
    Regex("^" * replace("204", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_admin_delete_all_files_of_a_user(_api::AdminApi, admin_accounts_delete_request::AdminAccountsDeleteRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_admin_delete_all_files_of_a_user_AdminApi, "/admin/delete-all-files-of-a-user", ["bearerAuth", ], admin_accounts_delete_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""admin/delete-all-files-of-a-user

No description provided.  **Credential required**: *Yes* / **Permission**: *write:admin:delete-all-files-of-a-user*

Params:
- admin_accounts_delete_request::AdminAccountsDeleteRequest (required)

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function admin_delete_all_files_of_a_user(_api::AdminApi, admin_accounts_delete_request::AdminAccountsDeleteRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_delete_all_files_of_a_user(_api, admin_accounts_delete_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function admin_delete_all_files_of_a_user(_api::AdminApi, response_stream::Channel, admin_accounts_delete_request::AdminAccountsDeleteRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_delete_all_files_of_a_user(_api, admin_accounts_delete_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_admin_drive_clean_remote_files_AdminApi = Dict{Regex,Type}(
    Regex("^" * replace("204", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_admin_drive_clean_remote_files(_api::AdminApi; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_admin_drive_clean_remote_files_AdminApi, "/admin/drive/clean-remote-files", ["bearerAuth", ])
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""admin/drive/clean-remote-files

No description provided.  **Credential required**: *Yes* / **Permission**: *write:admin:drive*

Params:

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function admin_drive_clean_remote_files(_api::AdminApi; _mediaType=nothing)
    _ctx = _oacinternal_admin_drive_clean_remote_files(_api; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function admin_drive_clean_remote_files(_api::AdminApi, response_stream::Channel; _mediaType=nothing)
    _ctx = _oacinternal_admin_drive_clean_remote_files(_api; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_admin_drive_cleanup_AdminApi = Dict{Regex,Type}(
    Regex("^" * replace("204", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_admin_drive_cleanup(_api::AdminApi; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_admin_drive_cleanup_AdminApi, "/admin/drive/cleanup", ["bearerAuth", ])
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""admin/drive/cleanup

No description provided.  **Credential required**: *Yes* / **Permission**: *write:admin:drive*

Params:

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function admin_drive_cleanup(_api::AdminApi; _mediaType=nothing)
    _ctx = _oacinternal_admin_drive_cleanup(_api; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function admin_drive_cleanup(_api::AdminApi, response_stream::Channel; _mediaType=nothing)
    _ctx = _oacinternal_admin_drive_cleanup(_api; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_admin_drive_files_AdminApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Vector{DriveFile},
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_admin_drive_files(_api::AdminApi, admin_drive_files_request::AdminDriveFilesRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_admin_drive_files_AdminApi, "/admin/drive/files", ["bearerAuth", ], admin_drive_files_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""admin/drive/files

No description provided.  **Credential required**: *Yes* / **Permission**: *read:admin:drive*

Params:
- admin_drive_files_request::AdminDriveFilesRequest (required)

Return: Vector{DriveFile}, OpenAPI.Clients.ApiResponse
"""
function admin_drive_files(_api::AdminApi, admin_drive_files_request::AdminDriveFilesRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_drive_files(_api, admin_drive_files_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function admin_drive_files(_api::AdminApi, response_stream::Channel, admin_drive_files_request::AdminDriveFilesRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_drive_files(_api, admin_drive_files_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_admin_drive_show_file_AdminApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => AdminDriveShowFile200Response,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_admin_drive_show_file(_api::AdminApi, admin_drive_show_file_request::AdminDriveShowFileRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_admin_drive_show_file_AdminApi, "/admin/drive/show-file", ["bearerAuth", ], admin_drive_show_file_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""admin/drive/show-file

No description provided.  **Credential required**: *Yes* / **Permission**: *read:admin:drive*

Params:
- admin_drive_show_file_request::AdminDriveShowFileRequest (required)

Return: AdminDriveShowFile200Response, OpenAPI.Clients.ApiResponse
"""
function admin_drive_show_file(_api::AdminApi, admin_drive_show_file_request::AdminDriveShowFileRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_drive_show_file(_api, admin_drive_show_file_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function admin_drive_show_file(_api::AdminApi, response_stream::Channel, admin_drive_show_file_request::AdminDriveShowFileRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_drive_show_file(_api, admin_drive_show_file_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_admin_emoji_add_AdminApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => EmojiDetailed,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_admin_emoji_add(_api::AdminApi, admin_emoji_add_request::AdminEmojiAddRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_admin_emoji_add_AdminApi, "/admin/emoji/add", ["bearerAuth", ], admin_emoji_add_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""admin/emoji/add

No description provided.  **Credential required**: *Yes* / **Permission**: *write:admin:emoji*

Params:
- admin_emoji_add_request::AdminEmojiAddRequest (required)

Return: EmojiDetailed, OpenAPI.Clients.ApiResponse
"""
function admin_emoji_add(_api::AdminApi, admin_emoji_add_request::AdminEmojiAddRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_emoji_add(_api, admin_emoji_add_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function admin_emoji_add(_api::AdminApi, response_stream::Channel, admin_emoji_add_request::AdminEmojiAddRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_emoji_add(_api, admin_emoji_add_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_admin_emoji_add_aliases_bulk_AdminApi = Dict{Regex,Type}(
    Regex("^" * replace("204", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_admin_emoji_add_aliases_bulk(_api::AdminApi, admin_emoji_add_aliases_bulk_request::AdminEmojiAddAliasesBulkRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_admin_emoji_add_aliases_bulk_AdminApi, "/admin/emoji/add-aliases-bulk", ["bearerAuth", ], admin_emoji_add_aliases_bulk_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""admin/emoji/add-aliases-bulk

No description provided.  **Credential required**: *Yes* / **Permission**: *write:admin:emoji*

Params:
- admin_emoji_add_aliases_bulk_request::AdminEmojiAddAliasesBulkRequest (required)

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function admin_emoji_add_aliases_bulk(_api::AdminApi, admin_emoji_add_aliases_bulk_request::AdminEmojiAddAliasesBulkRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_emoji_add_aliases_bulk(_api, admin_emoji_add_aliases_bulk_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function admin_emoji_add_aliases_bulk(_api::AdminApi, response_stream::Channel, admin_emoji_add_aliases_bulk_request::AdminEmojiAddAliasesBulkRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_emoji_add_aliases_bulk(_api, admin_emoji_add_aliases_bulk_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_admin_emoji_copy_AdminApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => AdminEmojiCopy200Response,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_admin_emoji_copy(_api::AdminApi, admin_emoji_copy_request::AdminEmojiCopyRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_admin_emoji_copy_AdminApi, "/admin/emoji/copy", ["bearerAuth", ], admin_emoji_copy_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""admin/emoji/copy

No description provided.  **Credential required**: *Yes* / **Permission**: *write:admin:emoji*

Params:
- admin_emoji_copy_request::AdminEmojiCopyRequest (required)

Return: AdminEmojiCopy200Response, OpenAPI.Clients.ApiResponse
"""
function admin_emoji_copy(_api::AdminApi, admin_emoji_copy_request::AdminEmojiCopyRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_emoji_copy(_api, admin_emoji_copy_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function admin_emoji_copy(_api::AdminApi, response_stream::Channel, admin_emoji_copy_request::AdminEmojiCopyRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_emoji_copy(_api, admin_emoji_copy_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_admin_emoji_delete_AdminApi = Dict{Regex,Type}(
    Regex("^" * replace("204", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_admin_emoji_delete(_api::AdminApi, admin_ad_delete_request::AdminAdDeleteRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_admin_emoji_delete_AdminApi, "/admin/emoji/delete", ["bearerAuth", ], admin_ad_delete_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""admin/emoji/delete

No description provided.  **Credential required**: *Yes* / **Permission**: *write:admin:emoji*

Params:
- admin_ad_delete_request::AdminAdDeleteRequest (required)

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function admin_emoji_delete(_api::AdminApi, admin_ad_delete_request::AdminAdDeleteRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_emoji_delete(_api, admin_ad_delete_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function admin_emoji_delete(_api::AdminApi, response_stream::Channel, admin_ad_delete_request::AdminAdDeleteRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_emoji_delete(_api, admin_ad_delete_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_admin_emoji_delete_bulk_AdminApi = Dict{Regex,Type}(
    Regex("^" * replace("204", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_admin_emoji_delete_bulk(_api::AdminApi, admin_emoji_delete_bulk_request::AdminEmojiDeleteBulkRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_admin_emoji_delete_bulk_AdminApi, "/admin/emoji/delete-bulk", ["bearerAuth", ], admin_emoji_delete_bulk_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""admin/emoji/delete-bulk

No description provided.  **Credential required**: *Yes* / **Permission**: *write:admin:emoji*

Params:
- admin_emoji_delete_bulk_request::AdminEmojiDeleteBulkRequest (required)

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function admin_emoji_delete_bulk(_api::AdminApi, admin_emoji_delete_bulk_request::AdminEmojiDeleteBulkRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_emoji_delete_bulk(_api, admin_emoji_delete_bulk_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function admin_emoji_delete_bulk(_api::AdminApi, response_stream::Channel, admin_emoji_delete_bulk_request::AdminEmojiDeleteBulkRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_emoji_delete_bulk(_api, admin_emoji_delete_bulk_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_admin_emoji_list_AdminApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Vector{AdminEmojiList200ResponseInner},
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_admin_emoji_list(_api::AdminApi, admin_emoji_list_request::AdminEmojiListRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_admin_emoji_list_AdminApi, "/admin/emoji/list", ["bearerAuth", ], admin_emoji_list_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""admin/emoji/list

No description provided.  **Credential required**: *Yes* / **Permission**: *read:admin:emoji*

Params:
- admin_emoji_list_request::AdminEmojiListRequest (required)

Return: Vector{AdminEmojiList200ResponseInner}, OpenAPI.Clients.ApiResponse
"""
function admin_emoji_list(_api::AdminApi, admin_emoji_list_request::AdminEmojiListRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_emoji_list(_api, admin_emoji_list_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function admin_emoji_list(_api::AdminApi, response_stream::Channel, admin_emoji_list_request::AdminEmojiListRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_emoji_list(_api, admin_emoji_list_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_admin_emoji_list_remote_AdminApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Vector{AdminEmojiListRemote200ResponseInner},
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_admin_emoji_list_remote(_api::AdminApi, admin_emoji_list_remote_request::AdminEmojiListRemoteRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_admin_emoji_list_remote_AdminApi, "/admin/emoji/list-remote", ["bearerAuth", ], admin_emoji_list_remote_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""admin/emoji/list-remote

No description provided.  **Credential required**: *Yes* / **Permission**: *read:admin:emoji*

Params:
- admin_emoji_list_remote_request::AdminEmojiListRemoteRequest (required)

Return: Vector{AdminEmojiListRemote200ResponseInner}, OpenAPI.Clients.ApiResponse
"""
function admin_emoji_list_remote(_api::AdminApi, admin_emoji_list_remote_request::AdminEmojiListRemoteRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_emoji_list_remote(_api, admin_emoji_list_remote_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function admin_emoji_list_remote(_api::AdminApi, response_stream::Channel, admin_emoji_list_remote_request::AdminEmojiListRemoteRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_emoji_list_remote(_api, admin_emoji_list_remote_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_admin_emoji_remove_aliases_bulk_AdminApi = Dict{Regex,Type}(
    Regex("^" * replace("204", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_admin_emoji_remove_aliases_bulk(_api::AdminApi, admin_emoji_add_aliases_bulk_request::AdminEmojiAddAliasesBulkRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_admin_emoji_remove_aliases_bulk_AdminApi, "/admin/emoji/remove-aliases-bulk", ["bearerAuth", ], admin_emoji_add_aliases_bulk_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""admin/emoji/remove-aliases-bulk

No description provided.  **Credential required**: *Yes* / **Permission**: *write:admin:emoji*

Params:
- admin_emoji_add_aliases_bulk_request::AdminEmojiAddAliasesBulkRequest (required)

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function admin_emoji_remove_aliases_bulk(_api::AdminApi, admin_emoji_add_aliases_bulk_request::AdminEmojiAddAliasesBulkRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_emoji_remove_aliases_bulk(_api, admin_emoji_add_aliases_bulk_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function admin_emoji_remove_aliases_bulk(_api::AdminApi, response_stream::Channel, admin_emoji_add_aliases_bulk_request::AdminEmojiAddAliasesBulkRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_emoji_remove_aliases_bulk(_api, admin_emoji_add_aliases_bulk_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_admin_emoji_set_aliases_bulk_AdminApi = Dict{Regex,Type}(
    Regex("^" * replace("204", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_admin_emoji_set_aliases_bulk(_api::AdminApi, admin_emoji_add_aliases_bulk_request::AdminEmojiAddAliasesBulkRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_admin_emoji_set_aliases_bulk_AdminApi, "/admin/emoji/set-aliases-bulk", ["bearerAuth", ], admin_emoji_add_aliases_bulk_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""admin/emoji/set-aliases-bulk

No description provided.  **Credential required**: *Yes* / **Permission**: *write:admin:emoji*

Params:
- admin_emoji_add_aliases_bulk_request::AdminEmojiAddAliasesBulkRequest (required)

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function admin_emoji_set_aliases_bulk(_api::AdminApi, admin_emoji_add_aliases_bulk_request::AdminEmojiAddAliasesBulkRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_emoji_set_aliases_bulk(_api, admin_emoji_add_aliases_bulk_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function admin_emoji_set_aliases_bulk(_api::AdminApi, response_stream::Channel, admin_emoji_add_aliases_bulk_request::AdminEmojiAddAliasesBulkRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_emoji_set_aliases_bulk(_api, admin_emoji_add_aliases_bulk_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_admin_emoji_set_category_bulk_AdminApi = Dict{Regex,Type}(
    Regex("^" * replace("204", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_admin_emoji_set_category_bulk(_api::AdminApi, admin_emoji_set_category_bulk_request::AdminEmojiSetCategoryBulkRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_admin_emoji_set_category_bulk_AdminApi, "/admin/emoji/set-category-bulk", ["bearerAuth", ], admin_emoji_set_category_bulk_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""admin/emoji/set-category-bulk

No description provided.  **Credential required**: *Yes* / **Permission**: *write:admin:emoji*

Params:
- admin_emoji_set_category_bulk_request::AdminEmojiSetCategoryBulkRequest (required)

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function admin_emoji_set_category_bulk(_api::AdminApi, admin_emoji_set_category_bulk_request::AdminEmojiSetCategoryBulkRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_emoji_set_category_bulk(_api, admin_emoji_set_category_bulk_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function admin_emoji_set_category_bulk(_api::AdminApi, response_stream::Channel, admin_emoji_set_category_bulk_request::AdminEmojiSetCategoryBulkRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_emoji_set_category_bulk(_api, admin_emoji_set_category_bulk_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_admin_emoji_set_license_bulk_AdminApi = Dict{Regex,Type}(
    Regex("^" * replace("204", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_admin_emoji_set_license_bulk(_api::AdminApi, admin_emoji_set_license_bulk_request::AdminEmojiSetLicenseBulkRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_admin_emoji_set_license_bulk_AdminApi, "/admin/emoji/set-license-bulk", ["bearerAuth", ], admin_emoji_set_license_bulk_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""admin/emoji/set-license-bulk

No description provided.  **Credential required**: *Yes* / **Permission**: *write:admin:emoji*

Params:
- admin_emoji_set_license_bulk_request::AdminEmojiSetLicenseBulkRequest (required)

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function admin_emoji_set_license_bulk(_api::AdminApi, admin_emoji_set_license_bulk_request::AdminEmojiSetLicenseBulkRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_emoji_set_license_bulk(_api, admin_emoji_set_license_bulk_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function admin_emoji_set_license_bulk(_api::AdminApi, response_stream::Channel, admin_emoji_set_license_bulk_request::AdminEmojiSetLicenseBulkRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_emoji_set_license_bulk(_api, admin_emoji_set_license_bulk_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_admin_emoji_update_AdminApi = Dict{Regex,Type}(
    Regex("^" * replace("204", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_admin_emoji_update(_api::AdminApi, admin_emoji_update_request::AdminEmojiUpdateRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_admin_emoji_update_AdminApi, "/admin/emoji/update", ["bearerAuth", ], admin_emoji_update_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""admin/emoji/update

No description provided.  **Credential required**: *Yes* / **Permission**: *write:admin:emoji*

Params:
- admin_emoji_update_request::AdminEmojiUpdateRequest (required)

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function admin_emoji_update(_api::AdminApi, admin_emoji_update_request::AdminEmojiUpdateRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_emoji_update(_api, admin_emoji_update_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function admin_emoji_update(_api::AdminApi, response_stream::Channel, admin_emoji_update_request::AdminEmojiUpdateRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_emoji_update(_api, admin_emoji_update_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_admin_federation_delete_all_files_AdminApi = Dict{Regex,Type}(
    Regex("^" * replace("204", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_admin_federation_delete_all_files(_api::AdminApi, admin_federation_delete_all_files_request::AdminFederationDeleteAllFilesRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_admin_federation_delete_all_files_AdminApi, "/admin/federation/delete-all-files", ["bearerAuth", ], admin_federation_delete_all_files_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""admin/federation/delete-all-files

No description provided.  **Credential required**: *Yes* / **Permission**: *write:admin:federation*

Params:
- admin_federation_delete_all_files_request::AdminFederationDeleteAllFilesRequest (required)

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function admin_federation_delete_all_files(_api::AdminApi, admin_federation_delete_all_files_request::AdminFederationDeleteAllFilesRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_federation_delete_all_files(_api, admin_federation_delete_all_files_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function admin_federation_delete_all_files(_api::AdminApi, response_stream::Channel, admin_federation_delete_all_files_request::AdminFederationDeleteAllFilesRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_federation_delete_all_files(_api, admin_federation_delete_all_files_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_admin_federation_refresh_remote_instance_metadata_AdminApi = Dict{Regex,Type}(
    Regex("^" * replace("204", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_admin_federation_refresh_remote_instance_metadata(_api::AdminApi, admin_federation_delete_all_files_request::AdminFederationDeleteAllFilesRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_admin_federation_refresh_remote_instance_metadata_AdminApi, "/admin/federation/refresh-remote-instance-metadata", ["bearerAuth", ], admin_federation_delete_all_files_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""admin/federation/refresh-remote-instance-metadata

No description provided.  **Credential required**: *Yes* / **Permission**: *write:admin:federation*

Params:
- admin_federation_delete_all_files_request::AdminFederationDeleteAllFilesRequest (required)

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function admin_federation_refresh_remote_instance_metadata(_api::AdminApi, admin_federation_delete_all_files_request::AdminFederationDeleteAllFilesRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_federation_refresh_remote_instance_metadata(_api, admin_federation_delete_all_files_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function admin_federation_refresh_remote_instance_metadata(_api::AdminApi, response_stream::Channel, admin_federation_delete_all_files_request::AdminFederationDeleteAllFilesRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_federation_refresh_remote_instance_metadata(_api, admin_federation_delete_all_files_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_admin_federation_remove_all_following_AdminApi = Dict{Regex,Type}(
    Regex("^" * replace("204", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_admin_federation_remove_all_following(_api::AdminApi, admin_federation_delete_all_files_request::AdminFederationDeleteAllFilesRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_admin_federation_remove_all_following_AdminApi, "/admin/federation/remove-all-following", ["bearerAuth", ], admin_federation_delete_all_files_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""admin/federation/remove-all-following

No description provided.  **Credential required**: *Yes* / **Permission**: *write:admin:federation*

Params:
- admin_federation_delete_all_files_request::AdminFederationDeleteAllFilesRequest (required)

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function admin_federation_remove_all_following(_api::AdminApi, admin_federation_delete_all_files_request::AdminFederationDeleteAllFilesRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_federation_remove_all_following(_api, admin_federation_delete_all_files_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function admin_federation_remove_all_following(_api::AdminApi, response_stream::Channel, admin_federation_delete_all_files_request::AdminFederationDeleteAllFilesRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_federation_remove_all_following(_api, admin_federation_delete_all_files_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_admin_federation_update_instance_AdminApi = Dict{Regex,Type}(
    Regex("^" * replace("204", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_admin_federation_update_instance(_api::AdminApi, admin_federation_update_instance_request::AdminFederationUpdateInstanceRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_admin_federation_update_instance_AdminApi, "/admin/federation/update-instance", ["bearerAuth", ], admin_federation_update_instance_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""admin/federation/update-instance

No description provided.  **Credential required**: *Yes* / **Permission**: *write:admin:federation*

Params:
- admin_federation_update_instance_request::AdminFederationUpdateInstanceRequest (required)

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function admin_federation_update_instance(_api::AdminApi, admin_federation_update_instance_request::AdminFederationUpdateInstanceRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_federation_update_instance(_api, admin_federation_update_instance_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function admin_federation_update_instance(_api::AdminApi, response_stream::Channel, admin_federation_update_instance_request::AdminFederationUpdateInstanceRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_federation_update_instance(_api, admin_federation_update_instance_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_admin_get_index_stats_AdminApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Vector{AdminGetIndexStats200ResponseInner},
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_admin_get_index_stats(_api::AdminApi; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_admin_get_index_stats_AdminApi, "/admin/get-index-stats", ["bearerAuth", ])
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""admin/get-index-stats

No description provided.  **Credential required**: *Yes* / **Permission**: *read:admin:index-stats*

Params:

Return: Vector{AdminGetIndexStats200ResponseInner}, OpenAPI.Clients.ApiResponse
"""
function admin_get_index_stats(_api::AdminApi; _mediaType=nothing)
    _ctx = _oacinternal_admin_get_index_stats(_api; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function admin_get_index_stats(_api::AdminApi, response_stream::Channel; _mediaType=nothing)
    _ctx = _oacinternal_admin_get_index_stats(_api; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_admin_get_table_stats_AdminApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Any,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_admin_get_table_stats(_api::AdminApi; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_admin_get_table_stats_AdminApi, "/admin/get-table-stats", ["bearerAuth", ])
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""admin/get-table-stats

No description provided.  **Credential required**: *Yes* / **Permission**: *read:admin:table-stats*

Params:

Return: Any, OpenAPI.Clients.ApiResponse
"""
function admin_get_table_stats(_api::AdminApi; _mediaType=nothing)
    _ctx = _oacinternal_admin_get_table_stats(_api; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function admin_get_table_stats(_api::AdminApi, response_stream::Channel; _mediaType=nothing)
    _ctx = _oacinternal_admin_get_table_stats(_api; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_admin_get_user_ips_AdminApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Vector{AdminGetUserIps200ResponseInner},
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_admin_get_user_ips(_api::AdminApi, admin_accounts_delete_request::AdminAccountsDeleteRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_admin_get_user_ips_AdminApi, "/admin/get-user-ips", ["bearerAuth", ], admin_accounts_delete_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""admin/get-user-ips

No description provided.  **Credential required**: *Yes* / **Permission**: *read:admin:user-ips*

Params:
- admin_accounts_delete_request::AdminAccountsDeleteRequest (required)

Return: Vector{AdminGetUserIps200ResponseInner}, OpenAPI.Clients.ApiResponse
"""
function admin_get_user_ips(_api::AdminApi, admin_accounts_delete_request::AdminAccountsDeleteRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_get_user_ips(_api, admin_accounts_delete_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function admin_get_user_ips(_api::AdminApi, response_stream::Channel, admin_accounts_delete_request::AdminAccountsDeleteRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_get_user_ips(_api, admin_accounts_delete_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_admin_invite_create_AdminApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Vector{InviteCode},
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_admin_invite_create(_api::AdminApi, admin_invite_create_request::AdminInviteCreateRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_admin_invite_create_AdminApi, "/admin/invite/create", ["bearerAuth", ], admin_invite_create_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""admin/invite/create

No description provided.  **Credential required**: *Yes* / **Permission**: *write:admin:invite-codes*

Params:
- admin_invite_create_request::AdminInviteCreateRequest (required)

Return: Vector{InviteCode}, OpenAPI.Clients.ApiResponse
"""
function admin_invite_create(_api::AdminApi, admin_invite_create_request::AdminInviteCreateRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_invite_create(_api, admin_invite_create_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function admin_invite_create(_api::AdminApi, response_stream::Channel, admin_invite_create_request::AdminInviteCreateRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_invite_create(_api, admin_invite_create_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_admin_invite_list_AdminApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Vector{InviteCode},
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_admin_invite_list(_api::AdminApi, admin_invite_list_request::AdminInviteListRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_admin_invite_list_AdminApi, "/admin/invite/list", ["bearerAuth", ], admin_invite_list_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""admin/invite/list

No description provided.  **Credential required**: *Yes* / **Permission**: *read:admin:invite-codes*

Params:
- admin_invite_list_request::AdminInviteListRequest (required)

Return: Vector{InviteCode}, OpenAPI.Clients.ApiResponse
"""
function admin_invite_list(_api::AdminApi, admin_invite_list_request::AdminInviteListRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_invite_list(_api, admin_invite_list_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function admin_invite_list(_api::AdminApi, response_stream::Channel, admin_invite_list_request::AdminInviteListRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_invite_list(_api, admin_invite_list_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_admin_promo_create_AdminApi = Dict{Regex,Type}(
    Regex("^" * replace("204", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_admin_promo_create(_api::AdminApi, admin_promo_create_request::AdminPromoCreateRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_admin_promo_create_AdminApi, "/admin/promo/create", ["bearerAuth", ], admin_promo_create_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""admin/promo/create

No description provided.  **Credential required**: *Yes* / **Permission**: *write:admin:promo*

Params:
- admin_promo_create_request::AdminPromoCreateRequest (required)

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function admin_promo_create(_api::AdminApi, admin_promo_create_request::AdminPromoCreateRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_promo_create(_api, admin_promo_create_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function admin_promo_create(_api::AdminApi, response_stream::Channel, admin_promo_create_request::AdminPromoCreateRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_promo_create(_api, admin_promo_create_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_admin_queue_clear_AdminApi = Dict{Regex,Type}(
    Regex("^" * replace("204", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_admin_queue_clear(_api::AdminApi; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_admin_queue_clear_AdminApi, "/admin/queue/clear", ["bearerAuth", ])
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""admin/queue/clear

No description provided.  **Credential required**: *Yes* / **Permission**: *write:admin:queue*

Params:

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function admin_queue_clear(_api::AdminApi; _mediaType=nothing)
    _ctx = _oacinternal_admin_queue_clear(_api; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function admin_queue_clear(_api::AdminApi, response_stream::Channel; _mediaType=nothing)
    _ctx = _oacinternal_admin_queue_clear(_api; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_admin_queue_deliver_delayed_AdminApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Vector{Vector{AdminQueueDeliverDelayed200ResponseInnerInner}},
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_admin_queue_deliver_delayed(_api::AdminApi; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_admin_queue_deliver_delayed_AdminApi, "/admin/queue/deliver-delayed", ["bearerAuth", ])
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""admin/queue/deliver-delayed

No description provided.  **Credential required**: *Yes* / **Permission**: *read:admin:queue*

Params:

Return: Vector{Vector{AdminQueueDeliverDelayed200ResponseInnerInner}}, OpenAPI.Clients.ApiResponse
"""
function admin_queue_deliver_delayed(_api::AdminApi; _mediaType=nothing)
    _ctx = _oacinternal_admin_queue_deliver_delayed(_api; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function admin_queue_deliver_delayed(_api::AdminApi, response_stream::Channel; _mediaType=nothing)
    _ctx = _oacinternal_admin_queue_deliver_delayed(_api; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_admin_queue_inbox_delayed_AdminApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Vector{Vector{AdminQueueDeliverDelayed200ResponseInnerInner}},
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_admin_queue_inbox_delayed(_api::AdminApi; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_admin_queue_inbox_delayed_AdminApi, "/admin/queue/inbox-delayed", ["bearerAuth", ])
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""admin/queue/inbox-delayed

No description provided.  **Credential required**: *Yes* / **Permission**: *read:admin:queue*

Params:

Return: Vector{Vector{AdminQueueDeliverDelayed200ResponseInnerInner}}, OpenAPI.Clients.ApiResponse
"""
function admin_queue_inbox_delayed(_api::AdminApi; _mediaType=nothing)
    _ctx = _oacinternal_admin_queue_inbox_delayed(_api; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function admin_queue_inbox_delayed(_api::AdminApi, response_stream::Channel; _mediaType=nothing)
    _ctx = _oacinternal_admin_queue_inbox_delayed(_api; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_admin_queue_promote_AdminApi = Dict{Regex,Type}(
    Regex("^" * replace("204", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_admin_queue_promote(_api::AdminApi, admin_queue_promote_request::AdminQueuePromoteRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_admin_queue_promote_AdminApi, "/admin/queue/promote", ["bearerAuth", ], admin_queue_promote_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""admin/queue/promote

No description provided.  **Credential required**: *Yes* / **Permission**: *write:admin:queue*

Params:
- admin_queue_promote_request::AdminQueuePromoteRequest (required)

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function admin_queue_promote(_api::AdminApi, admin_queue_promote_request::AdminQueuePromoteRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_queue_promote(_api, admin_queue_promote_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function admin_queue_promote(_api::AdminApi, response_stream::Channel, admin_queue_promote_request::AdminQueuePromoteRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_queue_promote(_api, admin_queue_promote_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_admin_queue_stats_AdminApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => AdminQueueStats200Response,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_admin_queue_stats(_api::AdminApi; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_admin_queue_stats_AdminApi, "/admin/queue/stats", ["bearerAuth", ])
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""admin/queue/stats

No description provided.  **Credential required**: *Yes* / **Permission**: *read:admin:emoji*

Params:

Return: AdminQueueStats200Response, OpenAPI.Clients.ApiResponse
"""
function admin_queue_stats(_api::AdminApi; _mediaType=nothing)
    _ctx = _oacinternal_admin_queue_stats(_api; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function admin_queue_stats(_api::AdminApi, response_stream::Channel; _mediaType=nothing)
    _ctx = _oacinternal_admin_queue_stats(_api; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_admin_relays_add_AdminApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => AdminRelaysAdd200Response,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_admin_relays_add(_api::AdminApi, admin_relays_add_request::AdminRelaysAddRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_admin_relays_add_AdminApi, "/admin/relays/add", ["bearerAuth", ], admin_relays_add_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""admin/relays/add

No description provided.  **Credential required**: *Yes* / **Permission**: *write:admin:relays*

Params:
- admin_relays_add_request::AdminRelaysAddRequest (required)

Return: AdminRelaysAdd200Response, OpenAPI.Clients.ApiResponse
"""
function admin_relays_add(_api::AdminApi, admin_relays_add_request::AdminRelaysAddRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_relays_add(_api, admin_relays_add_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function admin_relays_add(_api::AdminApi, response_stream::Channel, admin_relays_add_request::AdminRelaysAddRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_relays_add(_api, admin_relays_add_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_admin_relays_list_AdminApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Vector{AdminRelaysAdd200Response},
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_admin_relays_list(_api::AdminApi; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_admin_relays_list_AdminApi, "/admin/relays/list", ["bearerAuth", ])
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""admin/relays/list

No description provided.  **Credential required**: *Yes* / **Permission**: *read:admin:relays*

Params:

Return: Vector{AdminRelaysAdd200Response}, OpenAPI.Clients.ApiResponse
"""
function admin_relays_list(_api::AdminApi; _mediaType=nothing)
    _ctx = _oacinternal_admin_relays_list(_api; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function admin_relays_list(_api::AdminApi, response_stream::Channel; _mediaType=nothing)
    _ctx = _oacinternal_admin_relays_list(_api; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_admin_relays_remove_AdminApi = Dict{Regex,Type}(
    Regex("^" * replace("204", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_admin_relays_remove(_api::AdminApi, admin_relays_add_request::AdminRelaysAddRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_admin_relays_remove_AdminApi, "/admin/relays/remove", ["bearerAuth", ], admin_relays_add_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""admin/relays/remove

No description provided.  **Credential required**: *Yes* / **Permission**: *write:admin:relays*

Params:
- admin_relays_add_request::AdminRelaysAddRequest (required)

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function admin_relays_remove(_api::AdminApi, admin_relays_add_request::AdminRelaysAddRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_relays_remove(_api, admin_relays_add_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function admin_relays_remove(_api::AdminApi, response_stream::Channel, admin_relays_add_request::AdminRelaysAddRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_relays_remove(_api, admin_relays_add_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_admin_reset_password_AdminApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => AdminResetPassword200Response,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_admin_reset_password(_api::AdminApi, admin_accounts_delete_request::AdminAccountsDeleteRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_admin_reset_password_AdminApi, "/admin/reset-password", ["bearerAuth", ], admin_accounts_delete_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""admin/reset-password

No description provided.  **Credential required**: *Yes* / **Permission**: *write:admin:reset-password*

Params:
- admin_accounts_delete_request::AdminAccountsDeleteRequest (required)

Return: AdminResetPassword200Response, OpenAPI.Clients.ApiResponse
"""
function admin_reset_password(_api::AdminApi, admin_accounts_delete_request::AdminAccountsDeleteRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_reset_password(_api, admin_accounts_delete_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function admin_reset_password(_api::AdminApi, response_stream::Channel, admin_accounts_delete_request::AdminAccountsDeleteRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_reset_password(_api, admin_accounts_delete_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_admin_resolve_abuse_user_report_AdminApi = Dict{Regex,Type}(
    Regex("^" * replace("204", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_admin_resolve_abuse_user_report(_api::AdminApi, admin_resolve_abuse_user_report_request::AdminResolveAbuseUserReportRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_admin_resolve_abuse_user_report_AdminApi, "/admin/resolve-abuse-user-report", ["bearerAuth", ], admin_resolve_abuse_user_report_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""admin/resolve-abuse-user-report

No description provided.  **Credential required**: *Yes* / **Permission**: *write:admin:resolve-abuse-user-report*

Params:
- admin_resolve_abuse_user_report_request::AdminResolveAbuseUserReportRequest (required)

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function admin_resolve_abuse_user_report(_api::AdminApi, admin_resolve_abuse_user_report_request::AdminResolveAbuseUserReportRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_resolve_abuse_user_report(_api, admin_resolve_abuse_user_report_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function admin_resolve_abuse_user_report(_api::AdminApi, response_stream::Channel, admin_resolve_abuse_user_report_request::AdminResolveAbuseUserReportRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_resolve_abuse_user_report(_api, admin_resolve_abuse_user_report_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_admin_roles_assign_AdminApi = Dict{Regex,Type}(
    Regex("^" * replace("204", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_admin_roles_assign(_api::AdminApi, admin_roles_assign_request::AdminRolesAssignRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_admin_roles_assign_AdminApi, "/admin/roles/assign", ["bearerAuth", ], admin_roles_assign_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""admin/roles/assign

No description provided.  **Credential required**: *Yes* / **Permission**: *write:admin:roles*

Params:
- admin_roles_assign_request::AdminRolesAssignRequest (required)

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function admin_roles_assign(_api::AdminApi, admin_roles_assign_request::AdminRolesAssignRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_roles_assign(_api, admin_roles_assign_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function admin_roles_assign(_api::AdminApi, response_stream::Channel, admin_roles_assign_request::AdminRolesAssignRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_roles_assign(_api, admin_roles_assign_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_admin_roles_create_AdminApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Role,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_admin_roles_create(_api::AdminApi, admin_roles_create_request::AdminRolesCreateRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_admin_roles_create_AdminApi, "/admin/roles/create", ["bearerAuth", ], admin_roles_create_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""admin/roles/create

No description provided.  **Credential required**: *Yes* / **Permission**: *write:admin:roles*

Params:
- admin_roles_create_request::AdminRolesCreateRequest (required)

Return: Role, OpenAPI.Clients.ApiResponse
"""
function admin_roles_create(_api::AdminApi, admin_roles_create_request::AdminRolesCreateRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_roles_create(_api, admin_roles_create_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function admin_roles_create(_api::AdminApi, response_stream::Channel, admin_roles_create_request::AdminRolesCreateRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_roles_create(_api, admin_roles_create_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_admin_roles_delete_AdminApi = Dict{Regex,Type}(
    Regex("^" * replace("204", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_admin_roles_delete(_api::AdminApi, admin_roles_delete_request::AdminRolesDeleteRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_admin_roles_delete_AdminApi, "/admin/roles/delete", ["bearerAuth", ], admin_roles_delete_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""admin/roles/delete

No description provided.  **Credential required**: *Yes* / **Permission**: *write:admin:roles*

Params:
- admin_roles_delete_request::AdminRolesDeleteRequest (required)

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function admin_roles_delete(_api::AdminApi, admin_roles_delete_request::AdminRolesDeleteRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_roles_delete(_api, admin_roles_delete_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function admin_roles_delete(_api::AdminApi, response_stream::Channel, admin_roles_delete_request::AdminRolesDeleteRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_roles_delete(_api, admin_roles_delete_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_admin_roles_list_AdminApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Vector{Role},
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_admin_roles_list(_api::AdminApi; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_admin_roles_list_AdminApi, "/admin/roles/list", ["bearerAuth", ])
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""admin/roles/list

No description provided.  **Credential required**: *Yes* / **Permission**: *read:admin:roles*

Params:

Return: Vector{Role}, OpenAPI.Clients.ApiResponse
"""
function admin_roles_list(_api::AdminApi; _mediaType=nothing)
    _ctx = _oacinternal_admin_roles_list(_api; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function admin_roles_list(_api::AdminApi, response_stream::Channel; _mediaType=nothing)
    _ctx = _oacinternal_admin_roles_list(_api; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_admin_roles_show_AdminApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Role,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_admin_roles_show(_api::AdminApi, admin_roles_delete_request::AdminRolesDeleteRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_admin_roles_show_AdminApi, "/admin/roles/show", ["bearerAuth", ], admin_roles_delete_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""admin/roles/show

No description provided.  **Credential required**: *Yes* / **Permission**: *read:admin:roles*

Params:
- admin_roles_delete_request::AdminRolesDeleteRequest (required)

Return: Role, OpenAPI.Clients.ApiResponse
"""
function admin_roles_show(_api::AdminApi, admin_roles_delete_request::AdminRolesDeleteRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_roles_show(_api, admin_roles_delete_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function admin_roles_show(_api::AdminApi, response_stream::Channel, admin_roles_delete_request::AdminRolesDeleteRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_roles_show(_api, admin_roles_delete_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_admin_roles_unassign_AdminApi = Dict{Regex,Type}(
    Regex("^" * replace("204", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_admin_roles_unassign(_api::AdminApi, admin_roles_unassign_request::AdminRolesUnassignRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_admin_roles_unassign_AdminApi, "/admin/roles/unassign", ["bearerAuth", ], admin_roles_unassign_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""admin/roles/unassign

No description provided.  **Credential required**: *Yes* / **Permission**: *write:admin:roles*

Params:
- admin_roles_unassign_request::AdminRolesUnassignRequest (required)

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function admin_roles_unassign(_api::AdminApi, admin_roles_unassign_request::AdminRolesUnassignRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_roles_unassign(_api, admin_roles_unassign_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function admin_roles_unassign(_api::AdminApi, response_stream::Channel, admin_roles_unassign_request::AdminRolesUnassignRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_roles_unassign(_api, admin_roles_unassign_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_admin_roles_update_AdminApi = Dict{Regex,Type}(
    Regex("^" * replace("204", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_admin_roles_update(_api::AdminApi, admin_roles_update_request::AdminRolesUpdateRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_admin_roles_update_AdminApi, "/admin/roles/update", ["bearerAuth", ], admin_roles_update_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""admin/roles/update

No description provided.  **Credential required**: *Yes* / **Permission**: *write:admin:roles*

Params:
- admin_roles_update_request::AdminRolesUpdateRequest (required)

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function admin_roles_update(_api::AdminApi, admin_roles_update_request::AdminRolesUpdateRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_roles_update(_api, admin_roles_update_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function admin_roles_update(_api::AdminApi, response_stream::Channel, admin_roles_update_request::AdminRolesUpdateRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_roles_update(_api, admin_roles_update_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_admin_roles_update_default_policies_AdminApi = Dict{Regex,Type}(
    Regex("^" * replace("204", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_admin_roles_update_default_policies(_api::AdminApi, admin_roles_update_default_policies_request::AdminRolesUpdateDefaultPoliciesRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_admin_roles_update_default_policies_AdminApi, "/admin/roles/update-default-policies", ["bearerAuth", ], admin_roles_update_default_policies_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""admin/roles/update-default-policies

No description provided.  **Credential required**: *Yes* / **Permission**: *write:admin:roles*

Params:
- admin_roles_update_default_policies_request::AdminRolesUpdateDefaultPoliciesRequest (required)

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function admin_roles_update_default_policies(_api::AdminApi, admin_roles_update_default_policies_request::AdminRolesUpdateDefaultPoliciesRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_roles_update_default_policies(_api, admin_roles_update_default_policies_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function admin_roles_update_default_policies(_api::AdminApi, response_stream::Channel, admin_roles_update_default_policies_request::AdminRolesUpdateDefaultPoliciesRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_roles_update_default_policies(_api, admin_roles_update_default_policies_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_admin_roles_users_AdminApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Vector{AdminRolesUsers200ResponseInner},
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_admin_roles_users(_api::AdminApi, admin_roles_users_request::AdminRolesUsersRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_admin_roles_users_AdminApi, "/admin/roles/users", [], admin_roles_users_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""admin/roles/users

No description provided.  **Credential required**: *No* / **Permission**: *read:admin:roles*

Params:
- admin_roles_users_request::AdminRolesUsersRequest (required)

Return: Vector{AdminRolesUsers200ResponseInner}, OpenAPI.Clients.ApiResponse
"""
function admin_roles_users(_api::AdminApi, admin_roles_users_request::AdminRolesUsersRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_roles_users(_api, admin_roles_users_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function admin_roles_users(_api::AdminApi, response_stream::Channel, admin_roles_users_request::AdminRolesUsersRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_roles_users(_api, admin_roles_users_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_admin_send_email_AdminApi = Dict{Regex,Type}(
    Regex("^" * replace("204", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_admin_send_email(_api::AdminApi, admin_send_email_request::AdminSendEmailRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_admin_send_email_AdminApi, "/admin/send-email", ["bearerAuth", ], admin_send_email_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""admin/send-email

No description provided.  **Credential required**: *Yes* / **Permission**: *write:admin:send-email*

Params:
- admin_send_email_request::AdminSendEmailRequest (required)

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function admin_send_email(_api::AdminApi, admin_send_email_request::AdminSendEmailRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_send_email(_api, admin_send_email_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function admin_send_email(_api::AdminApi, response_stream::Channel, admin_send_email_request::AdminSendEmailRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_send_email(_api, admin_send_email_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_admin_server_info_AdminApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => AdminServerInfo200Response,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_admin_server_info(_api::AdminApi; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_admin_server_info_AdminApi, "/admin/server-info", ["bearerAuth", ])
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""admin/server-info

No description provided.  **Credential required**: *Yes* / **Permission**: *read:admin:server-info*

Params:

Return: AdminServerInfo200Response, OpenAPI.Clients.ApiResponse
"""
function admin_server_info(_api::AdminApi; _mediaType=nothing)
    _ctx = _oacinternal_admin_server_info(_api; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function admin_server_info(_api::AdminApi, response_stream::Channel; _mediaType=nothing)
    _ctx = _oacinternal_admin_server_info(_api; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_admin_show_moderation_logs_AdminApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Vector{AdminShowModerationLogs200ResponseInner},
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_admin_show_moderation_logs(_api::AdminApi, admin_show_moderation_logs_request::AdminShowModerationLogsRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_admin_show_moderation_logs_AdminApi, "/admin/show-moderation-logs", ["bearerAuth", ], admin_show_moderation_logs_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""admin/show-moderation-logs

No description provided.  **Credential required**: *Yes* / **Permission**: *read:admin:show-moderation-log*

Params:
- admin_show_moderation_logs_request::AdminShowModerationLogsRequest (required)

Return: Vector{AdminShowModerationLogs200ResponseInner}, OpenAPI.Clients.ApiResponse
"""
function admin_show_moderation_logs(_api::AdminApi, admin_show_moderation_logs_request::AdminShowModerationLogsRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_show_moderation_logs(_api, admin_show_moderation_logs_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function admin_show_moderation_logs(_api::AdminApi, response_stream::Channel, admin_show_moderation_logs_request::AdminShowModerationLogsRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_show_moderation_logs(_api, admin_show_moderation_logs_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_admin_show_user_AdminApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => AdminShowUser200Response,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_admin_show_user(_api::AdminApi, admin_accounts_delete_request::AdminAccountsDeleteRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_admin_show_user_AdminApi, "/admin/show-user", ["bearerAuth", ], admin_accounts_delete_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""admin/show-user

No description provided.  **Credential required**: *Yes* / **Permission**: *read:admin:show-user*

Params:
- admin_accounts_delete_request::AdminAccountsDeleteRequest (required)

Return: AdminShowUser200Response, OpenAPI.Clients.ApiResponse
"""
function admin_show_user(_api::AdminApi, admin_accounts_delete_request::AdminAccountsDeleteRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_show_user(_api, admin_accounts_delete_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function admin_show_user(_api::AdminApi, response_stream::Channel, admin_accounts_delete_request::AdminAccountsDeleteRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_show_user(_api, admin_accounts_delete_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_admin_show_users_AdminApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Vector{UserDetailed},
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_admin_show_users(_api::AdminApi, admin_show_users_request::AdminShowUsersRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_admin_show_users_AdminApi, "/admin/show-users", ["bearerAuth", ], admin_show_users_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""admin/show-users

No description provided.  **Credential required**: *Yes* / **Permission**: *read:admin:show-user*

Params:
- admin_show_users_request::AdminShowUsersRequest (required)

Return: Vector{UserDetailed}, OpenAPI.Clients.ApiResponse
"""
function admin_show_users(_api::AdminApi, admin_show_users_request::AdminShowUsersRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_show_users(_api, admin_show_users_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function admin_show_users(_api::AdminApi, response_stream::Channel, admin_show_users_request::AdminShowUsersRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_show_users(_api, admin_show_users_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_admin_suspend_user_AdminApi = Dict{Regex,Type}(
    Regex("^" * replace("204", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_admin_suspend_user(_api::AdminApi, admin_accounts_delete_request::AdminAccountsDeleteRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_admin_suspend_user_AdminApi, "/admin/suspend-user", ["bearerAuth", ], admin_accounts_delete_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""admin/suspend-user

No description provided.  **Credential required**: *Yes* / **Permission**: *write:admin:suspend-user*

Params:
- admin_accounts_delete_request::AdminAccountsDeleteRequest (required)

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function admin_suspend_user(_api::AdminApi, admin_accounts_delete_request::AdminAccountsDeleteRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_suspend_user(_api, admin_accounts_delete_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function admin_suspend_user(_api::AdminApi, response_stream::Channel, admin_accounts_delete_request::AdminAccountsDeleteRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_suspend_user(_api, admin_accounts_delete_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_admin_unset_user_avatar_AdminApi = Dict{Regex,Type}(
    Regex("^" * replace("204", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_admin_unset_user_avatar(_api::AdminApi, admin_accounts_delete_request::AdminAccountsDeleteRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_admin_unset_user_avatar_AdminApi, "/admin/unset-user-avatar", ["bearerAuth", ], admin_accounts_delete_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""admin/unset-user-avatar

No description provided.  **Credential required**: *Yes* / **Permission**: *write:admin:unset-user-avatar*

Params:
- admin_accounts_delete_request::AdminAccountsDeleteRequest (required)

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function admin_unset_user_avatar(_api::AdminApi, admin_accounts_delete_request::AdminAccountsDeleteRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_unset_user_avatar(_api, admin_accounts_delete_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function admin_unset_user_avatar(_api::AdminApi, response_stream::Channel, admin_accounts_delete_request::AdminAccountsDeleteRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_unset_user_avatar(_api, admin_accounts_delete_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_admin_unset_user_banner_AdminApi = Dict{Regex,Type}(
    Regex("^" * replace("204", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_admin_unset_user_banner(_api::AdminApi, admin_accounts_delete_request::AdminAccountsDeleteRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_admin_unset_user_banner_AdminApi, "/admin/unset-user-banner", ["bearerAuth", ], admin_accounts_delete_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""admin/unset-user-banner

No description provided.  **Credential required**: *Yes* / **Permission**: *write:admin:unset-user-banner*

Params:
- admin_accounts_delete_request::AdminAccountsDeleteRequest (required)

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function admin_unset_user_banner(_api::AdminApi, admin_accounts_delete_request::AdminAccountsDeleteRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_unset_user_banner(_api, admin_accounts_delete_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function admin_unset_user_banner(_api::AdminApi, response_stream::Channel, admin_accounts_delete_request::AdminAccountsDeleteRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_unset_user_banner(_api, admin_accounts_delete_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_admin_unsuspend_user_AdminApi = Dict{Regex,Type}(
    Regex("^" * replace("204", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_admin_unsuspend_user(_api::AdminApi, admin_accounts_delete_request::AdminAccountsDeleteRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_admin_unsuspend_user_AdminApi, "/admin/unsuspend-user", ["bearerAuth", ], admin_accounts_delete_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""admin/unsuspend-user

No description provided.  **Credential required**: *Yes* / **Permission**: *write:admin:unsuspend-user*

Params:
- admin_accounts_delete_request::AdminAccountsDeleteRequest (required)

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function admin_unsuspend_user(_api::AdminApi, admin_accounts_delete_request::AdminAccountsDeleteRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_unsuspend_user(_api, admin_accounts_delete_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function admin_unsuspend_user(_api::AdminApi, response_stream::Channel, admin_accounts_delete_request::AdminAccountsDeleteRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_unsuspend_user(_api, admin_accounts_delete_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_admin_update_meta_AdminApi = Dict{Regex,Type}(
    Regex("^" * replace("204", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_admin_update_meta(_api::AdminApi, admin_update_meta_request::AdminUpdateMetaRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_admin_update_meta_AdminApi, "/admin/update-meta", ["bearerAuth", ], admin_update_meta_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""admin/update-meta

No description provided.  **Credential required**: *Yes* / **Permission**: *write:admin:meta*

Params:
- admin_update_meta_request::AdminUpdateMetaRequest (required)

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function admin_update_meta(_api::AdminApi, admin_update_meta_request::AdminUpdateMetaRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_update_meta(_api, admin_update_meta_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function admin_update_meta(_api::AdminApi, response_stream::Channel, admin_update_meta_request::AdminUpdateMetaRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_update_meta(_api, admin_update_meta_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_admin_update_user_note_AdminApi = Dict{Regex,Type}(
    Regex("^" * replace("204", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_admin_update_user_note(_api::AdminApi, admin_update_user_note_request::AdminUpdateUserNoteRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_admin_update_user_note_AdminApi, "/admin/update-user-note", ["bearerAuth", ], admin_update_user_note_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""admin/update-user-note

No description provided.  **Credential required**: *Yes* / **Permission**: *write:admin:user-note*

Params:
- admin_update_user_note_request::AdminUpdateUserNoteRequest (required)

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function admin_update_user_note(_api::AdminApi, admin_update_user_note_request::AdminUpdateUserNoteRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_update_user_note(_api, admin_update_user_note_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function admin_update_user_note(_api::AdminApi, response_stream::Channel, admin_update_user_note_request::AdminUpdateUserNoteRequest; _mediaType=nothing)
    _ctx = _oacinternal_admin_update_user_note(_api, admin_update_user_note_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

export admin_abuse_user_reports
export admin_accounts_create
export admin_accounts_delete
export admin_accounts_find_by_email
export admin_ad_create
export admin_ad_delete
export admin_ad_list
export admin_ad_update
export admin_announcements_create
export admin_announcements_delete
export admin_announcements_list
export admin_announcements_update
export admin_avatar_decorations_create
export admin_avatar_decorations_delete
export admin_avatar_decorations_list
export admin_avatar_decorations_update
export admin_delete_account
export admin_delete_all_files_of_a_user
export admin_drive_clean_remote_files
export admin_drive_cleanup
export admin_drive_files
export admin_drive_show_file
export admin_emoji_add
export admin_emoji_add_aliases_bulk
export admin_emoji_copy
export admin_emoji_delete
export admin_emoji_delete_bulk
export admin_emoji_list
export admin_emoji_list_remote
export admin_emoji_remove_aliases_bulk
export admin_emoji_set_aliases_bulk
export admin_emoji_set_category_bulk
export admin_emoji_set_license_bulk
export admin_emoji_update
export admin_federation_delete_all_files
export admin_federation_refresh_remote_instance_metadata
export admin_federation_remove_all_following
export admin_federation_update_instance
export admin_get_index_stats
export admin_get_table_stats
export admin_get_user_ips
export admin_invite_create
export admin_invite_list
export admin_promo_create
export admin_queue_clear
export admin_queue_deliver_delayed
export admin_queue_inbox_delayed
export admin_queue_promote
export admin_queue_stats
export admin_relays_add
export admin_relays_list
export admin_relays_remove
export admin_reset_password
export admin_resolve_abuse_user_report
export admin_roles_assign
export admin_roles_create
export admin_roles_delete
export admin_roles_list
export admin_roles_show
export admin_roles_unassign
export admin_roles_update
export admin_roles_update_default_policies
export admin_roles_users
export admin_send_email
export admin_server_info
export admin_show_moderation_logs
export admin_show_user
export admin_show_users
export admin_suspend_user
export admin_unset_user_avatar
export admin_unset_user_banner
export admin_unsuspend_user
export admin_update_meta
export admin_update_user_note
