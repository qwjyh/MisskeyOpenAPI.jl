# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.

struct RoleApi <: OpenAPI.APIClientImpl
    client::OpenAPI.Clients.Client
end

"""
The default API base path for APIs in `RoleApi`.
This can be used to construct the `OpenAPI.Clients.Client` instance.
"""
basepath(::Type{ RoleApi }) = "https://misskey.qwjyh.net/api"

const _returntypes_roles_list_RoleApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Vector{Role},
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_roles_list(_api::RoleApi; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_roles_list_RoleApi, "/roles/list", ["bearerAuth", ])
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""roles/list

No description provided.  **Credential required**: *Yes* / **Permission**: *read:account*

Params:

Return: Vector{Role}, OpenAPI.Clients.ApiResponse
"""
function roles_list(_api::RoleApi; _mediaType=nothing)
    _ctx = _oacinternal_roles_list(_api; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function roles_list(_api::RoleApi, response_stream::Channel; _mediaType=nothing)
    _ctx = _oacinternal_roles_list(_api; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_roles_notes_RoleApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Vector{Note},
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_roles_notes(_api::RoleApi, roles_notes_request::RolesNotesRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_roles_notes_RoleApi, "/roles/notes", ["bearerAuth", ], roles_notes_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""roles/notes

No description provided.  **Credential required**: *Yes* / **Permission**: *read:account*

Params:
- roles_notes_request::RolesNotesRequest (required)

Return: Vector{Note}, OpenAPI.Clients.ApiResponse
"""
function roles_notes(_api::RoleApi, roles_notes_request::RolesNotesRequest; _mediaType=nothing)
    _ctx = _oacinternal_roles_notes(_api, roles_notes_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function roles_notes(_api::RoleApi, response_stream::Channel, roles_notes_request::RolesNotesRequest; _mediaType=nothing)
    _ctx = _oacinternal_roles_notes(_api, roles_notes_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_roles_show_RoleApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Role,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_roles_show(_api::RoleApi, admin_roles_delete_request::AdminRolesDeleteRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_roles_show_RoleApi, "/roles/show", [], admin_roles_delete_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""roles/show

No description provided.  **Credential required**: *No*

Params:
- admin_roles_delete_request::AdminRolesDeleteRequest (required)

Return: Role, OpenAPI.Clients.ApiResponse
"""
function roles_show(_api::RoleApi, admin_roles_delete_request::AdminRolesDeleteRequest; _mediaType=nothing)
    _ctx = _oacinternal_roles_show(_api, admin_roles_delete_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function roles_show(_api::RoleApi, response_stream::Channel, admin_roles_delete_request::AdminRolesDeleteRequest; _mediaType=nothing)
    _ctx = _oacinternal_roles_show(_api, admin_roles_delete_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_roles_users_RoleApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Vector{RolesUsers200ResponseInner},
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_roles_users(_api::RoleApi, admin_roles_users_request::AdminRolesUsersRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_roles_users_RoleApi, "/roles/users", [], admin_roles_users_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""roles/users

No description provided.  **Credential required**: *No*

Params:
- admin_roles_users_request::AdminRolesUsersRequest (required)

Return: Vector{RolesUsers200ResponseInner}, OpenAPI.Clients.ApiResponse
"""
function roles_users(_api::RoleApi, admin_roles_users_request::AdminRolesUsersRequest; _mediaType=nothing)
    _ctx = _oacinternal_roles_users(_api, admin_roles_users_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function roles_users(_api::RoleApi, response_stream::Channel, admin_roles_users_request::AdminRolesUsersRequest; _mediaType=nothing)
    _ctx = _oacinternal_roles_users(_api, admin_roles_users_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

export roles_list
export roles_notes
export roles_show
export roles_users
