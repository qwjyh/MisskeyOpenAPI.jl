# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.

struct AccountApi <: OpenAPI.APIClientImpl
    client::OpenAPI.Clients.Client
end

"""
The default API base path for APIs in `AccountApi`.
This can be used to construct the `OpenAPI.Clients.Client` instance.
"""
basepath(::Type{ AccountApi }) = "https://misskey.qwjyh.net/api"

const _returntypes_blocking_create_AccountApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => UserDetailedNotMe,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("429", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_blocking_create(_api::AccountApi, admin_accounts_delete_request::AdminAccountsDeleteRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_blocking_create_AccountApi, "/blocking/create", ["bearerAuth", ], admin_accounts_delete_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""blocking/create

No description provided.  **Credential required**: *Yes* / **Permission**: *write:blocks*

Params:
- admin_accounts_delete_request::AdminAccountsDeleteRequest (required)

Return: UserDetailedNotMe, OpenAPI.Clients.ApiResponse
"""
function blocking_create(_api::AccountApi, admin_accounts_delete_request::AdminAccountsDeleteRequest; _mediaType=nothing)
    _ctx = _oacinternal_blocking_create(_api, admin_accounts_delete_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function blocking_create(_api::AccountApi, response_stream::Channel, admin_accounts_delete_request::AdminAccountsDeleteRequest; _mediaType=nothing)
    _ctx = _oacinternal_blocking_create(_api, admin_accounts_delete_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_blocking_delete_AccountApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => UserDetailedNotMe,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("429", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_blocking_delete(_api::AccountApi, admin_accounts_delete_request::AdminAccountsDeleteRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_blocking_delete_AccountApi, "/blocking/delete", ["bearerAuth", ], admin_accounts_delete_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""blocking/delete

No description provided.  **Credential required**: *Yes* / **Permission**: *write:blocks*

Params:
- admin_accounts_delete_request::AdminAccountsDeleteRequest (required)

Return: UserDetailedNotMe, OpenAPI.Clients.ApiResponse
"""
function blocking_delete(_api::AccountApi, admin_accounts_delete_request::AdminAccountsDeleteRequest; _mediaType=nothing)
    _ctx = _oacinternal_blocking_delete(_api, admin_accounts_delete_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function blocking_delete(_api::AccountApi, response_stream::Channel, admin_accounts_delete_request::AdminAccountsDeleteRequest; _mediaType=nothing)
    _ctx = _oacinternal_blocking_delete(_api, admin_accounts_delete_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_blocking_list_AccountApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Vector{Blocking},
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_blocking_list(_api::AccountApi, blocking_list_request::BlockingListRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_blocking_list_AccountApi, "/blocking/list", ["bearerAuth", ], blocking_list_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""blocking/list

No description provided.  **Credential required**: *Yes* / **Permission**: *read:blocks*

Params:
- blocking_list_request::BlockingListRequest (required)

Return: Vector{Blocking}, OpenAPI.Clients.ApiResponse
"""
function blocking_list(_api::AccountApi, blocking_list_request::BlockingListRequest; _mediaType=nothing)
    _ctx = _oacinternal_blocking_list(_api, blocking_list_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function blocking_list(_api::AccountApi, response_stream::Channel, blocking_list_request::BlockingListRequest; _mediaType=nothing)
    _ctx = _oacinternal_blocking_list(_api, blocking_list_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_clips_add_note_AccountApi = Dict{Regex,Type}(
    Regex("^" * replace("204", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("429", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_clips_add_note(_api::AccountApi, clips_add_note_request::ClipsAddNoteRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_clips_add_note_AccountApi, "/clips/add-note", ["bearerAuth", ], clips_add_note_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""clips/add-note

No description provided.  **Credential required**: *Yes* / **Permission**: *write:account*

Params:
- clips_add_note_request::ClipsAddNoteRequest (required)

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function clips_add_note(_api::AccountApi, clips_add_note_request::ClipsAddNoteRequest; _mediaType=nothing)
    _ctx = _oacinternal_clips_add_note(_api, clips_add_note_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function clips_add_note(_api::AccountApi, response_stream::Channel, clips_add_note_request::ClipsAddNoteRequest; _mediaType=nothing)
    _ctx = _oacinternal_clips_add_note(_api, clips_add_note_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_clips_my_favorites_AccountApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Vector{Clip},
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_clips_my_favorites(_api::AccountApi; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_clips_my_favorites_AccountApi, "/clips/my-favorites", ["bearerAuth", ])
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""clips/my-favorites

No description provided.  **Credential required**: *Yes* / **Permission**: *read:clip-favorite*

Params:

Return: Vector{Clip}, OpenAPI.Clients.ApiResponse
"""
function clips_my_favorites(_api::AccountApi; _mediaType=nothing)
    _ctx = _oacinternal_clips_my_favorites(_api; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function clips_my_favorites(_api::AccountApi, response_stream::Channel; _mediaType=nothing)
    _ctx = _oacinternal_clips_my_favorites(_api; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_clips_notes_AccountApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Vector{Note},
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_clips_notes(_api::AccountApi, clips_notes_request::ClipsNotesRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_clips_notes_AccountApi, "/clips/notes", [], clips_notes_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""clips/notes

No description provided.  **Credential required**: *No* / **Permission**: *read:account*

Params:
- clips_notes_request::ClipsNotesRequest (required)

Return: Vector{Note}, OpenAPI.Clients.ApiResponse
"""
function clips_notes(_api::AccountApi, clips_notes_request::ClipsNotesRequest; _mediaType=nothing)
    _ctx = _oacinternal_clips_notes(_api, clips_notes_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function clips_notes(_api::AccountApi, response_stream::Channel, clips_notes_request::ClipsNotesRequest; _mediaType=nothing)
    _ctx = _oacinternal_clips_notes(_api, clips_notes_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_clips_remove_note_AccountApi = Dict{Regex,Type}(
    Regex("^" * replace("204", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_clips_remove_note(_api::AccountApi, clips_add_note_request::ClipsAddNoteRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_clips_remove_note_AccountApi, "/clips/remove-note", ["bearerAuth", ], clips_add_note_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""clips/remove-note

No description provided.  **Credential required**: *Yes* / **Permission**: *write:account*

Params:
- clips_add_note_request::ClipsAddNoteRequest (required)

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function clips_remove_note(_api::AccountApi, clips_add_note_request::ClipsAddNoteRequest; _mediaType=nothing)
    _ctx = _oacinternal_clips_remove_note(_api, clips_add_note_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function clips_remove_note(_api::AccountApi, response_stream::Channel, clips_add_note_request::ClipsAddNoteRequest; _mediaType=nothing)
    _ctx = _oacinternal_clips_remove_note(_api, clips_add_note_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_flash_my_AccountApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Vector{Flash},
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_flash_my(_api::AccountApi, following_requests_list_request::FollowingRequestsListRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_flash_my_AccountApi, "/flash/my", ["bearerAuth", ], following_requests_list_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""flash/my

No description provided.  **Credential required**: *Yes* / **Permission**: *read:flash*

Params:
- following_requests_list_request::FollowingRequestsListRequest (required)

Return: Vector{Flash}, OpenAPI.Clients.ApiResponse
"""
function flash_my(_api::AccountApi, following_requests_list_request::FollowingRequestsListRequest; _mediaType=nothing)
    _ctx = _oacinternal_flash_my(_api, following_requests_list_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function flash_my(_api::AccountApi, response_stream::Channel, following_requests_list_request::FollowingRequestsListRequest; _mediaType=nothing)
    _ctx = _oacinternal_flash_my(_api, following_requests_list_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_flash_my_likes_AccountApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Vector{FlashMyLikes200ResponseInner},
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_flash_my_likes(_api::AccountApi, following_requests_list_request::FollowingRequestsListRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_flash_my_likes_AccountApi, "/flash/my-likes", ["bearerAuth", ], following_requests_list_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""flash/my-likes

No description provided.  **Credential required**: *Yes* / **Permission**: *read:flash-likes*

Params:
- following_requests_list_request::FollowingRequestsListRequest (required)

Return: Vector{FlashMyLikes200ResponseInner}, OpenAPI.Clients.ApiResponse
"""
function flash_my_likes(_api::AccountApi, following_requests_list_request::FollowingRequestsListRequest; _mediaType=nothing)
    _ctx = _oacinternal_flash_my_likes(_api, following_requests_list_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function flash_my_likes(_api::AccountApi, response_stream::Channel, following_requests_list_request::FollowingRequestsListRequest; _mediaType=nothing)
    _ctx = _oacinternal_flash_my_likes(_api, following_requests_list_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_i_AccountApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => MeDetailed,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_i(_api::AccountApi; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_i_AccountApi, "/i", ["bearerAuth", ])
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""i

No description provided.  **Credential required**: *Yes* / **Permission**: *read:account*

Params:

Return: MeDetailed, OpenAPI.Clients.ApiResponse
"""
function i(_api::AccountApi; _mediaType=nothing)
    _ctx = _oacinternal_i(_api; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function i(_api::AccountApi, response_stream::Channel; _mediaType=nothing)
    _ctx = _oacinternal_i(_api; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_i_favorites_AccountApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Vector{NoteFavorite},
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_i_favorites(_api::AccountApi, following_requests_list_request::FollowingRequestsListRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_i_favorites_AccountApi, "/i/favorites", ["bearerAuth", ], following_requests_list_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""i/favorites

No description provided.  **Credential required**: *Yes* / **Permission**: *read:favorites*

Params:
- following_requests_list_request::FollowingRequestsListRequest (required)

Return: Vector{NoteFavorite}, OpenAPI.Clients.ApiResponse
"""
function i_favorites(_api::AccountApi, following_requests_list_request::FollowingRequestsListRequest; _mediaType=nothing)
    _ctx = _oacinternal_i_favorites(_api, following_requests_list_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function i_favorites(_api::AccountApi, response_stream::Channel, following_requests_list_request::FollowingRequestsListRequest; _mediaType=nothing)
    _ctx = _oacinternal_i_favorites(_api, following_requests_list_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_i_gallery_likes_AccountApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Vector{IGalleryLikes200ResponseInner},
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_i_gallery_likes(_api::AccountApi, following_requests_list_request::FollowingRequestsListRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_i_gallery_likes_AccountApi, "/i/gallery/likes", ["bearerAuth", ], following_requests_list_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""i/gallery/likes

No description provided.  **Credential required**: *Yes* / **Permission**: *read:gallery-likes*

Params:
- following_requests_list_request::FollowingRequestsListRequest (required)

Return: Vector{IGalleryLikes200ResponseInner}, OpenAPI.Clients.ApiResponse
"""
function i_gallery_likes(_api::AccountApi, following_requests_list_request::FollowingRequestsListRequest; _mediaType=nothing)
    _ctx = _oacinternal_i_gallery_likes(_api, following_requests_list_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function i_gallery_likes(_api::AccountApi, response_stream::Channel, following_requests_list_request::FollowingRequestsListRequest; _mediaType=nothing)
    _ctx = _oacinternal_i_gallery_likes(_api, following_requests_list_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_i_gallery_posts_AccountApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Vector{GalleryPost},
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_i_gallery_posts(_api::AccountApi, following_requests_list_request::FollowingRequestsListRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_i_gallery_posts_AccountApi, "/i/gallery/posts", ["bearerAuth", ], following_requests_list_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""i/gallery/posts

No description provided.  **Credential required**: *Yes* / **Permission**: *read:gallery*

Params:
- following_requests_list_request::FollowingRequestsListRequest (required)

Return: Vector{GalleryPost}, OpenAPI.Clients.ApiResponse
"""
function i_gallery_posts(_api::AccountApi, following_requests_list_request::FollowingRequestsListRequest; _mediaType=nothing)
    _ctx = _oacinternal_i_gallery_posts(_api, following_requests_list_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function i_gallery_posts(_api::AccountApi, response_stream::Channel, following_requests_list_request::FollowingRequestsListRequest; _mediaType=nothing)
    _ctx = _oacinternal_i_gallery_posts(_api, following_requests_list_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_i_notifications_AccountApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Vector{Notification},
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("429", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_i_notifications(_api::AccountApi, i_notifications_request::INotificationsRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_i_notifications_AccountApi, "/i/notifications", ["bearerAuth", ], i_notifications_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""i/notifications

No description provided.  **Credential required**: *Yes* / **Permission**: *read:notifications*

Params:
- i_notifications_request::INotificationsRequest (required)

Return: Vector{Notification}, OpenAPI.Clients.ApiResponse
"""
function i_notifications(_api::AccountApi, i_notifications_request::INotificationsRequest; _mediaType=nothing)
    _ctx = _oacinternal_i_notifications(_api, i_notifications_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function i_notifications(_api::AccountApi, response_stream::Channel, i_notifications_request::INotificationsRequest; _mediaType=nothing)
    _ctx = _oacinternal_i_notifications(_api, i_notifications_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_i_notifications_grouped_AccountApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Vector{Notification},
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("429", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_i_notifications_grouped(_api::AccountApi, i_notifications_grouped_request::INotificationsGroupedRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_i_notifications_grouped_AccountApi, "/i/notifications-grouped", ["bearerAuth", ], i_notifications_grouped_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""i/notifications-grouped

No description provided.  **Credential required**: *Yes* / **Permission**: *read:notifications*

Params:
- i_notifications_grouped_request::INotificationsGroupedRequest (required)

Return: Vector{Notification}, OpenAPI.Clients.ApiResponse
"""
function i_notifications_grouped(_api::AccountApi, i_notifications_grouped_request::INotificationsGroupedRequest; _mediaType=nothing)
    _ctx = _oacinternal_i_notifications_grouped(_api, i_notifications_grouped_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function i_notifications_grouped(_api::AccountApi, response_stream::Channel, i_notifications_grouped_request::INotificationsGroupedRequest; _mediaType=nothing)
    _ctx = _oacinternal_i_notifications_grouped(_api, i_notifications_grouped_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_i_page_likes_AccountApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Vector{IPageLikes200ResponseInner},
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_i_page_likes(_api::AccountApi, following_requests_list_request::FollowingRequestsListRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_i_page_likes_AccountApi, "/i/page-likes", ["bearerAuth", ], following_requests_list_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""i/page-likes

No description provided.  **Credential required**: *Yes* / **Permission**: *read:page-likes*

Params:
- following_requests_list_request::FollowingRequestsListRequest (required)

Return: Vector{IPageLikes200ResponseInner}, OpenAPI.Clients.ApiResponse
"""
function i_page_likes(_api::AccountApi, following_requests_list_request::FollowingRequestsListRequest; _mediaType=nothing)
    _ctx = _oacinternal_i_page_likes(_api, following_requests_list_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function i_page_likes(_api::AccountApi, response_stream::Channel, following_requests_list_request::FollowingRequestsListRequest; _mediaType=nothing)
    _ctx = _oacinternal_i_page_likes(_api, following_requests_list_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_i_pages_AccountApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Vector{Page},
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_i_pages(_api::AccountApi, following_requests_list_request::FollowingRequestsListRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_i_pages_AccountApi, "/i/pages", ["bearerAuth", ], following_requests_list_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""i/pages

No description provided.  **Credential required**: *Yes* / **Permission**: *read:pages*

Params:
- following_requests_list_request::FollowingRequestsListRequest (required)

Return: Vector{Page}, OpenAPI.Clients.ApiResponse
"""
function i_pages(_api::AccountApi, following_requests_list_request::FollowingRequestsListRequest; _mediaType=nothing)
    _ctx = _oacinternal_i_pages(_api, following_requests_list_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function i_pages(_api::AccountApi, response_stream::Channel, following_requests_list_request::FollowingRequestsListRequest; _mediaType=nothing)
    _ctx = _oacinternal_i_pages(_api, following_requests_list_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_i_pin_AccountApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => MeDetailed,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_i_pin(_api::AccountApi, i_pin_request::IPinRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_i_pin_AccountApi, "/i/pin", ["bearerAuth", ], i_pin_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""i/pin

No description provided.  **Credential required**: *Yes* / **Permission**: *write:account*

Params:
- i_pin_request::IPinRequest (required)

Return: MeDetailed, OpenAPI.Clients.ApiResponse
"""
function i_pin(_api::AccountApi, i_pin_request::IPinRequest; _mediaType=nothing)
    _ctx = _oacinternal_i_pin(_api, i_pin_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function i_pin(_api::AccountApi, response_stream::Channel, i_pin_request::IPinRequest; _mediaType=nothing)
    _ctx = _oacinternal_i_pin(_api, i_pin_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_i_read_all_unread_notes_AccountApi = Dict{Regex,Type}(
    Regex("^" * replace("204", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_i_read_all_unread_notes(_api::AccountApi; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_i_read_all_unread_notes_AccountApi, "/i/read-all-unread-notes", ["bearerAuth", ])
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""i/read-all-unread-notes

No description provided.  **Credential required**: *Yes* / **Permission**: *write:account*

Params:

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function i_read_all_unread_notes(_api::AccountApi; _mediaType=nothing)
    _ctx = _oacinternal_i_read_all_unread_notes(_api; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function i_read_all_unread_notes(_api::AccountApi, response_stream::Channel; _mediaType=nothing)
    _ctx = _oacinternal_i_read_all_unread_notes(_api; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_i_read_announcement_AccountApi = Dict{Regex,Type}(
    Regex("^" * replace("204", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_i_read_announcement(_api::AccountApi, announcements_show_request::AnnouncementsShowRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_i_read_announcement_AccountApi, "/i/read-announcement", ["bearerAuth", ], announcements_show_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""i/read-announcement

No description provided.  **Credential required**: *Yes* / **Permission**: *write:account*

Params:
- announcements_show_request::AnnouncementsShowRequest (required)

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function i_read_announcement(_api::AccountApi, announcements_show_request::AnnouncementsShowRequest; _mediaType=nothing)
    _ctx = _oacinternal_i_read_announcement(_api, announcements_show_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function i_read_announcement(_api::AccountApi, response_stream::Channel, announcements_show_request::AnnouncementsShowRequest; _mediaType=nothing)
    _ctx = _oacinternal_i_read_announcement(_api, announcements_show_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_i_unpin_AccountApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => MeDetailed,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_i_unpin(_api::AccountApi, i_pin_request::IPinRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_i_unpin_AccountApi, "/i/unpin", ["bearerAuth", ], i_pin_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""i/unpin

No description provided.  **Credential required**: *Yes* / **Permission**: *write:account*

Params:
- i_pin_request::IPinRequest (required)

Return: MeDetailed, OpenAPI.Clients.ApiResponse
"""
function i_unpin(_api::AccountApi, i_pin_request::IPinRequest; _mediaType=nothing)
    _ctx = _oacinternal_i_unpin(_api, i_pin_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function i_unpin(_api::AccountApi, response_stream::Channel, i_pin_request::IPinRequest; _mediaType=nothing)
    _ctx = _oacinternal_i_unpin(_api, i_pin_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_i_update_AccountApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => MeDetailed,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("429", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_i_update(_api::AccountApi, i_update_request::IUpdateRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_i_update_AccountApi, "/i/update", ["bearerAuth", ], i_update_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""i/update

No description provided.  **Credential required**: *Yes* / **Permission**: *write:account*

Params:
- i_update_request::IUpdateRequest (required)

Return: MeDetailed, OpenAPI.Clients.ApiResponse
"""
function i_update(_api::AccountApi, i_update_request::IUpdateRequest; _mediaType=nothing)
    _ctx = _oacinternal_i_update(_api, i_update_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function i_update(_api::AccountApi, response_stream::Channel, i_update_request::IUpdateRequest; _mediaType=nothing)
    _ctx = _oacinternal_i_update(_api, i_update_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_mute_create_AccountApi = Dict{Regex,Type}(
    Regex("^" * replace("204", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("429", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_mute_create(_api::AccountApi, mute_create_request::MuteCreateRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_mute_create_AccountApi, "/mute/create", ["bearerAuth", ], mute_create_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""mute/create

No description provided.  **Credential required**: *Yes* / **Permission**: *write:mutes*

Params:
- mute_create_request::MuteCreateRequest (required)

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function mute_create(_api::AccountApi, mute_create_request::MuteCreateRequest; _mediaType=nothing)
    _ctx = _oacinternal_mute_create(_api, mute_create_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function mute_create(_api::AccountApi, response_stream::Channel, mute_create_request::MuteCreateRequest; _mediaType=nothing)
    _ctx = _oacinternal_mute_create(_api, mute_create_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_mute_delete_AccountApi = Dict{Regex,Type}(
    Regex("^" * replace("204", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_mute_delete(_api::AccountApi, admin_accounts_delete_request::AdminAccountsDeleteRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_mute_delete_AccountApi, "/mute/delete", ["bearerAuth", ], admin_accounts_delete_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""mute/delete

No description provided.  **Credential required**: *Yes* / **Permission**: *write:mutes*

Params:
- admin_accounts_delete_request::AdminAccountsDeleteRequest (required)

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function mute_delete(_api::AccountApi, admin_accounts_delete_request::AdminAccountsDeleteRequest; _mediaType=nothing)
    _ctx = _oacinternal_mute_delete(_api, admin_accounts_delete_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function mute_delete(_api::AccountApi, response_stream::Channel, admin_accounts_delete_request::AdminAccountsDeleteRequest; _mediaType=nothing)
    _ctx = _oacinternal_mute_delete(_api, admin_accounts_delete_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_mute_list_AccountApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Vector{Muting},
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_mute_list(_api::AccountApi, blocking_list_request::BlockingListRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_mute_list_AccountApi, "/mute/list", ["bearerAuth", ], blocking_list_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""mute/list

No description provided.  **Credential required**: *Yes* / **Permission**: *read:mutes*

Params:
- blocking_list_request::BlockingListRequest (required)

Return: Vector{Muting}, OpenAPI.Clients.ApiResponse
"""
function mute_list(_api::AccountApi, blocking_list_request::BlockingListRequest; _mediaType=nothing)
    _ctx = _oacinternal_mute_list(_api, blocking_list_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function mute_list(_api::AccountApi, response_stream::Channel, blocking_list_request::BlockingListRequest; _mediaType=nothing)
    _ctx = _oacinternal_mute_list(_api, blocking_list_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_my_apps_AccountApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Vector{App},
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_my_apps(_api::AccountApi, my_apps_request::MyAppsRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_my_apps_AccountApi, "/my/apps", ["bearerAuth", ], my_apps_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""my/apps

No description provided.  **Credential required**: *Yes* / **Permission**: *read:account*

Params:
- my_apps_request::MyAppsRequest (required)

Return: Vector{App}, OpenAPI.Clients.ApiResponse
"""
function my_apps(_api::AccountApi, my_apps_request::MyAppsRequest; _mediaType=nothing)
    _ctx = _oacinternal_my_apps(_api, my_apps_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function my_apps(_api::AccountApi, response_stream::Channel, my_apps_request::MyAppsRequest; _mediaType=nothing)
    _ctx = _oacinternal_my_apps(_api, my_apps_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_renote_mute_create_AccountApi = Dict{Regex,Type}(
    Regex("^" * replace("204", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("429", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_renote_mute_create(_api::AccountApi, admin_accounts_delete_request::AdminAccountsDeleteRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_renote_mute_create_AccountApi, "/renote-mute/create", ["bearerAuth", ], admin_accounts_delete_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""renote-mute/create

No description provided.  **Credential required**: *Yes* / **Permission**: *write:mutes*

Params:
- admin_accounts_delete_request::AdminAccountsDeleteRequest (required)

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function renote_mute_create(_api::AccountApi, admin_accounts_delete_request::AdminAccountsDeleteRequest; _mediaType=nothing)
    _ctx = _oacinternal_renote_mute_create(_api, admin_accounts_delete_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function renote_mute_create(_api::AccountApi, response_stream::Channel, admin_accounts_delete_request::AdminAccountsDeleteRequest; _mediaType=nothing)
    _ctx = _oacinternal_renote_mute_create(_api, admin_accounts_delete_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_renote_mute_delete_AccountApi = Dict{Regex,Type}(
    Regex("^" * replace("204", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_renote_mute_delete(_api::AccountApi, admin_accounts_delete_request::AdminAccountsDeleteRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_renote_mute_delete_AccountApi, "/renote-mute/delete", ["bearerAuth", ], admin_accounts_delete_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""renote-mute/delete

No description provided.  **Credential required**: *Yes* / **Permission**: *write:mutes*

Params:
- admin_accounts_delete_request::AdminAccountsDeleteRequest (required)

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function renote_mute_delete(_api::AccountApi, admin_accounts_delete_request::AdminAccountsDeleteRequest; _mediaType=nothing)
    _ctx = _oacinternal_renote_mute_delete(_api, admin_accounts_delete_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function renote_mute_delete(_api::AccountApi, response_stream::Channel, admin_accounts_delete_request::AdminAccountsDeleteRequest; _mediaType=nothing)
    _ctx = _oacinternal_renote_mute_delete(_api, admin_accounts_delete_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_renote_mute_list_AccountApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Vector{RenoteMuting},
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_renote_mute_list(_api::AccountApi, blocking_list_request::BlockingListRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_renote_mute_list_AccountApi, "/renote-mute/list", ["bearerAuth", ], blocking_list_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""renote-mute/list

No description provided.  **Credential required**: *Yes* / **Permission**: *read:mutes*

Params:
- blocking_list_request::BlockingListRequest (required)

Return: Vector{RenoteMuting}, OpenAPI.Clients.ApiResponse
"""
function renote_mute_list(_api::AccountApi, blocking_list_request::BlockingListRequest; _mediaType=nothing)
    _ctx = _oacinternal_renote_mute_list(_api, blocking_list_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function renote_mute_list(_api::AccountApi, response_stream::Channel, blocking_list_request::BlockingListRequest; _mediaType=nothing)
    _ctx = _oacinternal_renote_mute_list(_api, blocking_list_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_sw_register_AccountApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => SwRegister200Response,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_sw_register(_api::AccountApi, sw_register_request::SwRegisterRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_sw_register_AccountApi, "/sw/register", ["bearerAuth", ], sw_register_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""sw/register

Register to receive push notifications.  **Internal Endpoint**: This endpoint is an API for the misskey mainframe and is not intended for use by third parties. **Credential required**: *Yes*

Params:
- sw_register_request::SwRegisterRequest (required)

Return: SwRegister200Response, OpenAPI.Clients.ApiResponse
"""
function sw_register(_api::AccountApi, sw_register_request::SwRegisterRequest; _mediaType=nothing)
    _ctx = _oacinternal_sw_register(_api, sw_register_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function sw_register(_api::AccountApi, response_stream::Channel, sw_register_request::SwRegisterRequest; _mediaType=nothing)
    _ctx = _oacinternal_sw_register(_api, sw_register_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_sw_show_registration_AccountApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => SwShowRegistration200Response,
    Regex("^" * replace("204", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_sw_show_registration(_api::AccountApi, endpoint_request::EndpointRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_sw_show_registration_AccountApi, "/sw/show-registration", ["bearerAuth", ], endpoint_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""sw/show-registration

Check push notification registration exists.  **Internal Endpoint**: This endpoint is an API for the misskey mainframe and is not intended for use by third parties. **Credential required**: *Yes*

Params:
- endpoint_request::EndpointRequest (required)

Return: SwShowRegistration200Response, OpenAPI.Clients.ApiResponse
"""
function sw_show_registration(_api::AccountApi, endpoint_request::EndpointRequest; _mediaType=nothing)
    _ctx = _oacinternal_sw_show_registration(_api, endpoint_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function sw_show_registration(_api::AccountApi, response_stream::Channel, endpoint_request::EndpointRequest; _mediaType=nothing)
    _ctx = _oacinternal_sw_show_registration(_api, endpoint_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_sw_unregister_AccountApi = Dict{Regex,Type}(
    Regex("^" * replace("204", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_sw_unregister(_api::AccountApi, endpoint_request::EndpointRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_sw_unregister_AccountApi, "/sw/unregister", [], endpoint_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""sw/unregister

Unregister from receiving push notifications.  **Credential required**: *No*

Params:
- endpoint_request::EndpointRequest (required)

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function sw_unregister(_api::AccountApi, endpoint_request::EndpointRequest; _mediaType=nothing)
    _ctx = _oacinternal_sw_unregister(_api, endpoint_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function sw_unregister(_api::AccountApi, response_stream::Channel, endpoint_request::EndpointRequest; _mediaType=nothing)
    _ctx = _oacinternal_sw_unregister(_api, endpoint_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_sw_update_registration_AccountApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => SwShowRegistration200Response,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_sw_update_registration(_api::AccountApi, sw_update_registration_request::SwUpdateRegistrationRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_sw_update_registration_AccountApi, "/sw/update-registration", ["bearerAuth", ], sw_update_registration_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""sw/update-registration

Update push notification registration.  **Internal Endpoint**: This endpoint is an API for the misskey mainframe and is not intended for use by third parties. **Credential required**: *Yes*

Params:
- sw_update_registration_request::SwUpdateRegistrationRequest (required)

Return: SwShowRegistration200Response, OpenAPI.Clients.ApiResponse
"""
function sw_update_registration(_api::AccountApi, sw_update_registration_request::SwUpdateRegistrationRequest; _mediaType=nothing)
    _ctx = _oacinternal_sw_update_registration(_api, sw_update_registration_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function sw_update_registration(_api::AccountApi, response_stream::Channel, sw_update_registration_request::SwUpdateRegistrationRequest; _mediaType=nothing)
    _ctx = _oacinternal_sw_update_registration(_api, sw_update_registration_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_users_update_memo_AccountApi = Dict{Regex,Type}(
    Regex("^" * replace("204", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_users_update_memo(_api::AccountApi, users_update_memo_request::UsersUpdateMemoRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_users_update_memo_AccountApi, "/users/update-memo", ["bearerAuth", ], users_update_memo_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""users/update-memo

No description provided.  **Credential required**: *Yes* / **Permission**: *write:account*

Params:
- users_update_memo_request::UsersUpdateMemoRequest (required)

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function users_update_memo(_api::AccountApi, users_update_memo_request::UsersUpdateMemoRequest; _mediaType=nothing)
    _ctx = _oacinternal_users_update_memo(_api, users_update_memo_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function users_update_memo(_api::AccountApi, response_stream::Channel, users_update_memo_request::UsersUpdateMemoRequest; _mediaType=nothing)
    _ctx = _oacinternal_users_update_memo(_api, users_update_memo_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

export blocking_create
export blocking_delete
export blocking_list
export clips_add_note
export clips_my_favorites
export clips_notes
export clips_remove_note
export flash_my
export flash_my_likes
export i
export i_favorites
export i_gallery_likes
export i_gallery_posts
export i_notifications
export i_notifications_grouped
export i_page_likes
export i_pages
export i_pin
export i_read_all_unread_notes
export i_read_announcement
export i_unpin
export i_update
export mute_create
export mute_delete
export mute_list
export my_apps
export renote_mute_create
export renote_mute_delete
export renote_mute_list
export sw_register
export sw_show_registration
export sw_unregister
export sw_update_registration
export users_update_memo
