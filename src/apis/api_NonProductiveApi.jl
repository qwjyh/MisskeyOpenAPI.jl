# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.

struct NonProductiveApi <: OpenAPI.APIClientImpl
    client::OpenAPI.Clients.Client
end

"""
The default API base path for APIs in `NonProductiveApi`.
This can be used to construct the `OpenAPI.Clients.Client` instance.
"""
basepath(::Type{ NonProductiveApi }) = "https://misskey.qwjyh.net/api"

const _returntypes_reset_db_NonProductiveApi = Dict{Regex,Type}(
    Regex("^" * replace("204", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_reset_db(_api::NonProductiveApi; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_reset_db_NonProductiveApi, "/reset-db", [])
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""reset-db

Only available when running with <code>NODE_ENV=testing</code>. Reset the database and flush Redis.  **Credential required**: *No*

Params:

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function reset_db(_api::NonProductiveApi; _mediaType=nothing)
    _ctx = _oacinternal_reset_db(_api; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function reset_db(_api::NonProductiveApi, response_stream::Channel; _mediaType=nothing)
    _ctx = _oacinternal_reset_db(_api; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_test_NonProductiveApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Test200Response,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_test(_api::NonProductiveApi, test_request::TestRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_test_NonProductiveApi, "/test", [], test_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""test

Endpoint for testing input validation.  **Credential required**: *No*

Params:
- test_request::TestRequest (required)

Return: Test200Response, OpenAPI.Clients.ApiResponse
"""
function test(_api::NonProductiveApi, test_request::TestRequest; _mediaType=nothing)
    _ctx = _oacinternal_test(_api, test_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function test(_api::NonProductiveApi, response_stream::Channel, test_request::TestRequest; _mediaType=nothing)
    _ctx = _oacinternal_test(_api, test_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

export reset_db
export test
