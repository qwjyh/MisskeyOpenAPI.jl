# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.

struct FlashsApi <: OpenAPI.APIClientImpl
    client::OpenAPI.Clients.Client
end

"""
The default API base path for APIs in `FlashsApi`.
This can be used to construct the `OpenAPI.Clients.Client` instance.
"""
basepath(::Type{ FlashsApi }) = "https://misskey.qwjyh.net/api"

const _returntypes_flash_delete_FlashsApi = Dict{Regex,Type}(
    Regex("^" * replace("204", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_flash_delete(_api::FlashsApi, flash_delete_request::FlashDeleteRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_flash_delete_FlashsApi, "/flash/delete", ["bearerAuth", ], flash_delete_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""flash/delete

No description provided.  **Credential required**: *Yes* / **Permission**: *write:flash*

Params:
- flash_delete_request::FlashDeleteRequest (required)

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function flash_delete(_api::FlashsApi, flash_delete_request::FlashDeleteRequest; _mediaType=nothing)
    _ctx = _oacinternal_flash_delete(_api, flash_delete_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function flash_delete(_api::FlashsApi, response_stream::Channel, flash_delete_request::FlashDeleteRequest; _mediaType=nothing)
    _ctx = _oacinternal_flash_delete(_api, flash_delete_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_flash_show_FlashsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Flash,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_flash_show(_api::FlashsApi, flash_delete_request::FlashDeleteRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_flash_show_FlashsApi, "/flash/show", [], flash_delete_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""flash/show

No description provided.  **Credential required**: *No*

Params:
- flash_delete_request::FlashDeleteRequest (required)

Return: Flash, OpenAPI.Clients.ApiResponse
"""
function flash_show(_api::FlashsApi, flash_delete_request::FlashDeleteRequest; _mediaType=nothing)
    _ctx = _oacinternal_flash_show(_api, flash_delete_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function flash_show(_api::FlashsApi, response_stream::Channel, flash_delete_request::FlashDeleteRequest; _mediaType=nothing)
    _ctx = _oacinternal_flash_show(_api, flash_delete_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

export flash_delete
export flash_show
