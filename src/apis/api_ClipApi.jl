# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.

struct ClipApi <: OpenAPI.APIClientImpl
    client::OpenAPI.Clients.Client
end

"""
The default API base path for APIs in `ClipApi`.
This can be used to construct the `OpenAPI.Clients.Client` instance.
"""
basepath(::Type{ ClipApi }) = "https://misskey.qwjyh.net/api"

const _returntypes_clips_favorite_ClipApi = Dict{Regex,Type}(
    Regex("^" * replace("204", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_clips_favorite(_api::ClipApi, clips_delete_request::ClipsDeleteRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_clips_favorite_ClipApi, "/clips/favorite", ["bearerAuth", ], clips_delete_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""clips/favorite

No description provided.  **Credential required**: *Yes* / **Permission**: *write:clip-favorite*

Params:
- clips_delete_request::ClipsDeleteRequest (required)

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function clips_favorite(_api::ClipApi, clips_delete_request::ClipsDeleteRequest; _mediaType=nothing)
    _ctx = _oacinternal_clips_favorite(_api, clips_delete_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function clips_favorite(_api::ClipApi, response_stream::Channel, clips_delete_request::ClipsDeleteRequest; _mediaType=nothing)
    _ctx = _oacinternal_clips_favorite(_api, clips_delete_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_clips_unfavorite_ClipApi = Dict{Regex,Type}(
    Regex("^" * replace("204", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_clips_unfavorite(_api::ClipApi, clips_delete_request::ClipsDeleteRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_clips_unfavorite_ClipApi, "/clips/unfavorite", ["bearerAuth", ], clips_delete_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""clips/unfavorite

No description provided.  **Credential required**: *Yes* / **Permission**: *write:clip-favorite*

Params:
- clips_delete_request::ClipsDeleteRequest (required)

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function clips_unfavorite(_api::ClipApi, clips_delete_request::ClipsDeleteRequest; _mediaType=nothing)
    _ctx = _oacinternal_clips_unfavorite(_api, clips_delete_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function clips_unfavorite(_api::ClipApi, response_stream::Channel, clips_delete_request::ClipsDeleteRequest; _mediaType=nothing)
    _ctx = _oacinternal_clips_unfavorite(_api, clips_delete_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

export clips_favorite
export clips_unfavorite
