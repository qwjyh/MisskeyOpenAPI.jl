# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.

struct AuthApi <: OpenAPI.APIClientImpl
    client::OpenAPI.Clients.Client
end

"""
The default API base path for APIs in `AuthApi`.
This can be used to construct the `OpenAPI.Clients.Client` instance.
"""
basepath(::Type{ AuthApi }) = "https://misskey.qwjyh.net/api"

const _returntypes_auth_accept_AuthApi = Dict{Regex,Type}(
    Regex("^" * replace("204", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_auth_accept(_api::AuthApi, auth_accept_request::AuthAcceptRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_auth_accept_AuthApi, "/auth/accept", ["bearerAuth", ], auth_accept_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""auth/accept

No description provided.  **Internal Endpoint**: This endpoint is an API for the misskey mainframe and is not intended for use by third parties. **Credential required**: *Yes*

Params:
- auth_accept_request::AuthAcceptRequest (required)

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function auth_accept(_api::AuthApi, auth_accept_request::AuthAcceptRequest; _mediaType=nothing)
    _ctx = _oacinternal_auth_accept(_api, auth_accept_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function auth_accept(_api::AuthApi, response_stream::Channel, auth_accept_request::AuthAcceptRequest; _mediaType=nothing)
    _ctx = _oacinternal_auth_accept(_api, auth_accept_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_auth_session_generate_AuthApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => AuthSessionGenerate200Response,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_auth_session_generate(_api::AuthApi, auth_session_generate_request::AuthSessionGenerateRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_auth_session_generate_AuthApi, "/auth/session/generate", [], auth_session_generate_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""auth/session/generate

No description provided.  **Credential required**: *No*

Params:
- auth_session_generate_request::AuthSessionGenerateRequest (required)

Return: AuthSessionGenerate200Response, OpenAPI.Clients.ApiResponse
"""
function auth_session_generate(_api::AuthApi, auth_session_generate_request::AuthSessionGenerateRequest; _mediaType=nothing)
    _ctx = _oacinternal_auth_session_generate(_api, auth_session_generate_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function auth_session_generate(_api::AuthApi, response_stream::Channel, auth_session_generate_request::AuthSessionGenerateRequest; _mediaType=nothing)
    _ctx = _oacinternal_auth_session_generate(_api, auth_session_generate_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_auth_session_show_AuthApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => AuthSessionShow200Response,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_auth_session_show(_api::AuthApi, auth_accept_request::AuthAcceptRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_auth_session_show_AuthApi, "/auth/session/show", [], auth_accept_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""auth/session/show

No description provided.  **Credential required**: *No*

Params:
- auth_accept_request::AuthAcceptRequest (required)

Return: AuthSessionShow200Response, OpenAPI.Clients.ApiResponse
"""
function auth_session_show(_api::AuthApi, auth_accept_request::AuthAcceptRequest; _mediaType=nothing)
    _ctx = _oacinternal_auth_session_show(_api, auth_accept_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function auth_session_show(_api::AuthApi, response_stream::Channel, auth_accept_request::AuthAcceptRequest; _mediaType=nothing)
    _ctx = _oacinternal_auth_session_show(_api, auth_accept_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_auth_session_userkey_AuthApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => AuthSessionUserkey200Response,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_auth_session_userkey(_api::AuthApi, auth_session_userkey_request::AuthSessionUserkeyRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_auth_session_userkey_AuthApi, "/auth/session/userkey", [], auth_session_userkey_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""auth/session/userkey

No description provided.  **Credential required**: *No*

Params:
- auth_session_userkey_request::AuthSessionUserkeyRequest (required)

Return: AuthSessionUserkey200Response, OpenAPI.Clients.ApiResponse
"""
function auth_session_userkey(_api::AuthApi, auth_session_userkey_request::AuthSessionUserkeyRequest; _mediaType=nothing)
    _ctx = _oacinternal_auth_session_userkey(_api, auth_session_userkey_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function auth_session_userkey(_api::AuthApi, response_stream::Channel, auth_session_userkey_request::AuthSessionUserkeyRequest; _mediaType=nothing)
    _ctx = _oacinternal_auth_session_userkey(_api, auth_session_userkey_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_miauth_gen_token_AuthApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => AuthAcceptRequest,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_miauth_gen_token(_api::AuthApi, miauth_gen_token_request::MiauthGenTokenRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_miauth_gen_token_AuthApi, "/miauth/gen-token", ["bearerAuth", ], miauth_gen_token_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""miauth/gen-token

No description provided.  **Internal Endpoint**: This endpoint is an API for the misskey mainframe and is not intended for use by third parties. **Credential required**: *Yes*

Params:
- miauth_gen_token_request::MiauthGenTokenRequest (required)

Return: AuthAcceptRequest, OpenAPI.Clients.ApiResponse
"""
function miauth_gen_token(_api::AuthApi, miauth_gen_token_request::MiauthGenTokenRequest; _mediaType=nothing)
    _ctx = _oacinternal_miauth_gen_token(_api, miauth_gen_token_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function miauth_gen_token(_api::AuthApi, response_stream::Channel, miauth_gen_token_request::MiauthGenTokenRequest; _mediaType=nothing)
    _ctx = _oacinternal_miauth_gen_token(_api, miauth_gen_token_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

export auth_accept
export auth_session_generate
export auth_session_show
export auth_session_userkey
export miauth_gen_token
