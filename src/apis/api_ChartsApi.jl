# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.

struct ChartsApi <: OpenAPI.APIClientImpl
    client::OpenAPI.Clients.Client
end

"""
The default API base path for APIs in `ChartsApi`.
This can be used to construct the `OpenAPI.Clients.Client` instance.
"""
basepath(::Type{ ChartsApi }) = "https://misskey.qwjyh.net/api"

const _returntypes_charts_active_users_ChartsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => ChartsActiveUsers200Response,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_charts_active_users(_api::ChartsApi, charts_active_users_request::ChartsActiveUsersRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_charts_active_users_ChartsApi, "/charts/active-users", [], charts_active_users_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""charts/active-users

No description provided.  **Credential required**: *No*

Params:
- charts_active_users_request::ChartsActiveUsersRequest (required)

Return: ChartsActiveUsers200Response, OpenAPI.Clients.ApiResponse
"""
function charts_active_users(_api::ChartsApi, charts_active_users_request::ChartsActiveUsersRequest; _mediaType=nothing)
    _ctx = _oacinternal_charts_active_users(_api, charts_active_users_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function charts_active_users(_api::ChartsApi, response_stream::Channel, charts_active_users_request::ChartsActiveUsersRequest; _mediaType=nothing)
    _ctx = _oacinternal_charts_active_users(_api, charts_active_users_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_charts_active_users_0_ChartsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => ChartsActiveUsers200Response,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_charts_active_users_0(_api::ChartsApi, charts_active_users_request1::ChartsActiveUsersRequest1; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_charts_active_users_0_ChartsApi, "/charts/active-users", [], charts_active_users_request1)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""charts/active-users

No description provided.  **Credential required**: *No*

Params:
- charts_active_users_request1::ChartsActiveUsersRequest1 (required)

Return: ChartsActiveUsers200Response, OpenAPI.Clients.ApiResponse
"""
function charts_active_users_0(_api::ChartsApi, charts_active_users_request1::ChartsActiveUsersRequest1; _mediaType=nothing)
    _ctx = _oacinternal_charts_active_users_0(_api, charts_active_users_request1; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function charts_active_users_0(_api::ChartsApi, response_stream::Channel, charts_active_users_request1::ChartsActiveUsersRequest1; _mediaType=nothing)
    _ctx = _oacinternal_charts_active_users_0(_api, charts_active_users_request1; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_charts_ap_request_ChartsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => ChartsApRequest200Response,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_charts_ap_request(_api::ChartsApi, charts_active_users_request1::ChartsActiveUsersRequest1; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_charts_ap_request_ChartsApi, "/charts/ap-request", [], charts_active_users_request1)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""charts/ap-request

No description provided.  **Credential required**: *No*

Params:
- charts_active_users_request1::ChartsActiveUsersRequest1 (required)

Return: ChartsApRequest200Response, OpenAPI.Clients.ApiResponse
"""
function charts_ap_request(_api::ChartsApi, charts_active_users_request1::ChartsActiveUsersRequest1; _mediaType=nothing)
    _ctx = _oacinternal_charts_ap_request(_api, charts_active_users_request1; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function charts_ap_request(_api::ChartsApi, response_stream::Channel, charts_active_users_request1::ChartsActiveUsersRequest1; _mediaType=nothing)
    _ctx = _oacinternal_charts_ap_request(_api, charts_active_users_request1; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_charts_ap_request_0_ChartsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => ChartsApRequest200Response,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_charts_ap_request_0(_api::ChartsApi, charts_active_users_request1::ChartsActiveUsersRequest1; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_charts_ap_request_0_ChartsApi, "/charts/ap-request", [], charts_active_users_request1)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""charts/ap-request

No description provided.  **Credential required**: *No*

Params:
- charts_active_users_request1::ChartsActiveUsersRequest1 (required)

Return: ChartsApRequest200Response, OpenAPI.Clients.ApiResponse
"""
function charts_ap_request_0(_api::ChartsApi, charts_active_users_request1::ChartsActiveUsersRequest1; _mediaType=nothing)
    _ctx = _oacinternal_charts_ap_request_0(_api, charts_active_users_request1; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function charts_ap_request_0(_api::ChartsApi, response_stream::Channel, charts_active_users_request1::ChartsActiveUsersRequest1; _mediaType=nothing)
    _ctx = _oacinternal_charts_ap_request_0(_api, charts_active_users_request1; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_charts_drive_ChartsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => ChartsDrive200Response,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_charts_drive(_api::ChartsApi, charts_active_users_request1::ChartsActiveUsersRequest1; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_charts_drive_ChartsApi, "/charts/drive", [], charts_active_users_request1)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""charts/drive

No description provided.  **Credential required**: *No*

Params:
- charts_active_users_request1::ChartsActiveUsersRequest1 (required)

Return: ChartsDrive200Response, OpenAPI.Clients.ApiResponse
"""
function charts_drive(_api::ChartsApi, charts_active_users_request1::ChartsActiveUsersRequest1; _mediaType=nothing)
    _ctx = _oacinternal_charts_drive(_api, charts_active_users_request1; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function charts_drive(_api::ChartsApi, response_stream::Channel, charts_active_users_request1::ChartsActiveUsersRequest1; _mediaType=nothing)
    _ctx = _oacinternal_charts_drive(_api, charts_active_users_request1; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_charts_drive_0_ChartsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => ChartsDrive200Response,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_charts_drive_0(_api::ChartsApi, charts_active_users_request1::ChartsActiveUsersRequest1; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_charts_drive_0_ChartsApi, "/charts/drive", [], charts_active_users_request1)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""charts/drive

No description provided.  **Credential required**: *No*

Params:
- charts_active_users_request1::ChartsActiveUsersRequest1 (required)

Return: ChartsDrive200Response, OpenAPI.Clients.ApiResponse
"""
function charts_drive_0(_api::ChartsApi, charts_active_users_request1::ChartsActiveUsersRequest1; _mediaType=nothing)
    _ctx = _oacinternal_charts_drive_0(_api, charts_active_users_request1; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function charts_drive_0(_api::ChartsApi, response_stream::Channel, charts_active_users_request1::ChartsActiveUsersRequest1; _mediaType=nothing)
    _ctx = _oacinternal_charts_drive_0(_api, charts_active_users_request1; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_charts_federation_ChartsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => ChartsFederation200Response,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_charts_federation(_api::ChartsApi, charts_active_users_request1::ChartsActiveUsersRequest1; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_charts_federation_ChartsApi, "/charts/federation", [], charts_active_users_request1)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""charts/federation

No description provided.  **Credential required**: *No*

Params:
- charts_active_users_request1::ChartsActiveUsersRequest1 (required)

Return: ChartsFederation200Response, OpenAPI.Clients.ApiResponse
"""
function charts_federation(_api::ChartsApi, charts_active_users_request1::ChartsActiveUsersRequest1; _mediaType=nothing)
    _ctx = _oacinternal_charts_federation(_api, charts_active_users_request1; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function charts_federation(_api::ChartsApi, response_stream::Channel, charts_active_users_request1::ChartsActiveUsersRequest1; _mediaType=nothing)
    _ctx = _oacinternal_charts_federation(_api, charts_active_users_request1; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_charts_federation_0_ChartsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => ChartsFederation200Response,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_charts_federation_0(_api::ChartsApi, charts_active_users_request1::ChartsActiveUsersRequest1; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_charts_federation_0_ChartsApi, "/charts/federation", [], charts_active_users_request1)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""charts/federation

No description provided.  **Credential required**: *No*

Params:
- charts_active_users_request1::ChartsActiveUsersRequest1 (required)

Return: ChartsFederation200Response, OpenAPI.Clients.ApiResponse
"""
function charts_federation_0(_api::ChartsApi, charts_active_users_request1::ChartsActiveUsersRequest1; _mediaType=nothing)
    _ctx = _oacinternal_charts_federation_0(_api, charts_active_users_request1; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function charts_federation_0(_api::ChartsApi, response_stream::Channel, charts_active_users_request1::ChartsActiveUsersRequest1; _mediaType=nothing)
    _ctx = _oacinternal_charts_federation_0(_api, charts_active_users_request1; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_charts_instance_ChartsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => ChartsInstance200Response,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_charts_instance(_api::ChartsApi, charts_instance_request::ChartsInstanceRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_charts_instance_ChartsApi, "/charts/instance", [], charts_instance_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""charts/instance

No description provided.  **Credential required**: *No*

Params:
- charts_instance_request::ChartsInstanceRequest (required)

Return: ChartsInstance200Response, OpenAPI.Clients.ApiResponse
"""
function charts_instance(_api::ChartsApi, charts_instance_request::ChartsInstanceRequest; _mediaType=nothing)
    _ctx = _oacinternal_charts_instance(_api, charts_instance_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function charts_instance(_api::ChartsApi, response_stream::Channel, charts_instance_request::ChartsInstanceRequest; _mediaType=nothing)
    _ctx = _oacinternal_charts_instance(_api, charts_instance_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_charts_instance_0_ChartsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => ChartsInstance200Response,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_charts_instance_0(_api::ChartsApi, charts_instance_request::ChartsInstanceRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_charts_instance_0_ChartsApi, "/charts/instance", [], charts_instance_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""charts/instance

No description provided.  **Credential required**: *No*

Params:
- charts_instance_request::ChartsInstanceRequest (required)

Return: ChartsInstance200Response, OpenAPI.Clients.ApiResponse
"""
function charts_instance_0(_api::ChartsApi, charts_instance_request::ChartsInstanceRequest; _mediaType=nothing)
    _ctx = _oacinternal_charts_instance_0(_api, charts_instance_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function charts_instance_0(_api::ChartsApi, response_stream::Channel, charts_instance_request::ChartsInstanceRequest; _mediaType=nothing)
    _ctx = _oacinternal_charts_instance_0(_api, charts_instance_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_charts_notes_ChartsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => ChartsNotes200Response,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_charts_notes(_api::ChartsApi, charts_active_users_request1::ChartsActiveUsersRequest1; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_charts_notes_ChartsApi, "/charts/notes", [], charts_active_users_request1)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""charts/notes

No description provided.  **Credential required**: *No*

Params:
- charts_active_users_request1::ChartsActiveUsersRequest1 (required)

Return: ChartsNotes200Response, OpenAPI.Clients.ApiResponse
"""
function charts_notes(_api::ChartsApi, charts_active_users_request1::ChartsActiveUsersRequest1; _mediaType=nothing)
    _ctx = _oacinternal_charts_notes(_api, charts_active_users_request1; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function charts_notes(_api::ChartsApi, response_stream::Channel, charts_active_users_request1::ChartsActiveUsersRequest1; _mediaType=nothing)
    _ctx = _oacinternal_charts_notes(_api, charts_active_users_request1; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_charts_notes_0_ChartsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => ChartsNotes200Response,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_charts_notes_0(_api::ChartsApi, charts_active_users_request1::ChartsActiveUsersRequest1; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_charts_notes_0_ChartsApi, "/charts/notes", [], charts_active_users_request1)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""charts/notes

No description provided.  **Credential required**: *No*

Params:
- charts_active_users_request1::ChartsActiveUsersRequest1 (required)

Return: ChartsNotes200Response, OpenAPI.Clients.ApiResponse
"""
function charts_notes_0(_api::ChartsApi, charts_active_users_request1::ChartsActiveUsersRequest1; _mediaType=nothing)
    _ctx = _oacinternal_charts_notes_0(_api, charts_active_users_request1; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function charts_notes_0(_api::ChartsApi, response_stream::Channel, charts_active_users_request1::ChartsActiveUsersRequest1; _mediaType=nothing)
    _ctx = _oacinternal_charts_notes_0(_api, charts_active_users_request1; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_charts_user_drive_ChartsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => ChartsUserDrive200Response,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_charts_user_drive(_api::ChartsApi, charts_user_drive_request::ChartsUserDriveRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_charts_user_drive_ChartsApi, "/charts/user/drive", [], charts_user_drive_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""charts/user/drive

No description provided.  **Credential required**: *No*

Params:
- charts_user_drive_request::ChartsUserDriveRequest (required)

Return: ChartsUserDrive200Response, OpenAPI.Clients.ApiResponse
"""
function charts_user_drive(_api::ChartsApi, charts_user_drive_request::ChartsUserDriveRequest; _mediaType=nothing)
    _ctx = _oacinternal_charts_user_drive(_api, charts_user_drive_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function charts_user_drive(_api::ChartsApi, response_stream::Channel, charts_user_drive_request::ChartsUserDriveRequest; _mediaType=nothing)
    _ctx = _oacinternal_charts_user_drive(_api, charts_user_drive_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_charts_user_drive_0_ChartsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => ChartsUserDrive200Response,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_charts_user_drive_0(_api::ChartsApi, charts_user_drive_request::ChartsUserDriveRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_charts_user_drive_0_ChartsApi, "/charts/user/drive", [], charts_user_drive_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""charts/user/drive

No description provided.  **Credential required**: *No*

Params:
- charts_user_drive_request::ChartsUserDriveRequest (required)

Return: ChartsUserDrive200Response, OpenAPI.Clients.ApiResponse
"""
function charts_user_drive_0(_api::ChartsApi, charts_user_drive_request::ChartsUserDriveRequest; _mediaType=nothing)
    _ctx = _oacinternal_charts_user_drive_0(_api, charts_user_drive_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function charts_user_drive_0(_api::ChartsApi, response_stream::Channel, charts_user_drive_request::ChartsUserDriveRequest; _mediaType=nothing)
    _ctx = _oacinternal_charts_user_drive_0(_api, charts_user_drive_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_charts_user_following_ChartsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => ChartsUserFollowing200Response,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_charts_user_following(_api::ChartsApi, charts_user_drive_request::ChartsUserDriveRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_charts_user_following_ChartsApi, "/charts/user/following", [], charts_user_drive_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""charts/user/following

No description provided.  **Credential required**: *No*

Params:
- charts_user_drive_request::ChartsUserDriveRequest (required)

Return: ChartsUserFollowing200Response, OpenAPI.Clients.ApiResponse
"""
function charts_user_following(_api::ChartsApi, charts_user_drive_request::ChartsUserDriveRequest; _mediaType=nothing)
    _ctx = _oacinternal_charts_user_following(_api, charts_user_drive_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function charts_user_following(_api::ChartsApi, response_stream::Channel, charts_user_drive_request::ChartsUserDriveRequest; _mediaType=nothing)
    _ctx = _oacinternal_charts_user_following(_api, charts_user_drive_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_charts_user_following_0_ChartsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => ChartsUserFollowing200Response,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_charts_user_following_0(_api::ChartsApi, charts_user_drive_request::ChartsUserDriveRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_charts_user_following_0_ChartsApi, "/charts/user/following", [], charts_user_drive_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""charts/user/following

No description provided.  **Credential required**: *No*

Params:
- charts_user_drive_request::ChartsUserDriveRequest (required)

Return: ChartsUserFollowing200Response, OpenAPI.Clients.ApiResponse
"""
function charts_user_following_0(_api::ChartsApi, charts_user_drive_request::ChartsUserDriveRequest; _mediaType=nothing)
    _ctx = _oacinternal_charts_user_following_0(_api, charts_user_drive_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function charts_user_following_0(_api::ChartsApi, response_stream::Channel, charts_user_drive_request::ChartsUserDriveRequest; _mediaType=nothing)
    _ctx = _oacinternal_charts_user_following_0(_api, charts_user_drive_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_charts_user_notes_ChartsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => ChartsInstance200ResponseNotes,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_charts_user_notes(_api::ChartsApi, charts_user_drive_request::ChartsUserDriveRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_charts_user_notes_ChartsApi, "/charts/user/notes", [], charts_user_drive_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""charts/user/notes

No description provided.  **Credential required**: *No*

Params:
- charts_user_drive_request::ChartsUserDriveRequest (required)

Return: ChartsInstance200ResponseNotes, OpenAPI.Clients.ApiResponse
"""
function charts_user_notes(_api::ChartsApi, charts_user_drive_request::ChartsUserDriveRequest; _mediaType=nothing)
    _ctx = _oacinternal_charts_user_notes(_api, charts_user_drive_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function charts_user_notes(_api::ChartsApi, response_stream::Channel, charts_user_drive_request::ChartsUserDriveRequest; _mediaType=nothing)
    _ctx = _oacinternal_charts_user_notes(_api, charts_user_drive_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_charts_user_notes_0_ChartsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => ChartsInstance200ResponseNotes,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_charts_user_notes_0(_api::ChartsApi, charts_user_drive_request::ChartsUserDriveRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_charts_user_notes_0_ChartsApi, "/charts/user/notes", [], charts_user_drive_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""charts/user/notes

No description provided.  **Credential required**: *No*

Params:
- charts_user_drive_request::ChartsUserDriveRequest (required)

Return: ChartsInstance200ResponseNotes, OpenAPI.Clients.ApiResponse
"""
function charts_user_notes_0(_api::ChartsApi, charts_user_drive_request::ChartsUserDriveRequest; _mediaType=nothing)
    _ctx = _oacinternal_charts_user_notes_0(_api, charts_user_drive_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function charts_user_notes_0(_api::ChartsApi, response_stream::Channel, charts_user_drive_request::ChartsUserDriveRequest; _mediaType=nothing)
    _ctx = _oacinternal_charts_user_notes_0(_api, charts_user_drive_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_charts_user_pv_ChartsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => ChartsUserPv200Response,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_charts_user_pv(_api::ChartsApi, charts_user_drive_request::ChartsUserDriveRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_charts_user_pv_ChartsApi, "/charts/user/pv", [], charts_user_drive_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""charts/user/pv

No description provided.  **Credential required**: *No*

Params:
- charts_user_drive_request::ChartsUserDriveRequest (required)

Return: ChartsUserPv200Response, OpenAPI.Clients.ApiResponse
"""
function charts_user_pv(_api::ChartsApi, charts_user_drive_request::ChartsUserDriveRequest; _mediaType=nothing)
    _ctx = _oacinternal_charts_user_pv(_api, charts_user_drive_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function charts_user_pv(_api::ChartsApi, response_stream::Channel, charts_user_drive_request::ChartsUserDriveRequest; _mediaType=nothing)
    _ctx = _oacinternal_charts_user_pv(_api, charts_user_drive_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_charts_user_pv_0_ChartsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => ChartsUserPv200Response,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_charts_user_pv_0(_api::ChartsApi, charts_user_drive_request::ChartsUserDriveRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_charts_user_pv_0_ChartsApi, "/charts/user/pv", [], charts_user_drive_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""charts/user/pv

No description provided.  **Credential required**: *No*

Params:
- charts_user_drive_request::ChartsUserDriveRequest (required)

Return: ChartsUserPv200Response, OpenAPI.Clients.ApiResponse
"""
function charts_user_pv_0(_api::ChartsApi, charts_user_drive_request::ChartsUserDriveRequest; _mediaType=nothing)
    _ctx = _oacinternal_charts_user_pv_0(_api, charts_user_drive_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function charts_user_pv_0(_api::ChartsApi, response_stream::Channel, charts_user_drive_request::ChartsUserDriveRequest; _mediaType=nothing)
    _ctx = _oacinternal_charts_user_pv_0(_api, charts_user_drive_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_charts_user_reactions_ChartsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => ChartsUserReactions200Response,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_charts_user_reactions(_api::ChartsApi, charts_user_drive_request::ChartsUserDriveRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_charts_user_reactions_ChartsApi, "/charts/user/reactions", [], charts_user_drive_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""charts/user/reactions

No description provided.  **Credential required**: *No*

Params:
- charts_user_drive_request::ChartsUserDriveRequest (required)

Return: ChartsUserReactions200Response, OpenAPI.Clients.ApiResponse
"""
function charts_user_reactions(_api::ChartsApi, charts_user_drive_request::ChartsUserDriveRequest; _mediaType=nothing)
    _ctx = _oacinternal_charts_user_reactions(_api, charts_user_drive_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function charts_user_reactions(_api::ChartsApi, response_stream::Channel, charts_user_drive_request::ChartsUserDriveRequest; _mediaType=nothing)
    _ctx = _oacinternal_charts_user_reactions(_api, charts_user_drive_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_charts_user_reactions_0_ChartsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => ChartsUserReactions200Response,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_charts_user_reactions_0(_api::ChartsApi, charts_user_drive_request::ChartsUserDriveRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_charts_user_reactions_0_ChartsApi, "/charts/user/reactions", [], charts_user_drive_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""charts/user/reactions

No description provided.  **Credential required**: *No*

Params:
- charts_user_drive_request::ChartsUserDriveRequest (required)

Return: ChartsUserReactions200Response, OpenAPI.Clients.ApiResponse
"""
function charts_user_reactions_0(_api::ChartsApi, charts_user_drive_request::ChartsUserDriveRequest; _mediaType=nothing)
    _ctx = _oacinternal_charts_user_reactions_0(_api, charts_user_drive_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function charts_user_reactions_0(_api::ChartsApi, response_stream::Channel, charts_user_drive_request::ChartsUserDriveRequest; _mediaType=nothing)
    _ctx = _oacinternal_charts_user_reactions_0(_api, charts_user_drive_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_charts_users_ChartsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => ChartsUsers200Response,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_charts_users(_api::ChartsApi, charts_active_users_request1::ChartsActiveUsersRequest1; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_charts_users_ChartsApi, "/charts/users", [], charts_active_users_request1)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""charts/users

No description provided.  **Credential required**: *No*

Params:
- charts_active_users_request1::ChartsActiveUsersRequest1 (required)

Return: ChartsUsers200Response, OpenAPI.Clients.ApiResponse
"""
function charts_users(_api::ChartsApi, charts_active_users_request1::ChartsActiveUsersRequest1; _mediaType=nothing)
    _ctx = _oacinternal_charts_users(_api, charts_active_users_request1; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function charts_users(_api::ChartsApi, response_stream::Channel, charts_active_users_request1::ChartsActiveUsersRequest1; _mediaType=nothing)
    _ctx = _oacinternal_charts_users(_api, charts_active_users_request1; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_charts_users_0_ChartsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => ChartsUsers200Response,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_charts_users_0(_api::ChartsApi, charts_active_users_request1::ChartsActiveUsersRequest1; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_charts_users_0_ChartsApi, "/charts/users", [], charts_active_users_request1)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""charts/users

No description provided.  **Credential required**: *No*

Params:
- charts_active_users_request1::ChartsActiveUsersRequest1 (required)

Return: ChartsUsers200Response, OpenAPI.Clients.ApiResponse
"""
function charts_users_0(_api::ChartsApi, charts_active_users_request1::ChartsActiveUsersRequest1; _mediaType=nothing)
    _ctx = _oacinternal_charts_users_0(_api, charts_active_users_request1; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function charts_users_0(_api::ChartsApi, response_stream::Channel, charts_active_users_request1::ChartsActiveUsersRequest1; _mediaType=nothing)
    _ctx = _oacinternal_charts_users_0(_api, charts_active_users_request1; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

export charts_active_users
export charts_active_users_0
export charts_ap_request
export charts_ap_request_0
export charts_drive
export charts_drive_0
export charts_federation
export charts_federation_0
export charts_instance
export charts_instance_0
export charts_notes
export charts_notes_0
export charts_user_drive
export charts_user_drive_0
export charts_user_following
export charts_user_following_0
export charts_user_notes
export charts_user_notes_0
export charts_user_pv
export charts_user_pv_0
export charts_user_reactions
export charts_user_reactions_0
export charts_users
export charts_users_0
