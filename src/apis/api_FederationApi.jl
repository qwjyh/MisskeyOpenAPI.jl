# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.

struct FederationApi <: OpenAPI.APIClientImpl
    client::OpenAPI.Clients.Client
end

"""
The default API base path for APIs in `FederationApi`.
This can be used to construct the `OpenAPI.Clients.Client` instance.
"""
basepath(::Type{ FederationApi }) = "https://misskey.qwjyh.net/api"

const _returntypes_ap_get_FederationApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Any,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("429", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_ap_get(_api::FederationApi, ap_get_request::ApGetRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_ap_get_FederationApi, "/ap/get", ["bearerAuth", ], ap_get_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""ap/get

No description provided.  **Credential required**: *Yes* / **Permission**: *read:federation*

Params:
- ap_get_request::ApGetRequest (required)

Return: Any, OpenAPI.Clients.ApiResponse
"""
function ap_get(_api::FederationApi, ap_get_request::ApGetRequest; _mediaType=nothing)
    _ctx = _oacinternal_ap_get(_api, ap_get_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function ap_get(_api::FederationApi, response_stream::Channel, ap_get_request::ApGetRequest; _mediaType=nothing)
    _ctx = _oacinternal_ap_get(_api, ap_get_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_ap_show_FederationApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => ApShow200Response,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("429", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_ap_show(_api::FederationApi, ap_get_request::ApGetRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_ap_show_FederationApi, "/ap/show", ["bearerAuth", ], ap_get_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""ap/show

No description provided.  **Credential required**: *Yes* / **Permission**: *read:account*

Params:
- ap_get_request::ApGetRequest (required)

Return: ApShow200Response, OpenAPI.Clients.ApiResponse
"""
function ap_show(_api::FederationApi, ap_get_request::ApGetRequest; _mediaType=nothing)
    _ctx = _oacinternal_ap_show(_api, ap_get_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function ap_show(_api::FederationApi, response_stream::Channel, ap_get_request::ApGetRequest; _mediaType=nothing)
    _ctx = _oacinternal_ap_show(_api, ap_get_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_federation_followers_FederationApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Vector{Following},
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_federation_followers(_api::FederationApi, federation_followers_request::FederationFollowersRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_federation_followers_FederationApi, "/federation/followers", [], federation_followers_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""federation/followers

No description provided.  **Credential required**: *No*

Params:
- federation_followers_request::FederationFollowersRequest (required)

Return: Vector{Following}, OpenAPI.Clients.ApiResponse
"""
function federation_followers(_api::FederationApi, federation_followers_request::FederationFollowersRequest; _mediaType=nothing)
    _ctx = _oacinternal_federation_followers(_api, federation_followers_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function federation_followers(_api::FederationApi, response_stream::Channel, federation_followers_request::FederationFollowersRequest; _mediaType=nothing)
    _ctx = _oacinternal_federation_followers(_api, federation_followers_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_federation_following_FederationApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Vector{Following},
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_federation_following(_api::FederationApi, federation_followers_request::FederationFollowersRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_federation_following_FederationApi, "/federation/following", [], federation_followers_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""federation/following

No description provided.  **Credential required**: *No*

Params:
- federation_followers_request::FederationFollowersRequest (required)

Return: Vector{Following}, OpenAPI.Clients.ApiResponse
"""
function federation_following(_api::FederationApi, federation_followers_request::FederationFollowersRequest; _mediaType=nothing)
    _ctx = _oacinternal_federation_following(_api, federation_followers_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function federation_following(_api::FederationApi, response_stream::Channel, federation_followers_request::FederationFollowersRequest; _mediaType=nothing)
    _ctx = _oacinternal_federation_following(_api, federation_followers_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_federation_instances_FederationApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Vector{FederationInstance},
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_federation_instances(_api::FederationApi, federation_instances_request::FederationInstancesRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_federation_instances_FederationApi, "/federation/instances", [], federation_instances_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""federation/instances

No description provided.  **Credential required**: *No*

Params:
- federation_instances_request::FederationInstancesRequest (required)

Return: Vector{FederationInstance}, OpenAPI.Clients.ApiResponse
"""
function federation_instances(_api::FederationApi, federation_instances_request::FederationInstancesRequest; _mediaType=nothing)
    _ctx = _oacinternal_federation_instances(_api, federation_instances_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function federation_instances(_api::FederationApi, response_stream::Channel, federation_instances_request::FederationInstancesRequest; _mediaType=nothing)
    _ctx = _oacinternal_federation_instances(_api, federation_instances_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_federation_instances_0_FederationApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Vector{FederationInstance},
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_federation_instances_0(_api::FederationApi, federation_instances_request::FederationInstancesRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_federation_instances_0_FederationApi, "/federation/instances", [], federation_instances_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""federation/instances

No description provided.  **Credential required**: *No*

Params:
- federation_instances_request::FederationInstancesRequest (required)

Return: Vector{FederationInstance}, OpenAPI.Clients.ApiResponse
"""
function federation_instances_0(_api::FederationApi, federation_instances_request::FederationInstancesRequest; _mediaType=nothing)
    _ctx = _oacinternal_federation_instances_0(_api, federation_instances_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function federation_instances_0(_api::FederationApi, response_stream::Channel, federation_instances_request::FederationInstancesRequest; _mediaType=nothing)
    _ctx = _oacinternal_federation_instances_0(_api, federation_instances_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_federation_show_instance_FederationApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => FederationInstance,
    Regex("^" * replace("204", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_federation_show_instance(_api::FederationApi, admin_federation_delete_all_files_request::AdminFederationDeleteAllFilesRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_federation_show_instance_FederationApi, "/federation/show-instance", [], admin_federation_delete_all_files_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""federation/show-instance

No description provided.  **Credential required**: *No*

Params:
- admin_federation_delete_all_files_request::AdminFederationDeleteAllFilesRequest (required)

Return: FederationInstance, OpenAPI.Clients.ApiResponse
"""
function federation_show_instance(_api::FederationApi, admin_federation_delete_all_files_request::AdminFederationDeleteAllFilesRequest; _mediaType=nothing)
    _ctx = _oacinternal_federation_show_instance(_api, admin_federation_delete_all_files_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function federation_show_instance(_api::FederationApi, response_stream::Channel, admin_federation_delete_all_files_request::AdminFederationDeleteAllFilesRequest; _mediaType=nothing)
    _ctx = _oacinternal_federation_show_instance(_api, admin_federation_delete_all_files_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_federation_stats_FederationApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => FederationStats200Response,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_federation_stats(_api::FederationApi, federation_stats_request::FederationStatsRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_federation_stats_FederationApi, "/federation/stats", [], federation_stats_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""federation/stats

No description provided.  **Credential required**: *No*

Params:
- federation_stats_request::FederationStatsRequest (required)

Return: FederationStats200Response, OpenAPI.Clients.ApiResponse
"""
function federation_stats(_api::FederationApi, federation_stats_request::FederationStatsRequest; _mediaType=nothing)
    _ctx = _oacinternal_federation_stats(_api, federation_stats_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function federation_stats(_api::FederationApi, response_stream::Channel, federation_stats_request::FederationStatsRequest; _mediaType=nothing)
    _ctx = _oacinternal_federation_stats(_api, federation_stats_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_federation_stats_0_FederationApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => FederationStats200Response,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_federation_stats_0(_api::FederationApi, federation_stats_request::FederationStatsRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_federation_stats_0_FederationApi, "/federation/stats", [], federation_stats_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""federation/stats

No description provided.  **Credential required**: *No*

Params:
- federation_stats_request::FederationStatsRequest (required)

Return: FederationStats200Response, OpenAPI.Clients.ApiResponse
"""
function federation_stats_0(_api::FederationApi, federation_stats_request::FederationStatsRequest; _mediaType=nothing)
    _ctx = _oacinternal_federation_stats_0(_api, federation_stats_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function federation_stats_0(_api::FederationApi, response_stream::Channel, federation_stats_request::FederationStatsRequest; _mediaType=nothing)
    _ctx = _oacinternal_federation_stats_0(_api, federation_stats_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_federation_update_remote_user_FederationApi = Dict{Regex,Type}(
    Regex("^" * replace("204", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_federation_update_remote_user(_api::FederationApi, admin_accounts_delete_request::AdminAccountsDeleteRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_federation_update_remote_user_FederationApi, "/federation/update-remote-user", [], admin_accounts_delete_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""federation/update-remote-user

No description provided.  **Credential required**: *No*

Params:
- admin_accounts_delete_request::AdminAccountsDeleteRequest (required)

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function federation_update_remote_user(_api::FederationApi, admin_accounts_delete_request::AdminAccountsDeleteRequest; _mediaType=nothing)
    _ctx = _oacinternal_federation_update_remote_user(_api, admin_accounts_delete_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function federation_update_remote_user(_api::FederationApi, response_stream::Channel, admin_accounts_delete_request::AdminAccountsDeleteRequest; _mediaType=nothing)
    _ctx = _oacinternal_federation_update_remote_user(_api, admin_accounts_delete_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_federation_users_FederationApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Vector{UserDetailedNotMe},
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("401", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("418", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_federation_users(_api::FederationApi, federation_followers_request::FederationFollowersRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_federation_users_FederationApi, "/federation/users", [], federation_followers_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""federation/users

No description provided.  **Credential required**: *No*

Params:
- federation_followers_request::FederationFollowersRequest (required)

Return: Vector{UserDetailedNotMe}, OpenAPI.Clients.ApiResponse
"""
function federation_users(_api::FederationApi, federation_followers_request::FederationFollowersRequest; _mediaType=nothing)
    _ctx = _oacinternal_federation_users(_api, federation_followers_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function federation_users(_api::FederationApi, response_stream::Channel, federation_followers_request::FederationFollowersRequest; _mediaType=nothing)
    _ctx = _oacinternal_federation_users(_api, federation_followers_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

export ap_get
export ap_show
export federation_followers
export federation_following
export federation_instances
export federation_instances_0
export federation_show_instance
export federation_stats
export federation_stats_0
export federation_update_remote_user
export federation_users
