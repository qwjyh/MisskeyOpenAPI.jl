# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""admin___show_moderation_logs_200_response_inner

    AdminShowModerationLogs200ResponseInner(;
        id=nothing,
        createdAt=nothing,
        type=nothing,
        info=nothing,
        userId=nothing,
        user=nothing,
    )

    - id::String
    - createdAt::ZonedDateTime
    - type::String
    - info::Any
    - userId::String
    - user::UserDetailedNotMe
"""
Base.@kwdef mutable struct AdminShowModerationLogs200ResponseInner <: OpenAPI.APIModel
    id::Union{Nothing, String} = nothing
    createdAt::Union{Nothing, ZonedDateTime} = nothing
    type::Union{Nothing, String} = nothing
    info::Union{Nothing, Any} = nothing
    userId::Union{Nothing, String} = nothing
    user = nothing # spec type: Union{ Nothing, UserDetailedNotMe }

    function AdminShowModerationLogs200ResponseInner(id, createdAt, type, info, userId, user, )
        OpenAPI.validate_property(AdminShowModerationLogs200ResponseInner, Symbol("id"), id)
        OpenAPI.validate_property(AdminShowModerationLogs200ResponseInner, Symbol("createdAt"), createdAt)
        OpenAPI.validate_property(AdminShowModerationLogs200ResponseInner, Symbol("type"), type)
        OpenAPI.validate_property(AdminShowModerationLogs200ResponseInner, Symbol("info"), info)
        OpenAPI.validate_property(AdminShowModerationLogs200ResponseInner, Symbol("userId"), userId)
        OpenAPI.validate_property(AdminShowModerationLogs200ResponseInner, Symbol("user"), user)
        return new(id, createdAt, type, info, userId, user, )
    end
end # type AdminShowModerationLogs200ResponseInner

const _property_types_AdminShowModerationLogs200ResponseInner = Dict{Symbol,String}(Symbol("id")=>"String", Symbol("createdAt")=>"ZonedDateTime", Symbol("type")=>"String", Symbol("info")=>"Any", Symbol("userId")=>"String", Symbol("user")=>"UserDetailedNotMe", )
OpenAPI.property_type(::Type{ AdminShowModerationLogs200ResponseInner }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_AdminShowModerationLogs200ResponseInner[name]))}

function check_required(o::AdminShowModerationLogs200ResponseInner)
    o.id === nothing && (return false)
    o.createdAt === nothing && (return false)
    o.type === nothing && (return false)
    o.info === nothing && (return false)
    o.userId === nothing && (return false)
    o.user === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ AdminShowModerationLogs200ResponseInner }, name::Symbol, val)
    if name === Symbol("id")
        OpenAPI.validate_param(name, "AdminShowModerationLogs200ResponseInner", :format, val, "id")
    end
    if name === Symbol("createdAt")
        OpenAPI.validate_param(name, "AdminShowModerationLogs200ResponseInner", :format, val, "date-time")
    end
    if name === Symbol("userId")
        OpenAPI.validate_param(name, "AdminShowModerationLogs200ResponseInner", :format, val, "id")
    end
end
