# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""roles___users_200_response_inner

    RolesUsers200ResponseInner(;
        id=nothing,
        user=nothing,
    )

    - id::String
    - user::UserDetailed
"""
Base.@kwdef mutable struct RolesUsers200ResponseInner <: OpenAPI.APIModel
    id::Union{Nothing, String} = nothing
    user = nothing # spec type: Union{ Nothing, UserDetailed }

    function RolesUsers200ResponseInner(id, user, )
        OpenAPI.validate_property(RolesUsers200ResponseInner, Symbol("id"), id)
        OpenAPI.validate_property(RolesUsers200ResponseInner, Symbol("user"), user)
        return new(id, user, )
    end
end # type RolesUsers200ResponseInner

const _property_types_RolesUsers200ResponseInner = Dict{Symbol,String}(Symbol("id")=>"String", Symbol("user")=>"UserDetailed", )
OpenAPI.property_type(::Type{ RolesUsers200ResponseInner }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_RolesUsers200ResponseInner[name]))}

function check_required(o::RolesUsers200ResponseInner)
    o.id === nothing && (return false)
    o.user === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ RolesUsers200ResponseInner }, name::Symbol, val)
    if name === Symbol("id")
        OpenAPI.validate_param(name, "RolesUsers200ResponseInner", :format, val, "misskey:id")
    end
end
