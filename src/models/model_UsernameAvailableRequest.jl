# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""username___available_request

    UsernameAvailableRequest(;
        username=nothing,
    )

    - username::String
"""
Base.@kwdef mutable struct UsernameAvailableRequest <: OpenAPI.APIModel
    username::Union{Nothing, String} = nothing

    function UsernameAvailableRequest(username, )
        OpenAPI.validate_property(UsernameAvailableRequest, Symbol("username"), username)
        return new(username, )
    end
end # type UsernameAvailableRequest

const _property_types_UsernameAvailableRequest = Dict{Symbol,String}(Symbol("username")=>"String", )
OpenAPI.property_type(::Type{ UsernameAvailableRequest }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_UsernameAvailableRequest[name]))}

function check_required(o::UsernameAvailableRequest)
    o.username === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ UsernameAvailableRequest }, name::Symbol, val)
    if name === Symbol("username")
        OpenAPI.validate_param(name, "UsernameAvailableRequest", :pattern, val, r"^\w{1,20}$")
    end
end
