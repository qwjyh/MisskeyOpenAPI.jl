# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""bubble_game___ranking_200_response_inner

    BubbleGameRanking200ResponseInner(;
        id=nothing,
        score=nothing,
        user=nothing,
    )

    - id::String
    - score::Int64
    - user::UserLite
"""
Base.@kwdef mutable struct BubbleGameRanking200ResponseInner <: OpenAPI.APIModel
    id::Union{Nothing, String} = nothing
    score::Union{Nothing, Int64} = nothing
    user = nothing # spec type: Union{ Nothing, UserLite }

    function BubbleGameRanking200ResponseInner(id, score, user, )
        OpenAPI.validate_property(BubbleGameRanking200ResponseInner, Symbol("id"), id)
        OpenAPI.validate_property(BubbleGameRanking200ResponseInner, Symbol("score"), score)
        OpenAPI.validate_property(BubbleGameRanking200ResponseInner, Symbol("user"), user)
        return new(id, score, user, )
    end
end # type BubbleGameRanking200ResponseInner

const _property_types_BubbleGameRanking200ResponseInner = Dict{Symbol,String}(Symbol("id")=>"String", Symbol("score")=>"Int64", Symbol("user")=>"UserLite", )
OpenAPI.property_type(::Type{ BubbleGameRanking200ResponseInner }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_BubbleGameRanking200ResponseInner[name]))}

function check_required(o::BubbleGameRanking200ResponseInner)
    o.id === nothing && (return false)
    o.score === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ BubbleGameRanking200ResponseInner }, name::Symbol, val)
    if name === Symbol("id")
        OpenAPI.validate_param(name, "BubbleGameRanking200ResponseInner", :format, val, "misskey:id")
    end
end
