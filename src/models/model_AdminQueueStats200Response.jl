# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""admin___queue___stats_200_response

    AdminQueueStats200Response(;
        deliver=nothing,
        inbox=nothing,
        db=nothing,
        objectStorage=nothing,
    )

    - deliver::QueueCount
    - inbox::QueueCount
    - db::QueueCount
    - objectStorage::QueueCount
"""
Base.@kwdef mutable struct AdminQueueStats200Response <: OpenAPI.APIModel
    deliver = nothing # spec type: Union{ Nothing, QueueCount }
    inbox = nothing # spec type: Union{ Nothing, QueueCount }
    db = nothing # spec type: Union{ Nothing, QueueCount }
    objectStorage = nothing # spec type: Union{ Nothing, QueueCount }

    function AdminQueueStats200Response(deliver, inbox, db, objectStorage, )
        OpenAPI.validate_property(AdminQueueStats200Response, Symbol("deliver"), deliver)
        OpenAPI.validate_property(AdminQueueStats200Response, Symbol("inbox"), inbox)
        OpenAPI.validate_property(AdminQueueStats200Response, Symbol("db"), db)
        OpenAPI.validate_property(AdminQueueStats200Response, Symbol("objectStorage"), objectStorage)
        return new(deliver, inbox, db, objectStorage, )
    end
end # type AdminQueueStats200Response

const _property_types_AdminQueueStats200Response = Dict{Symbol,String}(Symbol("deliver")=>"QueueCount", Symbol("inbox")=>"QueueCount", Symbol("db")=>"QueueCount", Symbol("objectStorage")=>"QueueCount", )
OpenAPI.property_type(::Type{ AdminQueueStats200Response }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_AdminQueueStats200Response[name]))}

function check_required(o::AdminQueueStats200Response)
    o.deliver === nothing && (return false)
    o.inbox === nothing && (return false)
    o.db === nothing && (return false)
    o.objectStorage === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ AdminQueueStats200Response }, name::Symbol, val)
end
