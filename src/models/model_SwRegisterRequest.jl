# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""sw___register_request

    SwRegisterRequest(;
        endpoint=nothing,
        auth=nothing,
        publickey=nothing,
        sendReadMessage=false,
    )

    - endpoint::String
    - auth::String
    - publickey::String
    - sendReadMessage::Bool
"""
Base.@kwdef mutable struct SwRegisterRequest <: OpenAPI.APIModel
    endpoint::Union{Nothing, String} = nothing
    auth::Union{Nothing, String} = nothing
    publickey::Union{Nothing, String} = nothing
    sendReadMessage::Union{Nothing, Bool} = false

    function SwRegisterRequest(endpoint, auth, publickey, sendReadMessage, )
        OpenAPI.validate_property(SwRegisterRequest, Symbol("endpoint"), endpoint)
        OpenAPI.validate_property(SwRegisterRequest, Symbol("auth"), auth)
        OpenAPI.validate_property(SwRegisterRequest, Symbol("publickey"), publickey)
        OpenAPI.validate_property(SwRegisterRequest, Symbol("sendReadMessage"), sendReadMessage)
        return new(endpoint, auth, publickey, sendReadMessage, )
    end
end # type SwRegisterRequest

const _property_types_SwRegisterRequest = Dict{Symbol,String}(Symbol("endpoint")=>"String", Symbol("auth")=>"String", Symbol("publickey")=>"String", Symbol("sendReadMessage")=>"Bool", )
OpenAPI.property_type(::Type{ SwRegisterRequest }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_SwRegisterRequest[name]))}

function check_required(o::SwRegisterRequest)
    o.endpoint === nothing && (return false)
    o.auth === nothing && (return false)
    o.publickey === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ SwRegisterRequest }, name::Symbol, val)
end
