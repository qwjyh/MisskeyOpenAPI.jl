# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""MetaDetailedOnly

    MetaDetailedOnly(;
        features=nothing,
        proxyAccountName=nothing,
        requireSetup=nothing,
        cacheRemoteFiles=nothing,
        cacheRemoteSensitiveFiles=nothing,
    )

    - features::MetaDetailedOnlyFeatures
    - proxyAccountName::String
    - requireSetup::Bool
    - cacheRemoteFiles::Bool
    - cacheRemoteSensitiveFiles::Bool
"""
Base.@kwdef mutable struct MetaDetailedOnly <: OpenAPI.APIModel
    features = nothing # spec type: Union{ Nothing, MetaDetailedOnlyFeatures }
    proxyAccountName::Union{Nothing, String} = nothing
    requireSetup::Union{Nothing, Bool} = nothing
    cacheRemoteFiles::Union{Nothing, Bool} = nothing
    cacheRemoteSensitiveFiles::Union{Nothing, Bool} = nothing

    function MetaDetailedOnly(features, proxyAccountName, requireSetup, cacheRemoteFiles, cacheRemoteSensitiveFiles, )
        OpenAPI.validate_property(MetaDetailedOnly, Symbol("features"), features)
        OpenAPI.validate_property(MetaDetailedOnly, Symbol("proxyAccountName"), proxyAccountName)
        OpenAPI.validate_property(MetaDetailedOnly, Symbol("requireSetup"), requireSetup)
        OpenAPI.validate_property(MetaDetailedOnly, Symbol("cacheRemoteFiles"), cacheRemoteFiles)
        OpenAPI.validate_property(MetaDetailedOnly, Symbol("cacheRemoteSensitiveFiles"), cacheRemoteSensitiveFiles)
        return new(features, proxyAccountName, requireSetup, cacheRemoteFiles, cacheRemoteSensitiveFiles, )
    end
end # type MetaDetailedOnly

const _property_types_MetaDetailedOnly = Dict{Symbol,String}(Symbol("features")=>"MetaDetailedOnlyFeatures", Symbol("proxyAccountName")=>"String", Symbol("requireSetup")=>"Bool", Symbol("cacheRemoteFiles")=>"Bool", Symbol("cacheRemoteSensitiveFiles")=>"Bool", )
OpenAPI.property_type(::Type{ MetaDetailedOnly }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_MetaDetailedOnly[name]))}

function check_required(o::MetaDetailedOnly)
    o.features === nothing && (return false)
    o.proxyAccountName === nothing && (return false)
    o.requireSetup === nothing && (return false)
    o.cacheRemoteFiles === nothing && (return false)
    o.cacheRemoteSensitiveFiles === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ MetaDetailedOnly }, name::Symbol, val)
end
