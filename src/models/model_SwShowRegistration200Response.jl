# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""sw___show_registration_200_response

    SwShowRegistration200Response(;
        userId=nothing,
        endpoint=nothing,
        sendReadMessage=nothing,
    )

    - userId::String
    - endpoint::String
    - sendReadMessage::Bool
"""
Base.@kwdef mutable struct SwShowRegistration200Response <: OpenAPI.APIModel
    userId::Union{Nothing, String} = nothing
    endpoint::Union{Nothing, String} = nothing
    sendReadMessage::Union{Nothing, Bool} = nothing

    function SwShowRegistration200Response(userId, endpoint, sendReadMessage, )
        OpenAPI.validate_property(SwShowRegistration200Response, Symbol("userId"), userId)
        OpenAPI.validate_property(SwShowRegistration200Response, Symbol("endpoint"), endpoint)
        OpenAPI.validate_property(SwShowRegistration200Response, Symbol("sendReadMessage"), sendReadMessage)
        return new(userId, endpoint, sendReadMessage, )
    end
end # type SwShowRegistration200Response

const _property_types_SwShowRegistration200Response = Dict{Symbol,String}(Symbol("userId")=>"String", Symbol("endpoint")=>"String", Symbol("sendReadMessage")=>"Bool", )
OpenAPI.property_type(::Type{ SwShowRegistration200Response }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_SwShowRegistration200Response[name]))}

function check_required(o::SwShowRegistration200Response)
    o.userId === nothing && (return false)
    o.endpoint === nothing && (return false)
    o.sendReadMessage === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ SwShowRegistration200Response }, name::Symbol, val)
end
