# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""hashtags___users_request

    HashtagsUsersRequest(;
        tag=nothing,
        limit=10,
        sort=nothing,
        state="all",
        origin="local",
    )

    - tag::String
    - limit::Int64
    - sort::String
    - state::String
    - origin::String
"""
Base.@kwdef mutable struct HashtagsUsersRequest <: OpenAPI.APIModel
    tag::Union{Nothing, String} = nothing
    limit::Union{Nothing, Int64} = 10
    sort::Union{Nothing, String} = nothing
    state::Union{Nothing, String} = "all"
    origin::Union{Nothing, String} = "local"

    function HashtagsUsersRequest(tag, limit, sort, state, origin, )
        OpenAPI.validate_property(HashtagsUsersRequest, Symbol("tag"), tag)
        OpenAPI.validate_property(HashtagsUsersRequest, Symbol("limit"), limit)
        OpenAPI.validate_property(HashtagsUsersRequest, Symbol("sort"), sort)
        OpenAPI.validate_property(HashtagsUsersRequest, Symbol("state"), state)
        OpenAPI.validate_property(HashtagsUsersRequest, Symbol("origin"), origin)
        return new(tag, limit, sort, state, origin, )
    end
end # type HashtagsUsersRequest

const _property_types_HashtagsUsersRequest = Dict{Symbol,String}(Symbol("tag")=>"String", Symbol("limit")=>"Int64", Symbol("sort")=>"String", Symbol("state")=>"String", Symbol("origin")=>"String", )
OpenAPI.property_type(::Type{ HashtagsUsersRequest }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_HashtagsUsersRequest[name]))}

function check_required(o::HashtagsUsersRequest)
    o.tag === nothing && (return false)
    o.sort === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ HashtagsUsersRequest }, name::Symbol, val)
    if name === Symbol("limit")
        OpenAPI.validate_param(name, "HashtagsUsersRequest", :maximum, val, 100, false)
        OpenAPI.validate_param(name, "HashtagsUsersRequest", :minimum, val, 1, false)
    end
    if name === Symbol("sort")
        OpenAPI.validate_param(name, "HashtagsUsersRequest", :enum, val, ["+follower", "-follower", "+createdAt", "-createdAt", "+updatedAt", "-updatedAt"])
    end
    if name === Symbol("state")
        OpenAPI.validate_param(name, "HashtagsUsersRequest", :enum, val, ["all", "alive"])
    end
    if name === Symbol("origin")
        OpenAPI.validate_param(name, "HashtagsUsersRequest", :enum, val, ["combined", "local", "remote"])
    end
end
