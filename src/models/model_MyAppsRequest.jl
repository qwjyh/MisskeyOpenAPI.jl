# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""my___apps_request

    MyAppsRequest(;
        limit=10,
        offset=0,
    )

    - limit::Int64
    - offset::Int64
"""
Base.@kwdef mutable struct MyAppsRequest <: OpenAPI.APIModel
    limit::Union{Nothing, Int64} = 10
    offset::Union{Nothing, Int64} = 0

    function MyAppsRequest(limit, offset, )
        OpenAPI.validate_property(MyAppsRequest, Symbol("limit"), limit)
        OpenAPI.validate_property(MyAppsRequest, Symbol("offset"), offset)
        return new(limit, offset, )
    end
end # type MyAppsRequest

const _property_types_MyAppsRequest = Dict{Symbol,String}(Symbol("limit")=>"Int64", Symbol("offset")=>"Int64", )
OpenAPI.property_type(::Type{ MyAppsRequest }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_MyAppsRequest[name]))}

function check_required(o::MyAppsRequest)
    true
end

function OpenAPI.validate_property(::Type{ MyAppsRequest }, name::Symbol, val)
    if name === Symbol("limit")
        OpenAPI.validate_param(name, "MyAppsRequest", :maximum, val, 100, false)
        OpenAPI.validate_param(name, "MyAppsRequest", :minimum, val, 1, false)
    end
end
