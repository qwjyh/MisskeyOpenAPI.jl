# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""admin___show_user_200_response

    AdminShowUser200Response(;
        email=nothing,
        emailVerified=nothing,
        autoAcceptFollowed=nothing,
        noCrawle=nothing,
        preventAiLearning=nothing,
        alwaysMarkNsfw=nothing,
        autoSensitive=nothing,
        carefulBot=nothing,
        injectFeaturedNote=nothing,
        receiveAnnouncementEmail=nothing,
        mutedWords=nothing,
        mutedInstances=nothing,
        notificationRecieveConfig=nothing,
        isModerator=nothing,
        isSilenced=nothing,
        isSuspended=nothing,
        isHibernated=nothing,
        lastActiveDate=nothing,
        moderationNote=nothing,
        signins=nothing,
        policies=nothing,
        roles=nothing,
        roleAssigns=nothing,
    )

    - email::String
    - emailVerified::Bool
    - autoAcceptFollowed::Bool
    - noCrawle::Bool
    - preventAiLearning::Bool
    - alwaysMarkNsfw::Bool
    - autoSensitive::Bool
    - carefulBot::Bool
    - injectFeaturedNote::Bool
    - receiveAnnouncementEmail::Bool
    - mutedWords::Vector{AdminShowUser200ResponseMutedWordsInner}
    - mutedInstances::Vector{String}
    - notificationRecieveConfig::AdminShowUser200ResponseNotificationRecieveConfig
    - isModerator::Bool
    - isSilenced::Bool
    - isSuspended::Bool
    - isHibernated::Bool
    - lastActiveDate::String
    - moderationNote::String
    - signins::Vector{Signin}
    - policies::RolePolicies
    - roles::Vector{Role}
    - roleAssigns::Vector{AdminShowUser200ResponseRoleAssignsInner}
"""
Base.@kwdef mutable struct AdminShowUser200Response <: OpenAPI.APIModel
    email::Union{Nothing, String} = nothing
    emailVerified::Union{Nothing, Bool} = nothing
    autoAcceptFollowed::Union{Nothing, Bool} = nothing
    noCrawle::Union{Nothing, Bool} = nothing
    preventAiLearning::Union{Nothing, Bool} = nothing
    alwaysMarkNsfw::Union{Nothing, Bool} = nothing
    autoSensitive::Union{Nothing, Bool} = nothing
    carefulBot::Union{Nothing, Bool} = nothing
    injectFeaturedNote::Union{Nothing, Bool} = nothing
    receiveAnnouncementEmail::Union{Nothing, Bool} = nothing
    mutedWords::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{AdminShowUser200ResponseMutedWordsInner} }
    mutedInstances::Union{Nothing, Vector{String}} = nothing
    notificationRecieveConfig = nothing # spec type: Union{ Nothing, AdminShowUser200ResponseNotificationRecieveConfig }
    isModerator::Union{Nothing, Bool} = nothing
    isSilenced::Union{Nothing, Bool} = nothing
    isSuspended::Union{Nothing, Bool} = nothing
    isHibernated::Union{Nothing, Bool} = nothing
    lastActiveDate::Union{Nothing, String} = nothing
    moderationNote::Union{Nothing, String} = nothing
    signins::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{Signin} }
    policies = nothing # spec type: Union{ Nothing, RolePolicies }
    roles::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{Role} }
    roleAssigns::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{AdminShowUser200ResponseRoleAssignsInner} }

    function AdminShowUser200Response(email, emailVerified, autoAcceptFollowed, noCrawle, preventAiLearning, alwaysMarkNsfw, autoSensitive, carefulBot, injectFeaturedNote, receiveAnnouncementEmail, mutedWords, mutedInstances, notificationRecieveConfig, isModerator, isSilenced, isSuspended, isHibernated, lastActiveDate, moderationNote, signins, policies, roles, roleAssigns, )
        OpenAPI.validate_property(AdminShowUser200Response, Symbol("email"), email)
        OpenAPI.validate_property(AdminShowUser200Response, Symbol("emailVerified"), emailVerified)
        OpenAPI.validate_property(AdminShowUser200Response, Symbol("autoAcceptFollowed"), autoAcceptFollowed)
        OpenAPI.validate_property(AdminShowUser200Response, Symbol("noCrawle"), noCrawle)
        OpenAPI.validate_property(AdminShowUser200Response, Symbol("preventAiLearning"), preventAiLearning)
        OpenAPI.validate_property(AdminShowUser200Response, Symbol("alwaysMarkNsfw"), alwaysMarkNsfw)
        OpenAPI.validate_property(AdminShowUser200Response, Symbol("autoSensitive"), autoSensitive)
        OpenAPI.validate_property(AdminShowUser200Response, Symbol("carefulBot"), carefulBot)
        OpenAPI.validate_property(AdminShowUser200Response, Symbol("injectFeaturedNote"), injectFeaturedNote)
        OpenAPI.validate_property(AdminShowUser200Response, Symbol("receiveAnnouncementEmail"), receiveAnnouncementEmail)
        OpenAPI.validate_property(AdminShowUser200Response, Symbol("mutedWords"), mutedWords)
        OpenAPI.validate_property(AdminShowUser200Response, Symbol("mutedInstances"), mutedInstances)
        OpenAPI.validate_property(AdminShowUser200Response, Symbol("notificationRecieveConfig"), notificationRecieveConfig)
        OpenAPI.validate_property(AdminShowUser200Response, Symbol("isModerator"), isModerator)
        OpenAPI.validate_property(AdminShowUser200Response, Symbol("isSilenced"), isSilenced)
        OpenAPI.validate_property(AdminShowUser200Response, Symbol("isSuspended"), isSuspended)
        OpenAPI.validate_property(AdminShowUser200Response, Symbol("isHibernated"), isHibernated)
        OpenAPI.validate_property(AdminShowUser200Response, Symbol("lastActiveDate"), lastActiveDate)
        OpenAPI.validate_property(AdminShowUser200Response, Symbol("moderationNote"), moderationNote)
        OpenAPI.validate_property(AdminShowUser200Response, Symbol("signins"), signins)
        OpenAPI.validate_property(AdminShowUser200Response, Symbol("policies"), policies)
        OpenAPI.validate_property(AdminShowUser200Response, Symbol("roles"), roles)
        OpenAPI.validate_property(AdminShowUser200Response, Symbol("roleAssigns"), roleAssigns)
        return new(email, emailVerified, autoAcceptFollowed, noCrawle, preventAiLearning, alwaysMarkNsfw, autoSensitive, carefulBot, injectFeaturedNote, receiveAnnouncementEmail, mutedWords, mutedInstances, notificationRecieveConfig, isModerator, isSilenced, isSuspended, isHibernated, lastActiveDate, moderationNote, signins, policies, roles, roleAssigns, )
    end
end # type AdminShowUser200Response

const _property_types_AdminShowUser200Response = Dict{Symbol,String}(Symbol("email")=>"String", Symbol("emailVerified")=>"Bool", Symbol("autoAcceptFollowed")=>"Bool", Symbol("noCrawle")=>"Bool", Symbol("preventAiLearning")=>"Bool", Symbol("alwaysMarkNsfw")=>"Bool", Symbol("autoSensitive")=>"Bool", Symbol("carefulBot")=>"Bool", Symbol("injectFeaturedNote")=>"Bool", Symbol("receiveAnnouncementEmail")=>"Bool", Symbol("mutedWords")=>"Vector{AdminShowUser200ResponseMutedWordsInner}", Symbol("mutedInstances")=>"Vector{String}", Symbol("notificationRecieveConfig")=>"AdminShowUser200ResponseNotificationRecieveConfig", Symbol("isModerator")=>"Bool", Symbol("isSilenced")=>"Bool", Symbol("isSuspended")=>"Bool", Symbol("isHibernated")=>"Bool", Symbol("lastActiveDate")=>"String", Symbol("moderationNote")=>"String", Symbol("signins")=>"Vector{Signin}", Symbol("policies")=>"RolePolicies", Symbol("roles")=>"Vector{Role}", Symbol("roleAssigns")=>"Vector{AdminShowUser200ResponseRoleAssignsInner}", )
OpenAPI.property_type(::Type{ AdminShowUser200Response }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_AdminShowUser200Response[name]))}

function check_required(o::AdminShowUser200Response)
    o.email === nothing && (return false)
    o.emailVerified === nothing && (return false)
    o.autoAcceptFollowed === nothing && (return false)
    o.noCrawle === nothing && (return false)
    o.preventAiLearning === nothing && (return false)
    o.alwaysMarkNsfw === nothing && (return false)
    o.autoSensitive === nothing && (return false)
    o.carefulBot === nothing && (return false)
    o.injectFeaturedNote === nothing && (return false)
    o.receiveAnnouncementEmail === nothing && (return false)
    o.mutedWords === nothing && (return false)
    o.mutedInstances === nothing && (return false)
    o.notificationRecieveConfig === nothing && (return false)
    o.isModerator === nothing && (return false)
    o.isSilenced === nothing && (return false)
    o.isSuspended === nothing && (return false)
    o.isHibernated === nothing && (return false)
    o.lastActiveDate === nothing && (return false)
    o.moderationNote === nothing && (return false)
    o.signins === nothing && (return false)
    o.policies === nothing && (return false)
    o.roles === nothing && (return false)
    o.roleAssigns === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ AdminShowUser200Response }, name::Symbol, val)
end
