# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""notes___translate_200_response

    NotesTranslate200Response(;
        sourceLang=nothing,
        text=nothing,
    )

    - sourceLang::String
    - text::String
"""
Base.@kwdef mutable struct NotesTranslate200Response <: OpenAPI.APIModel
    sourceLang::Union{Nothing, String} = nothing
    text::Union{Nothing, String} = nothing

    function NotesTranslate200Response(sourceLang, text, )
        OpenAPI.validate_property(NotesTranslate200Response, Symbol("sourceLang"), sourceLang)
        OpenAPI.validate_property(NotesTranslate200Response, Symbol("text"), text)
        return new(sourceLang, text, )
    end
end # type NotesTranslate200Response

const _property_types_NotesTranslate200Response = Dict{Symbol,String}(Symbol("sourceLang")=>"String", Symbol("text")=>"String", )
OpenAPI.property_type(::Type{ NotesTranslate200Response }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_NotesTranslate200Response[name]))}

function check_required(o::NotesTranslate200Response)
    o.sourceLang === nothing && (return false)
    o.text === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ NotesTranslate200Response }, name::Symbol, val)
end
