# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""Note_channel

    NoteChannel(;
        id=nothing,
        name=nothing,
        color=nothing,
        isSensitive=nothing,
        allowRenoteToExternal=nothing,
        userId=nothing,
    )

    - id::String
    - name::String
    - color::String
    - isSensitive::Bool
    - allowRenoteToExternal::Bool
    - userId::String
"""
Base.@kwdef mutable struct NoteChannel <: OpenAPI.APIModel
    id::Union{Nothing, String} = nothing
    name::Union{Nothing, String} = nothing
    color::Union{Nothing, String} = nothing
    isSensitive::Union{Nothing, Bool} = nothing
    allowRenoteToExternal::Union{Nothing, Bool} = nothing
    userId::Union{Nothing, String} = nothing

    function NoteChannel(id, name, color, isSensitive, allowRenoteToExternal, userId, )
        OpenAPI.validate_property(NoteChannel, Symbol("id"), id)
        OpenAPI.validate_property(NoteChannel, Symbol("name"), name)
        OpenAPI.validate_property(NoteChannel, Symbol("color"), color)
        OpenAPI.validate_property(NoteChannel, Symbol("isSensitive"), isSensitive)
        OpenAPI.validate_property(NoteChannel, Symbol("allowRenoteToExternal"), allowRenoteToExternal)
        OpenAPI.validate_property(NoteChannel, Symbol("userId"), userId)
        return new(id, name, color, isSensitive, allowRenoteToExternal, userId, )
    end
end # type NoteChannel

const _property_types_NoteChannel = Dict{Symbol,String}(Symbol("id")=>"String", Symbol("name")=>"String", Symbol("color")=>"String", Symbol("isSensitive")=>"Bool", Symbol("allowRenoteToExternal")=>"Bool", Symbol("userId")=>"String", )
OpenAPI.property_type(::Type{ NoteChannel }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_NoteChannel[name]))}

function check_required(o::NoteChannel)
    o.id === nothing && (return false)
    o.name === nothing && (return false)
    o.color === nothing && (return false)
    o.isSensitive === nothing && (return false)
    o.allowRenoteToExternal === nothing && (return false)
    o.userId === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ NoteChannel }, name::Symbol, val)
end
