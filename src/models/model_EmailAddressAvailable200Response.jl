# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""email_address___available_200_response

    EmailAddressAvailable200Response(;
        available=nothing,
        reason=nothing,
    )

    - available::Bool
    - reason::String
"""
Base.@kwdef mutable struct EmailAddressAvailable200Response <: OpenAPI.APIModel
    available::Union{Nothing, Bool} = nothing
    reason::Union{Nothing, String} = nothing

    function EmailAddressAvailable200Response(available, reason, )
        OpenAPI.validate_property(EmailAddressAvailable200Response, Symbol("available"), available)
        OpenAPI.validate_property(EmailAddressAvailable200Response, Symbol("reason"), reason)
        return new(available, reason, )
    end
end # type EmailAddressAvailable200Response

const _property_types_EmailAddressAvailable200Response = Dict{Symbol,String}(Symbol("available")=>"Bool", Symbol("reason")=>"String", )
OpenAPI.property_type(::Type{ EmailAddressAvailable200Response }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_EmailAddressAvailable200Response[name]))}

function check_required(o::EmailAddressAvailable200Response)
    o.available === nothing && (return false)
    o.reason === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ EmailAddressAvailable200Response }, name::Symbol, val)
end
