# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""admin___show_user_200_response_notificationRecieveConfig_note_oneOf

    AdminShowUser200ResponseNotificationRecieveConfigNoteOneOf(;
        type=nothing,
    )

    - type::String
"""
Base.@kwdef mutable struct AdminShowUser200ResponseNotificationRecieveConfigNoteOneOf <: OpenAPI.APIModel
    type::Union{Nothing, String} = nothing

    function AdminShowUser200ResponseNotificationRecieveConfigNoteOneOf(type, )
        OpenAPI.validate_property(AdminShowUser200ResponseNotificationRecieveConfigNoteOneOf, Symbol("type"), type)
        return new(type, )
    end
end # type AdminShowUser200ResponseNotificationRecieveConfigNoteOneOf

const _property_types_AdminShowUser200ResponseNotificationRecieveConfigNoteOneOf = Dict{Symbol,String}(Symbol("type")=>"String", )
OpenAPI.property_type(::Type{ AdminShowUser200ResponseNotificationRecieveConfigNoteOneOf }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_AdminShowUser200ResponseNotificationRecieveConfigNoteOneOf[name]))}

function check_required(o::AdminShowUser200ResponseNotificationRecieveConfigNoteOneOf)
    o.type === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ AdminShowUser200ResponseNotificationRecieveConfigNoteOneOf }, name::Symbol, val)
    if name === Symbol("type")
        OpenAPI.validate_param(name, "AdminShowUser200ResponseNotificationRecieveConfigNoteOneOf", :enum, val, ["all", "following", "follower", "mutualFollow", "followingOrFollower", "never"])
    end
end
