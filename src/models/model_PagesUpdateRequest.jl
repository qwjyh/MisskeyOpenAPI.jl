# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""pages___update_request

    PagesUpdateRequest(;
        pageId=nothing,
        title=nothing,
        name=nothing,
        summary=nothing,
        content=nothing,
        variables=nothing,
        script=nothing,
        eyeCatchingImageId=nothing,
        font=nothing,
        alignCenter=nothing,
        hideTitleWhenPinned=nothing,
    )

    - pageId::String
    - title::String
    - name::String
    - summary::String
    - content::Vector{Dict{String, Any}}
    - variables::Vector{Dict{String, Any}}
    - script::String
    - eyeCatchingImageId::String
    - font::String
    - alignCenter::Bool
    - hideTitleWhenPinned::Bool
"""
Base.@kwdef mutable struct PagesUpdateRequest <: OpenAPI.APIModel
    pageId::Union{Nothing, String} = nothing
    title::Union{Nothing, String} = nothing
    name::Union{Nothing, String} = nothing
    summary::Union{Nothing, String} = nothing
    content::Union{Nothing, Vector{Dict{String, Any}}} = nothing
    variables::Union{Nothing, Vector{Dict{String, Any}}} = nothing
    script::Union{Nothing, String} = nothing
    eyeCatchingImageId::Union{Nothing, String} = nothing
    font::Union{Nothing, String} = nothing
    alignCenter::Union{Nothing, Bool} = nothing
    hideTitleWhenPinned::Union{Nothing, Bool} = nothing

    function PagesUpdateRequest(pageId, title, name, summary, content, variables, script, eyeCatchingImageId, font, alignCenter, hideTitleWhenPinned, )
        OpenAPI.validate_property(PagesUpdateRequest, Symbol("pageId"), pageId)
        OpenAPI.validate_property(PagesUpdateRequest, Symbol("title"), title)
        OpenAPI.validate_property(PagesUpdateRequest, Symbol("name"), name)
        OpenAPI.validate_property(PagesUpdateRequest, Symbol("summary"), summary)
        OpenAPI.validate_property(PagesUpdateRequest, Symbol("content"), content)
        OpenAPI.validate_property(PagesUpdateRequest, Symbol("variables"), variables)
        OpenAPI.validate_property(PagesUpdateRequest, Symbol("script"), script)
        OpenAPI.validate_property(PagesUpdateRequest, Symbol("eyeCatchingImageId"), eyeCatchingImageId)
        OpenAPI.validate_property(PagesUpdateRequest, Symbol("font"), font)
        OpenAPI.validate_property(PagesUpdateRequest, Symbol("alignCenter"), alignCenter)
        OpenAPI.validate_property(PagesUpdateRequest, Symbol("hideTitleWhenPinned"), hideTitleWhenPinned)
        return new(pageId, title, name, summary, content, variables, script, eyeCatchingImageId, font, alignCenter, hideTitleWhenPinned, )
    end
end # type PagesUpdateRequest

const _property_types_PagesUpdateRequest = Dict{Symbol,String}(Symbol("pageId")=>"String", Symbol("title")=>"String", Symbol("name")=>"String", Symbol("summary")=>"String", Symbol("content")=>"Vector{Dict{String, Any}}", Symbol("variables")=>"Vector{Dict{String, Any}}", Symbol("script")=>"String", Symbol("eyeCatchingImageId")=>"String", Symbol("font")=>"String", Symbol("alignCenter")=>"Bool", Symbol("hideTitleWhenPinned")=>"Bool", )
OpenAPI.property_type(::Type{ PagesUpdateRequest }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_PagesUpdateRequest[name]))}

function check_required(o::PagesUpdateRequest)
    o.pageId === nothing && (return false)
    o.title === nothing && (return false)
    o.name === nothing && (return false)
    o.content === nothing && (return false)
    o.variables === nothing && (return false)
    o.script === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ PagesUpdateRequest }, name::Symbol, val)
    if name === Symbol("pageId")
        OpenAPI.validate_param(name, "PagesUpdateRequest", :format, val, "misskey:id")
    end
    if name === Symbol("name")
        OpenAPI.validate_param(name, "PagesUpdateRequest", :minLength, val, 1)
    end
    if name === Symbol("eyeCatchingImageId")
        OpenAPI.validate_param(name, "PagesUpdateRequest", :format, val, "misskey:id")
    end
    if name === Symbol("font")
        OpenAPI.validate_param(name, "PagesUpdateRequest", :enum, val, ["serif", "sans-serif"])
    end
end
