# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""admin___roles___users_200_response_inner

    AdminRolesUsers200ResponseInner(;
        id=nothing,
        createdAt=nothing,
        user=nothing,
        expiresAt=nothing,
    )

    - id::String
    - createdAt::ZonedDateTime
    - user::UserDetailed
    - expiresAt::ZonedDateTime
"""
Base.@kwdef mutable struct AdminRolesUsers200ResponseInner <: OpenAPI.APIModel
    id::Union{Nothing, String} = nothing
    createdAt::Union{Nothing, ZonedDateTime} = nothing
    user = nothing # spec type: Union{ Nothing, UserDetailed }
    expiresAt::Union{Nothing, ZonedDateTime} = nothing

    function AdminRolesUsers200ResponseInner(id, createdAt, user, expiresAt, )
        OpenAPI.validate_property(AdminRolesUsers200ResponseInner, Symbol("id"), id)
        OpenAPI.validate_property(AdminRolesUsers200ResponseInner, Symbol("createdAt"), createdAt)
        OpenAPI.validate_property(AdminRolesUsers200ResponseInner, Symbol("user"), user)
        OpenAPI.validate_property(AdminRolesUsers200ResponseInner, Symbol("expiresAt"), expiresAt)
        return new(id, createdAt, user, expiresAt, )
    end
end # type AdminRolesUsers200ResponseInner

const _property_types_AdminRolesUsers200ResponseInner = Dict{Symbol,String}(Symbol("id")=>"String", Symbol("createdAt")=>"ZonedDateTime", Symbol("user")=>"UserDetailed", Symbol("expiresAt")=>"ZonedDateTime", )
OpenAPI.property_type(::Type{ AdminRolesUsers200ResponseInner }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_AdminRolesUsers200ResponseInner[name]))}

function check_required(o::AdminRolesUsers200ResponseInner)
    o.id === nothing && (return false)
    o.createdAt === nothing && (return false)
    o.user === nothing && (return false)
    o.expiresAt === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ AdminRolesUsers200ResponseInner }, name::Symbol, val)
    if name === Symbol("id")
        OpenAPI.validate_param(name, "AdminRolesUsers200ResponseInner", :format, val, "misskey:id")
    end
    if name === Symbol("createdAt")
        OpenAPI.validate_param(name, "AdminRolesUsers200ResponseInner", :format, val, "date-time")
    end
    if name === Symbol("expiresAt")
        OpenAPI.validate_param(name, "AdminRolesUsers200ResponseInner", :format, val, "date-time")
    end
end
