# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""admin___show_user_200_response_notificationRecieveConfig_note_oneOf_1

    AdminShowUser200ResponseNotificationRecieveConfigNoteOneOf1(;
        type=nothing,
        userListId=nothing,
    )

    - type::String
    - userListId::String
"""
Base.@kwdef mutable struct AdminShowUser200ResponseNotificationRecieveConfigNoteOneOf1 <: OpenAPI.APIModel
    type::Union{Nothing, String} = nothing
    userListId::Union{Nothing, String} = nothing

    function AdminShowUser200ResponseNotificationRecieveConfigNoteOneOf1(type, userListId, )
        OpenAPI.validate_property(AdminShowUser200ResponseNotificationRecieveConfigNoteOneOf1, Symbol("type"), type)
        OpenAPI.validate_property(AdminShowUser200ResponseNotificationRecieveConfigNoteOneOf1, Symbol("userListId"), userListId)
        return new(type, userListId, )
    end
end # type AdminShowUser200ResponseNotificationRecieveConfigNoteOneOf1

const _property_types_AdminShowUser200ResponseNotificationRecieveConfigNoteOneOf1 = Dict{Symbol,String}(Symbol("type")=>"String", Symbol("userListId")=>"String", )
OpenAPI.property_type(::Type{ AdminShowUser200ResponseNotificationRecieveConfigNoteOneOf1 }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_AdminShowUser200ResponseNotificationRecieveConfigNoteOneOf1[name]))}

function check_required(o::AdminShowUser200ResponseNotificationRecieveConfigNoteOneOf1)
    o.type === nothing && (return false)
    o.userListId === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ AdminShowUser200ResponseNotificationRecieveConfigNoteOneOf1 }, name::Symbol, val)
    if name === Symbol("type")
        OpenAPI.validate_param(name, "AdminShowUser200ResponseNotificationRecieveConfigNoteOneOf1", :enum, val, ["list"])
    end
    if name === Symbol("userListId")
        OpenAPI.validate_param(name, "AdminShowUser200ResponseNotificationRecieveConfigNoteOneOf1", :format, val, "misskey:id")
    end
end
