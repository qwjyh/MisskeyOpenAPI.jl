# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""MetaDetailedOnly_features

    MetaDetailedOnlyFeatures(;
        registration=nothing,
        emailRequiredForSignup=nothing,
        localTimeline=nothing,
        globalTimeline=nothing,
        hcaptcha=nothing,
        turnstile=nothing,
        recaptcha=nothing,
        objectStorage=nothing,
        serviceWorker=nothing,
        miauth=true,
    )

    - registration::Bool
    - emailRequiredForSignup::Bool
    - localTimeline::Bool
    - globalTimeline::Bool
    - hcaptcha::Bool
    - turnstile::Bool
    - recaptcha::Bool
    - objectStorage::Bool
    - serviceWorker::Bool
    - miauth::Bool
"""
Base.@kwdef mutable struct MetaDetailedOnlyFeatures <: OpenAPI.APIModel
    registration::Union{Nothing, Bool} = nothing
    emailRequiredForSignup::Union{Nothing, Bool} = nothing
    localTimeline::Union{Nothing, Bool} = nothing
    globalTimeline::Union{Nothing, Bool} = nothing
    hcaptcha::Union{Nothing, Bool} = nothing
    turnstile::Union{Nothing, Bool} = nothing
    recaptcha::Union{Nothing, Bool} = nothing
    objectStorage::Union{Nothing, Bool} = nothing
    serviceWorker::Union{Nothing, Bool} = nothing
    miauth::Union{Nothing, Bool} = true

    function MetaDetailedOnlyFeatures(registration, emailRequiredForSignup, localTimeline, globalTimeline, hcaptcha, turnstile, recaptcha, objectStorage, serviceWorker, miauth, )
        OpenAPI.validate_property(MetaDetailedOnlyFeatures, Symbol("registration"), registration)
        OpenAPI.validate_property(MetaDetailedOnlyFeatures, Symbol("emailRequiredForSignup"), emailRequiredForSignup)
        OpenAPI.validate_property(MetaDetailedOnlyFeatures, Symbol("localTimeline"), localTimeline)
        OpenAPI.validate_property(MetaDetailedOnlyFeatures, Symbol("globalTimeline"), globalTimeline)
        OpenAPI.validate_property(MetaDetailedOnlyFeatures, Symbol("hcaptcha"), hcaptcha)
        OpenAPI.validate_property(MetaDetailedOnlyFeatures, Symbol("turnstile"), turnstile)
        OpenAPI.validate_property(MetaDetailedOnlyFeatures, Symbol("recaptcha"), recaptcha)
        OpenAPI.validate_property(MetaDetailedOnlyFeatures, Symbol("objectStorage"), objectStorage)
        OpenAPI.validate_property(MetaDetailedOnlyFeatures, Symbol("serviceWorker"), serviceWorker)
        OpenAPI.validate_property(MetaDetailedOnlyFeatures, Symbol("miauth"), miauth)
        return new(registration, emailRequiredForSignup, localTimeline, globalTimeline, hcaptcha, turnstile, recaptcha, objectStorage, serviceWorker, miauth, )
    end
end # type MetaDetailedOnlyFeatures

const _property_types_MetaDetailedOnlyFeatures = Dict{Symbol,String}(Symbol("registration")=>"Bool", Symbol("emailRequiredForSignup")=>"Bool", Symbol("localTimeline")=>"Bool", Symbol("globalTimeline")=>"Bool", Symbol("hcaptcha")=>"Bool", Symbol("turnstile")=>"Bool", Symbol("recaptcha")=>"Bool", Symbol("objectStorage")=>"Bool", Symbol("serviceWorker")=>"Bool", Symbol("miauth")=>"Bool", )
OpenAPI.property_type(::Type{ MetaDetailedOnlyFeatures }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_MetaDetailedOnlyFeatures[name]))}

function check_required(o::MetaDetailedOnlyFeatures)
    o.registration === nothing && (return false)
    o.emailRequiredForSignup === nothing && (return false)
    o.localTimeline === nothing && (return false)
    o.globalTimeline === nothing && (return false)
    o.hcaptcha === nothing && (return false)
    o.turnstile === nothing && (return false)
    o.recaptcha === nothing && (return false)
    o.objectStorage === nothing && (return false)
    o.serviceWorker === nothing && (return false)
    o.miauth === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ MetaDetailedOnlyFeatures }, name::Symbol, val)
end
