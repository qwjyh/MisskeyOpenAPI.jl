# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""ReversiGameDetailed

    ReversiGameDetailed(;
        id=nothing,
        createdAt=nothing,
        startedAt=nothing,
        endedAt=nothing,
        isStarted=nothing,
        isEnded=nothing,
        form1=nothing,
        form2=nothing,
        user1Ready=nothing,
        user2Ready=nothing,
        user1Id=nothing,
        user2Id=nothing,
        user1=nothing,
        user2=nothing,
        winnerId=nothing,
        winner=nothing,
        surrenderedUserId=nothing,
        timeoutUserId=nothing,
        black=nothing,
        bw=nothing,
        noIrregularRules=nothing,
        isLlotheo=nothing,
        canPutEverywhere=nothing,
        loopedBoard=nothing,
        timeLimitForEachTurn=nothing,
        logs=nothing,
        map=nothing,
    )

    - id::String
    - createdAt::ZonedDateTime
    - startedAt::ZonedDateTime
    - endedAt::ZonedDateTime
    - isStarted::Bool
    - isEnded::Bool
    - form1::Any
    - form2::Any
    - user1Ready::Bool
    - user2Ready::Bool
    - user1Id::String
    - user2Id::String
    - user1::UserLite
    - user2::UserLite
    - winnerId::String
    - winner::UserLite
    - surrenderedUserId::String
    - timeoutUserId::String
    - black::Float64
    - bw::String
    - noIrregularRules::Bool
    - isLlotheo::Bool
    - canPutEverywhere::Bool
    - loopedBoard::Bool
    - timeLimitForEachTurn::Float64
    - logs::Vector{Vector{Float64}}
    - map::Vector{String}
"""
Base.@kwdef mutable struct ReversiGameDetailed <: OpenAPI.APIModel
    id::Union{Nothing, String} = nothing
    createdAt::Union{Nothing, ZonedDateTime} = nothing
    startedAt::Union{Nothing, ZonedDateTime} = nothing
    endedAt::Union{Nothing, ZonedDateTime} = nothing
    isStarted::Union{Nothing, Bool} = nothing
    isEnded::Union{Nothing, Bool} = nothing
    form1::Union{Nothing, Any} = nothing
    form2::Union{Nothing, Any} = nothing
    user1Ready::Union{Nothing, Bool} = nothing
    user2Ready::Union{Nothing, Bool} = nothing
    user1Id::Union{Nothing, String} = nothing
    user2Id::Union{Nothing, String} = nothing
    user1 = nothing # spec type: Union{ Nothing, UserLite }
    user2 = nothing # spec type: Union{ Nothing, UserLite }
    winnerId::Union{Nothing, String} = nothing
    winner = nothing # spec type: Union{ Nothing, UserLite }
    surrenderedUserId::Union{Nothing, String} = nothing
    timeoutUserId::Union{Nothing, String} = nothing
    black::Union{Nothing, Float64} = nothing
    bw::Union{Nothing, String} = nothing
    noIrregularRules::Union{Nothing, Bool} = nothing
    isLlotheo::Union{Nothing, Bool} = nothing
    canPutEverywhere::Union{Nothing, Bool} = nothing
    loopedBoard::Union{Nothing, Bool} = nothing
    timeLimitForEachTurn::Union{Nothing, Float64} = nothing
    logs::Union{Nothing, Vector{Vector{Float64}}} = nothing
    map::Union{Nothing, Vector{String}} = nothing

    function ReversiGameDetailed(id, createdAt, startedAt, endedAt, isStarted, isEnded, form1, form2, user1Ready, user2Ready, user1Id, user2Id, user1, user2, winnerId, winner, surrenderedUserId, timeoutUserId, black, bw, noIrregularRules, isLlotheo, canPutEverywhere, loopedBoard, timeLimitForEachTurn, logs, map, )
        OpenAPI.validate_property(ReversiGameDetailed, Symbol("id"), id)
        OpenAPI.validate_property(ReversiGameDetailed, Symbol("createdAt"), createdAt)
        OpenAPI.validate_property(ReversiGameDetailed, Symbol("startedAt"), startedAt)
        OpenAPI.validate_property(ReversiGameDetailed, Symbol("endedAt"), endedAt)
        OpenAPI.validate_property(ReversiGameDetailed, Symbol("isStarted"), isStarted)
        OpenAPI.validate_property(ReversiGameDetailed, Symbol("isEnded"), isEnded)
        OpenAPI.validate_property(ReversiGameDetailed, Symbol("form1"), form1)
        OpenAPI.validate_property(ReversiGameDetailed, Symbol("form2"), form2)
        OpenAPI.validate_property(ReversiGameDetailed, Symbol("user1Ready"), user1Ready)
        OpenAPI.validate_property(ReversiGameDetailed, Symbol("user2Ready"), user2Ready)
        OpenAPI.validate_property(ReversiGameDetailed, Symbol("user1Id"), user1Id)
        OpenAPI.validate_property(ReversiGameDetailed, Symbol("user2Id"), user2Id)
        OpenAPI.validate_property(ReversiGameDetailed, Symbol("user1"), user1)
        OpenAPI.validate_property(ReversiGameDetailed, Symbol("user2"), user2)
        OpenAPI.validate_property(ReversiGameDetailed, Symbol("winnerId"), winnerId)
        OpenAPI.validate_property(ReversiGameDetailed, Symbol("winner"), winner)
        OpenAPI.validate_property(ReversiGameDetailed, Symbol("surrenderedUserId"), surrenderedUserId)
        OpenAPI.validate_property(ReversiGameDetailed, Symbol("timeoutUserId"), timeoutUserId)
        OpenAPI.validate_property(ReversiGameDetailed, Symbol("black"), black)
        OpenAPI.validate_property(ReversiGameDetailed, Symbol("bw"), bw)
        OpenAPI.validate_property(ReversiGameDetailed, Symbol("noIrregularRules"), noIrregularRules)
        OpenAPI.validate_property(ReversiGameDetailed, Symbol("isLlotheo"), isLlotheo)
        OpenAPI.validate_property(ReversiGameDetailed, Symbol("canPutEverywhere"), canPutEverywhere)
        OpenAPI.validate_property(ReversiGameDetailed, Symbol("loopedBoard"), loopedBoard)
        OpenAPI.validate_property(ReversiGameDetailed, Symbol("timeLimitForEachTurn"), timeLimitForEachTurn)
        OpenAPI.validate_property(ReversiGameDetailed, Symbol("logs"), logs)
        OpenAPI.validate_property(ReversiGameDetailed, Symbol("map"), map)
        return new(id, createdAt, startedAt, endedAt, isStarted, isEnded, form1, form2, user1Ready, user2Ready, user1Id, user2Id, user1, user2, winnerId, winner, surrenderedUserId, timeoutUserId, black, bw, noIrregularRules, isLlotheo, canPutEverywhere, loopedBoard, timeLimitForEachTurn, logs, map, )
    end
end # type ReversiGameDetailed

const _property_types_ReversiGameDetailed = Dict{Symbol,String}(Symbol("id")=>"String", Symbol("createdAt")=>"ZonedDateTime", Symbol("startedAt")=>"ZonedDateTime", Symbol("endedAt")=>"ZonedDateTime", Symbol("isStarted")=>"Bool", Symbol("isEnded")=>"Bool", Symbol("form1")=>"Any", Symbol("form2")=>"Any", Symbol("user1Ready")=>"Bool", Symbol("user2Ready")=>"Bool", Symbol("user1Id")=>"String", Symbol("user2Id")=>"String", Symbol("user1")=>"UserLite", Symbol("user2")=>"UserLite", Symbol("winnerId")=>"String", Symbol("winner")=>"UserLite", Symbol("surrenderedUserId")=>"String", Symbol("timeoutUserId")=>"String", Symbol("black")=>"Float64", Symbol("bw")=>"String", Symbol("noIrregularRules")=>"Bool", Symbol("isLlotheo")=>"Bool", Symbol("canPutEverywhere")=>"Bool", Symbol("loopedBoard")=>"Bool", Symbol("timeLimitForEachTurn")=>"Float64", Symbol("logs")=>"Vector{Vector{Float64}}", Symbol("map")=>"Vector{String}", )
OpenAPI.property_type(::Type{ ReversiGameDetailed }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ReversiGameDetailed[name]))}

function check_required(o::ReversiGameDetailed)
    o.id === nothing && (return false)
    o.createdAt === nothing && (return false)
    o.startedAt === nothing && (return false)
    o.endedAt === nothing && (return false)
    o.isStarted === nothing && (return false)
    o.isEnded === nothing && (return false)
    o.form1 === nothing && (return false)
    o.form2 === nothing && (return false)
    o.user1Ready === nothing && (return false)
    o.user2Ready === nothing && (return false)
    o.user1Id === nothing && (return false)
    o.user2Id === nothing && (return false)
    o.user1 === nothing && (return false)
    o.user2 === nothing && (return false)
    o.winnerId === nothing && (return false)
    o.winner === nothing && (return false)
    o.surrenderedUserId === nothing && (return false)
    o.timeoutUserId === nothing && (return false)
    o.black === nothing && (return false)
    o.bw === nothing && (return false)
    o.noIrregularRules === nothing && (return false)
    o.isLlotheo === nothing && (return false)
    o.canPutEverywhere === nothing && (return false)
    o.loopedBoard === nothing && (return false)
    o.timeLimitForEachTurn === nothing && (return false)
    o.logs === nothing && (return false)
    o.map === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ ReversiGameDetailed }, name::Symbol, val)
    if name === Symbol("id")
        OpenAPI.validate_param(name, "ReversiGameDetailed", :format, val, "id")
    end
    if name === Symbol("createdAt")
        OpenAPI.validate_param(name, "ReversiGameDetailed", :format, val, "date-time")
    end
    if name === Symbol("startedAt")
        OpenAPI.validate_param(name, "ReversiGameDetailed", :format, val, "date-time")
    end
    if name === Symbol("endedAt")
        OpenAPI.validate_param(name, "ReversiGameDetailed", :format, val, "date-time")
    end
    if name === Symbol("user1Id")
        OpenAPI.validate_param(name, "ReversiGameDetailed", :format, val, "id")
    end
    if name === Symbol("user2Id")
        OpenAPI.validate_param(name, "ReversiGameDetailed", :format, val, "id")
    end
    if name === Symbol("winnerId")
        OpenAPI.validate_param(name, "ReversiGameDetailed", :format, val, "id")
    end
    if name === Symbol("surrenderedUserId")
        OpenAPI.validate_param(name, "ReversiGameDetailed", :format, val, "id")
    end
    if name === Symbol("timeoutUserId")
        OpenAPI.validate_param(name, "ReversiGameDetailed", :format, val, "id")
    end
end
