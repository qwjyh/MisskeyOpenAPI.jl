# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""users___lists___get_memberships_200_response_inner

    UsersListsGetMemberships200ResponseInner(;
        id=nothing,
        createdAt=nothing,
        userId=nothing,
        user=nothing,
        withReplies=nothing,
    )

    - id::String
    - createdAt::ZonedDateTime
    - userId::String
    - user::UserLite
    - withReplies::Bool
"""
Base.@kwdef mutable struct UsersListsGetMemberships200ResponseInner <: OpenAPI.APIModel
    id::Union{Nothing, String} = nothing
    createdAt::Union{Nothing, ZonedDateTime} = nothing
    userId::Union{Nothing, String} = nothing
    user = nothing # spec type: Union{ Nothing, UserLite }
    withReplies::Union{Nothing, Bool} = nothing

    function UsersListsGetMemberships200ResponseInner(id, createdAt, userId, user, withReplies, )
        OpenAPI.validate_property(UsersListsGetMemberships200ResponseInner, Symbol("id"), id)
        OpenAPI.validate_property(UsersListsGetMemberships200ResponseInner, Symbol("createdAt"), createdAt)
        OpenAPI.validate_property(UsersListsGetMemberships200ResponseInner, Symbol("userId"), userId)
        OpenAPI.validate_property(UsersListsGetMemberships200ResponseInner, Symbol("user"), user)
        OpenAPI.validate_property(UsersListsGetMemberships200ResponseInner, Symbol("withReplies"), withReplies)
        return new(id, createdAt, userId, user, withReplies, )
    end
end # type UsersListsGetMemberships200ResponseInner

const _property_types_UsersListsGetMemberships200ResponseInner = Dict{Symbol,String}(Symbol("id")=>"String", Symbol("createdAt")=>"ZonedDateTime", Symbol("userId")=>"String", Symbol("user")=>"UserLite", Symbol("withReplies")=>"Bool", )
OpenAPI.property_type(::Type{ UsersListsGetMemberships200ResponseInner }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_UsersListsGetMemberships200ResponseInner[name]))}

function check_required(o::UsersListsGetMemberships200ResponseInner)
    o.id === nothing && (return false)
    o.createdAt === nothing && (return false)
    o.userId === nothing && (return false)
    o.user === nothing && (return false)
    o.withReplies === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ UsersListsGetMemberships200ResponseInner }, name::Symbol, val)
    if name === Symbol("id")
        OpenAPI.validate_param(name, "UsersListsGetMemberships200ResponseInner", :format, val, "misskey:id")
    end
    if name === Symbol("createdAt")
        OpenAPI.validate_param(name, "UsersListsGetMemberships200ResponseInner", :format, val, "date-time")
    end
    if name === Symbol("userId")
        OpenAPI.validate_param(name, "UsersListsGetMemberships200ResponseInner", :format, val, "misskey:id")
    end
end
