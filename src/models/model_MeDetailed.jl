# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""MeDetailed

    MeDetailed(;
        id=nothing,
        name=nothing,
        username=nothing,
        host=nothing,
        avatarUrl=nothing,
        avatarBlurhash=nothing,
        avatarDecorations=nothing,
        isBot=nothing,
        isCat=nothing,
        instance=nothing,
        emojis=nothing,
        onlineStatus=nothing,
        badgeRoles=nothing,
        url=nothing,
        uri=nothing,
        movedTo=nothing,
        alsoKnownAs=nothing,
        createdAt=nothing,
        updatedAt=nothing,
        lastFetchedAt=nothing,
        bannerUrl=nothing,
        bannerBlurhash=nothing,
        isLocked=nothing,
        isSilenced=nothing,
        isSuspended=nothing,
        description=nothing,
        location=nothing,
        birthday=nothing,
        lang=nothing,
        fields=nothing,
        verifiedLinks=nothing,
        followersCount=nothing,
        followingCount=nothing,
        notesCount=nothing,
        pinnedNoteIds=nothing,
        pinnedNotes=nothing,
        pinnedPageId=nothing,
        pinnedPage=nothing,
        publicReactions=nothing,
        followingVisibility=nothing,
        followersVisibility=nothing,
        twoFactorEnabled=false,
        usePasswordLessLogin=false,
        securityKeys=false,
        roles=nothing,
        memo=nothing,
        moderationNote=nothing,
        isFollowing=nothing,
        isFollowed=nothing,
        hasPendingFollowRequestFromYou=nothing,
        hasPendingFollowRequestToYou=nothing,
        isBlocking=nothing,
        isBlocked=nothing,
        isMuted=nothing,
        isRenoteMuted=nothing,
        notify=nothing,
        withReplies=nothing,
        avatarId=nothing,
        bannerId=nothing,
        isModerator=nothing,
        isAdmin=nothing,
        injectFeaturedNote=nothing,
        receiveAnnouncementEmail=nothing,
        alwaysMarkNsfw=nothing,
        autoSensitive=nothing,
        carefulBot=nothing,
        autoAcceptFollowed=nothing,
        noCrawle=nothing,
        preventAiLearning=nothing,
        isExplorable=nothing,
        isDeleted=nothing,
        twoFactorBackupCodesStock=nothing,
        hideOnlineStatus=nothing,
        hasUnreadSpecifiedNotes=nothing,
        hasUnreadMentions=nothing,
        hasUnreadAnnouncement=nothing,
        unreadAnnouncements=nothing,
        hasUnreadAntenna=nothing,
        hasUnreadChannel=nothing,
        hasUnreadNotification=nothing,
        hasPendingReceivedFollowRequest=nothing,
        unreadNotificationsCount=nothing,
        mutedWords=nothing,
        hardMutedWords=nothing,
        mutedInstances=nothing,
        notificationRecieveConfig=nothing,
        emailNotificationTypes=nothing,
        achievements=nothing,
        loggedInDays=nothing,
        policies=nothing,
        email=nothing,
        emailVerified=nothing,
        securityKeysList=nothing,
    )

    - id::String
    - name::String
    - username::String
    - host::String : The local host is represented with &#x60;null&#x60;.
    - avatarUrl::String
    - avatarBlurhash::String
    - avatarDecorations::Vector{UserLiteAvatarDecorationsInner}
    - isBot::Bool
    - isCat::Bool
    - instance::UserLiteInstance
    - emojis::Dict{String, String}
    - onlineStatus::String
    - badgeRoles::Vector{UserLiteBadgeRolesInner}
    - url::String
    - uri::String
    - movedTo::String
    - alsoKnownAs::Vector{String}
    - createdAt::ZonedDateTime
    - updatedAt::ZonedDateTime
    - lastFetchedAt::ZonedDateTime
    - bannerUrl::String
    - bannerBlurhash::String
    - isLocked::Bool
    - isSilenced::Bool
    - isSuspended::Bool
    - description::String
    - location::String
    - birthday::String
    - lang::String
    - fields::Vector{IUpdateRequestFieldsInner}
    - verifiedLinks::Vector{String}
    - followersCount::Float64
    - followingCount::Float64
    - notesCount::Float64
    - pinnedNoteIds::Vector{String}
    - pinnedNotes::Vector{Note}
    - pinnedPageId::String
    - pinnedPage::Page
    - publicReactions::Bool
    - followingVisibility::String
    - followersVisibility::String
    - twoFactorEnabled::Bool
    - usePasswordLessLogin::Bool
    - securityKeys::Bool
    - roles::Vector{RoleLite}
    - memo::String
    - moderationNote::String
    - isFollowing::Bool
    - isFollowed::Bool
    - hasPendingFollowRequestFromYou::Bool
    - hasPendingFollowRequestToYou::Bool
    - isBlocking::Bool
    - isBlocked::Bool
    - isMuted::Bool
    - isRenoteMuted::Bool
    - notify::String
    - withReplies::Bool
    - avatarId::String
    - bannerId::String
    - isModerator::Bool
    - isAdmin::Bool
    - injectFeaturedNote::Bool
    - receiveAnnouncementEmail::Bool
    - alwaysMarkNsfw::Bool
    - autoSensitive::Bool
    - carefulBot::Bool
    - autoAcceptFollowed::Bool
    - noCrawle::Bool
    - preventAiLearning::Bool
    - isExplorable::Bool
    - isDeleted::Bool
    - twoFactorBackupCodesStock::String
    - hideOnlineStatus::Bool
    - hasUnreadSpecifiedNotes::Bool
    - hasUnreadMentions::Bool
    - hasUnreadAnnouncement::Bool
    - unreadAnnouncements::Vector{Announcement}
    - hasUnreadAntenna::Bool
    - hasUnreadChannel::Bool
    - hasUnreadNotification::Bool
    - hasPendingReceivedFollowRequest::Bool
    - unreadNotificationsCount::Float64
    - mutedWords::Vector{Vector{String}}
    - hardMutedWords::Vector{Vector{String}}
    - mutedInstances::Vector{String}
    - notificationRecieveConfig::MeDetailedOnlyNotificationRecieveConfig
    - emailNotificationTypes::Vector{String}
    - achievements::Vector{UsersAchievements200ResponseInner}
    - loggedInDays::Float64
    - policies::RolePolicies
    - email::String
    - emailVerified::Bool
    - securityKeysList::Vector{MeDetailedOnlySecurityKeysListInner}
"""
Base.@kwdef mutable struct MeDetailed <: OpenAPI.APIModel
    id::Union{Nothing, String} = nothing
    name::Union{Nothing, String} = nothing
    username::Union{Nothing, String} = nothing
    host::Union{Nothing, String} = nothing
    avatarUrl::Union{Nothing, String} = nothing
    avatarBlurhash::Union{Nothing, String} = nothing
    avatarDecorations::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{UserLiteAvatarDecorationsInner} }
    isBot::Union{Nothing, Bool} = nothing
    isCat::Union{Nothing, Bool} = nothing
    instance = nothing # spec type: Union{ Nothing, UserLiteInstance }
    emojis::Union{Nothing, Dict{String, String}} = nothing
    onlineStatus::Union{Nothing, String} = nothing
    badgeRoles::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{UserLiteBadgeRolesInner} }
    url::Union{Nothing, String} = nothing
    uri::Union{Nothing, String} = nothing
    movedTo::Union{Nothing, String} = nothing
    alsoKnownAs::Union{Nothing, Vector{String}} = nothing
    createdAt::Union{Nothing, ZonedDateTime} = nothing
    updatedAt::Union{Nothing, ZonedDateTime} = nothing
    lastFetchedAt::Union{Nothing, ZonedDateTime} = nothing
    bannerUrl::Union{Nothing, String} = nothing
    bannerBlurhash::Union{Nothing, String} = nothing
    isLocked::Union{Nothing, Bool} = nothing
    isSilenced::Union{Nothing, Bool} = nothing
    isSuspended::Union{Nothing, Bool} = nothing
    description::Union{Nothing, String} = nothing
    location::Union{Nothing, String} = nothing
    birthday::Union{Nothing, String} = nothing
    lang::Union{Nothing, String} = nothing
    fields::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{IUpdateRequestFieldsInner} }
    verifiedLinks::Union{Nothing, Vector{String}} = nothing
    followersCount::Union{Nothing, Float64} = nothing
    followingCount::Union{Nothing, Float64} = nothing
    notesCount::Union{Nothing, Float64} = nothing
    pinnedNoteIds::Union{Nothing, Vector{String}} = nothing
    pinnedNotes::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{Note} }
    pinnedPageId::Union{Nothing, String} = nothing
    pinnedPage = nothing # spec type: Union{ Nothing, Page }
    publicReactions::Union{Nothing, Bool} = nothing
    followingVisibility::Union{Nothing, String} = nothing
    followersVisibility::Union{Nothing, String} = nothing
    twoFactorEnabled::Union{Nothing, Bool} = false
    usePasswordLessLogin::Union{Nothing, Bool} = false
    securityKeys::Union{Nothing, Bool} = false
    roles::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{RoleLite} }
    memo::Union{Nothing, String} = nothing
    moderationNote::Union{Nothing, String} = nothing
    isFollowing::Union{Nothing, Bool} = nothing
    isFollowed::Union{Nothing, Bool} = nothing
    hasPendingFollowRequestFromYou::Union{Nothing, Bool} = nothing
    hasPendingFollowRequestToYou::Union{Nothing, Bool} = nothing
    isBlocking::Union{Nothing, Bool} = nothing
    isBlocked::Union{Nothing, Bool} = nothing
    isMuted::Union{Nothing, Bool} = nothing
    isRenoteMuted::Union{Nothing, Bool} = nothing
    notify::Union{Nothing, String} = nothing
    withReplies::Union{Nothing, Bool} = nothing
    avatarId::Union{Nothing, String} = nothing
    bannerId::Union{Nothing, String} = nothing
    isModerator::Union{Nothing, Bool} = nothing
    isAdmin::Union{Nothing, Bool} = nothing
    injectFeaturedNote::Union{Nothing, Bool} = nothing
    receiveAnnouncementEmail::Union{Nothing, Bool} = nothing
    alwaysMarkNsfw::Union{Nothing, Bool} = nothing
    autoSensitive::Union{Nothing, Bool} = nothing
    carefulBot::Union{Nothing, Bool} = nothing
    autoAcceptFollowed::Union{Nothing, Bool} = nothing
    noCrawle::Union{Nothing, Bool} = nothing
    preventAiLearning::Union{Nothing, Bool} = nothing
    isExplorable::Union{Nothing, Bool} = nothing
    isDeleted::Union{Nothing, Bool} = nothing
    twoFactorBackupCodesStock::Union{Nothing, String} = nothing
    hideOnlineStatus::Union{Nothing, Bool} = nothing
    hasUnreadSpecifiedNotes::Union{Nothing, Bool} = nothing
    hasUnreadMentions::Union{Nothing, Bool} = nothing
    hasUnreadAnnouncement::Union{Nothing, Bool} = nothing
    unreadAnnouncements::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{Announcement} }
    hasUnreadAntenna::Union{Nothing, Bool} = nothing
    hasUnreadChannel::Union{Nothing, Bool} = nothing
    hasUnreadNotification::Union{Nothing, Bool} = nothing
    hasPendingReceivedFollowRequest::Union{Nothing, Bool} = nothing
    unreadNotificationsCount::Union{Nothing, Float64} = nothing
    mutedWords::Union{Nothing, Vector{Vector{String}}} = nothing
    hardMutedWords::Union{Nothing, Vector{Vector{String}}} = nothing
    mutedInstances::Union{Nothing, Vector{String}} = nothing
    notificationRecieveConfig = nothing # spec type: Union{ Nothing, MeDetailedOnlyNotificationRecieveConfig }
    emailNotificationTypes::Union{Nothing, Vector{String}} = nothing
    achievements::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{UsersAchievements200ResponseInner} }
    loggedInDays::Union{Nothing, Float64} = nothing
    policies = nothing # spec type: Union{ Nothing, RolePolicies }
    email::Union{Nothing, String} = nothing
    emailVerified::Union{Nothing, Bool} = nothing
    securityKeysList::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{MeDetailedOnlySecurityKeysListInner} }

    function MeDetailed(id, name, username, host, avatarUrl, avatarBlurhash, avatarDecorations, isBot, isCat, instance, emojis, onlineStatus, badgeRoles, url, uri, movedTo, alsoKnownAs, createdAt, updatedAt, lastFetchedAt, bannerUrl, bannerBlurhash, isLocked, isSilenced, isSuspended, description, location, birthday, lang, fields, verifiedLinks, followersCount, followingCount, notesCount, pinnedNoteIds, pinnedNotes, pinnedPageId, pinnedPage, publicReactions, followingVisibility, followersVisibility, twoFactorEnabled, usePasswordLessLogin, securityKeys, roles, memo, moderationNote, isFollowing, isFollowed, hasPendingFollowRequestFromYou, hasPendingFollowRequestToYou, isBlocking, isBlocked, isMuted, isRenoteMuted, notify, withReplies, avatarId, bannerId, isModerator, isAdmin, injectFeaturedNote, receiveAnnouncementEmail, alwaysMarkNsfw, autoSensitive, carefulBot, autoAcceptFollowed, noCrawle, preventAiLearning, isExplorable, isDeleted, twoFactorBackupCodesStock, hideOnlineStatus, hasUnreadSpecifiedNotes, hasUnreadMentions, hasUnreadAnnouncement, unreadAnnouncements, hasUnreadAntenna, hasUnreadChannel, hasUnreadNotification, hasPendingReceivedFollowRequest, unreadNotificationsCount, mutedWords, hardMutedWords, mutedInstances, notificationRecieveConfig, emailNotificationTypes, achievements, loggedInDays, policies, email, emailVerified, securityKeysList, )
        OpenAPI.validate_property(MeDetailed, Symbol("id"), id)
        OpenAPI.validate_property(MeDetailed, Symbol("name"), name)
        OpenAPI.validate_property(MeDetailed, Symbol("username"), username)
        OpenAPI.validate_property(MeDetailed, Symbol("host"), host)
        OpenAPI.validate_property(MeDetailed, Symbol("avatarUrl"), avatarUrl)
        OpenAPI.validate_property(MeDetailed, Symbol("avatarBlurhash"), avatarBlurhash)
        OpenAPI.validate_property(MeDetailed, Symbol("avatarDecorations"), avatarDecorations)
        OpenAPI.validate_property(MeDetailed, Symbol("isBot"), isBot)
        OpenAPI.validate_property(MeDetailed, Symbol("isCat"), isCat)
        OpenAPI.validate_property(MeDetailed, Symbol("instance"), instance)
        OpenAPI.validate_property(MeDetailed, Symbol("emojis"), emojis)
        OpenAPI.validate_property(MeDetailed, Symbol("onlineStatus"), onlineStatus)
        OpenAPI.validate_property(MeDetailed, Symbol("badgeRoles"), badgeRoles)
        OpenAPI.validate_property(MeDetailed, Symbol("url"), url)
        OpenAPI.validate_property(MeDetailed, Symbol("uri"), uri)
        OpenAPI.validate_property(MeDetailed, Symbol("movedTo"), movedTo)
        OpenAPI.validate_property(MeDetailed, Symbol("alsoKnownAs"), alsoKnownAs)
        OpenAPI.validate_property(MeDetailed, Symbol("createdAt"), createdAt)
        OpenAPI.validate_property(MeDetailed, Symbol("updatedAt"), updatedAt)
        OpenAPI.validate_property(MeDetailed, Symbol("lastFetchedAt"), lastFetchedAt)
        OpenAPI.validate_property(MeDetailed, Symbol("bannerUrl"), bannerUrl)
        OpenAPI.validate_property(MeDetailed, Symbol("bannerBlurhash"), bannerBlurhash)
        OpenAPI.validate_property(MeDetailed, Symbol("isLocked"), isLocked)
        OpenAPI.validate_property(MeDetailed, Symbol("isSilenced"), isSilenced)
        OpenAPI.validate_property(MeDetailed, Symbol("isSuspended"), isSuspended)
        OpenAPI.validate_property(MeDetailed, Symbol("description"), description)
        OpenAPI.validate_property(MeDetailed, Symbol("location"), location)
        OpenAPI.validate_property(MeDetailed, Symbol("birthday"), birthday)
        OpenAPI.validate_property(MeDetailed, Symbol("lang"), lang)
        OpenAPI.validate_property(MeDetailed, Symbol("fields"), fields)
        OpenAPI.validate_property(MeDetailed, Symbol("verifiedLinks"), verifiedLinks)
        OpenAPI.validate_property(MeDetailed, Symbol("followersCount"), followersCount)
        OpenAPI.validate_property(MeDetailed, Symbol("followingCount"), followingCount)
        OpenAPI.validate_property(MeDetailed, Symbol("notesCount"), notesCount)
        OpenAPI.validate_property(MeDetailed, Symbol("pinnedNoteIds"), pinnedNoteIds)
        OpenAPI.validate_property(MeDetailed, Symbol("pinnedNotes"), pinnedNotes)
        OpenAPI.validate_property(MeDetailed, Symbol("pinnedPageId"), pinnedPageId)
        OpenAPI.validate_property(MeDetailed, Symbol("pinnedPage"), pinnedPage)
        OpenAPI.validate_property(MeDetailed, Symbol("publicReactions"), publicReactions)
        OpenAPI.validate_property(MeDetailed, Symbol("followingVisibility"), followingVisibility)
        OpenAPI.validate_property(MeDetailed, Symbol("followersVisibility"), followersVisibility)
        OpenAPI.validate_property(MeDetailed, Symbol("twoFactorEnabled"), twoFactorEnabled)
        OpenAPI.validate_property(MeDetailed, Symbol("usePasswordLessLogin"), usePasswordLessLogin)
        OpenAPI.validate_property(MeDetailed, Symbol("securityKeys"), securityKeys)
        OpenAPI.validate_property(MeDetailed, Symbol("roles"), roles)
        OpenAPI.validate_property(MeDetailed, Symbol("memo"), memo)
        OpenAPI.validate_property(MeDetailed, Symbol("moderationNote"), moderationNote)
        OpenAPI.validate_property(MeDetailed, Symbol("isFollowing"), isFollowing)
        OpenAPI.validate_property(MeDetailed, Symbol("isFollowed"), isFollowed)
        OpenAPI.validate_property(MeDetailed, Symbol("hasPendingFollowRequestFromYou"), hasPendingFollowRequestFromYou)
        OpenAPI.validate_property(MeDetailed, Symbol("hasPendingFollowRequestToYou"), hasPendingFollowRequestToYou)
        OpenAPI.validate_property(MeDetailed, Symbol("isBlocking"), isBlocking)
        OpenAPI.validate_property(MeDetailed, Symbol("isBlocked"), isBlocked)
        OpenAPI.validate_property(MeDetailed, Symbol("isMuted"), isMuted)
        OpenAPI.validate_property(MeDetailed, Symbol("isRenoteMuted"), isRenoteMuted)
        OpenAPI.validate_property(MeDetailed, Symbol("notify"), notify)
        OpenAPI.validate_property(MeDetailed, Symbol("withReplies"), withReplies)
        OpenAPI.validate_property(MeDetailed, Symbol("avatarId"), avatarId)
        OpenAPI.validate_property(MeDetailed, Symbol("bannerId"), bannerId)
        OpenAPI.validate_property(MeDetailed, Symbol("isModerator"), isModerator)
        OpenAPI.validate_property(MeDetailed, Symbol("isAdmin"), isAdmin)
        OpenAPI.validate_property(MeDetailed, Symbol("injectFeaturedNote"), injectFeaturedNote)
        OpenAPI.validate_property(MeDetailed, Symbol("receiveAnnouncementEmail"), receiveAnnouncementEmail)
        OpenAPI.validate_property(MeDetailed, Symbol("alwaysMarkNsfw"), alwaysMarkNsfw)
        OpenAPI.validate_property(MeDetailed, Symbol("autoSensitive"), autoSensitive)
        OpenAPI.validate_property(MeDetailed, Symbol("carefulBot"), carefulBot)
        OpenAPI.validate_property(MeDetailed, Symbol("autoAcceptFollowed"), autoAcceptFollowed)
        OpenAPI.validate_property(MeDetailed, Symbol("noCrawle"), noCrawle)
        OpenAPI.validate_property(MeDetailed, Symbol("preventAiLearning"), preventAiLearning)
        OpenAPI.validate_property(MeDetailed, Symbol("isExplorable"), isExplorable)
        OpenAPI.validate_property(MeDetailed, Symbol("isDeleted"), isDeleted)
        OpenAPI.validate_property(MeDetailed, Symbol("twoFactorBackupCodesStock"), twoFactorBackupCodesStock)
        OpenAPI.validate_property(MeDetailed, Symbol("hideOnlineStatus"), hideOnlineStatus)
        OpenAPI.validate_property(MeDetailed, Symbol("hasUnreadSpecifiedNotes"), hasUnreadSpecifiedNotes)
        OpenAPI.validate_property(MeDetailed, Symbol("hasUnreadMentions"), hasUnreadMentions)
        OpenAPI.validate_property(MeDetailed, Symbol("hasUnreadAnnouncement"), hasUnreadAnnouncement)
        OpenAPI.validate_property(MeDetailed, Symbol("unreadAnnouncements"), unreadAnnouncements)
        OpenAPI.validate_property(MeDetailed, Symbol("hasUnreadAntenna"), hasUnreadAntenna)
        OpenAPI.validate_property(MeDetailed, Symbol("hasUnreadChannel"), hasUnreadChannel)
        OpenAPI.validate_property(MeDetailed, Symbol("hasUnreadNotification"), hasUnreadNotification)
        OpenAPI.validate_property(MeDetailed, Symbol("hasPendingReceivedFollowRequest"), hasPendingReceivedFollowRequest)
        OpenAPI.validate_property(MeDetailed, Symbol("unreadNotificationsCount"), unreadNotificationsCount)
        OpenAPI.validate_property(MeDetailed, Symbol("mutedWords"), mutedWords)
        OpenAPI.validate_property(MeDetailed, Symbol("hardMutedWords"), hardMutedWords)
        OpenAPI.validate_property(MeDetailed, Symbol("mutedInstances"), mutedInstances)
        OpenAPI.validate_property(MeDetailed, Symbol("notificationRecieveConfig"), notificationRecieveConfig)
        OpenAPI.validate_property(MeDetailed, Symbol("emailNotificationTypes"), emailNotificationTypes)
        OpenAPI.validate_property(MeDetailed, Symbol("achievements"), achievements)
        OpenAPI.validate_property(MeDetailed, Symbol("loggedInDays"), loggedInDays)
        OpenAPI.validate_property(MeDetailed, Symbol("policies"), policies)
        OpenAPI.validate_property(MeDetailed, Symbol("email"), email)
        OpenAPI.validate_property(MeDetailed, Symbol("emailVerified"), emailVerified)
        OpenAPI.validate_property(MeDetailed, Symbol("securityKeysList"), securityKeysList)
        return new(id, name, username, host, avatarUrl, avatarBlurhash, avatarDecorations, isBot, isCat, instance, emojis, onlineStatus, badgeRoles, url, uri, movedTo, alsoKnownAs, createdAt, updatedAt, lastFetchedAt, bannerUrl, bannerBlurhash, isLocked, isSilenced, isSuspended, description, location, birthday, lang, fields, verifiedLinks, followersCount, followingCount, notesCount, pinnedNoteIds, pinnedNotes, pinnedPageId, pinnedPage, publicReactions, followingVisibility, followersVisibility, twoFactorEnabled, usePasswordLessLogin, securityKeys, roles, memo, moderationNote, isFollowing, isFollowed, hasPendingFollowRequestFromYou, hasPendingFollowRequestToYou, isBlocking, isBlocked, isMuted, isRenoteMuted, notify, withReplies, avatarId, bannerId, isModerator, isAdmin, injectFeaturedNote, receiveAnnouncementEmail, alwaysMarkNsfw, autoSensitive, carefulBot, autoAcceptFollowed, noCrawle, preventAiLearning, isExplorable, isDeleted, twoFactorBackupCodesStock, hideOnlineStatus, hasUnreadSpecifiedNotes, hasUnreadMentions, hasUnreadAnnouncement, unreadAnnouncements, hasUnreadAntenna, hasUnreadChannel, hasUnreadNotification, hasPendingReceivedFollowRequest, unreadNotificationsCount, mutedWords, hardMutedWords, mutedInstances, notificationRecieveConfig, emailNotificationTypes, achievements, loggedInDays, policies, email, emailVerified, securityKeysList, )
    end
end # type MeDetailed

const _property_types_MeDetailed = Dict{Symbol,String}(Symbol("id")=>"String", Symbol("name")=>"String", Symbol("username")=>"String", Symbol("host")=>"String", Symbol("avatarUrl")=>"String", Symbol("avatarBlurhash")=>"String", Symbol("avatarDecorations")=>"Vector{UserLiteAvatarDecorationsInner}", Symbol("isBot")=>"Bool", Symbol("isCat")=>"Bool", Symbol("instance")=>"UserLiteInstance", Symbol("emojis")=>"Dict{String, String}", Symbol("onlineStatus")=>"String", Symbol("badgeRoles")=>"Vector{UserLiteBadgeRolesInner}", Symbol("url")=>"String", Symbol("uri")=>"String", Symbol("movedTo")=>"String", Symbol("alsoKnownAs")=>"Vector{String}", Symbol("createdAt")=>"ZonedDateTime", Symbol("updatedAt")=>"ZonedDateTime", Symbol("lastFetchedAt")=>"ZonedDateTime", Symbol("bannerUrl")=>"String", Symbol("bannerBlurhash")=>"String", Symbol("isLocked")=>"Bool", Symbol("isSilenced")=>"Bool", Symbol("isSuspended")=>"Bool", Symbol("description")=>"String", Symbol("location")=>"String", Symbol("birthday")=>"String", Symbol("lang")=>"String", Symbol("fields")=>"Vector{IUpdateRequestFieldsInner}", Symbol("verifiedLinks")=>"Vector{String}", Symbol("followersCount")=>"Float64", Symbol("followingCount")=>"Float64", Symbol("notesCount")=>"Float64", Symbol("pinnedNoteIds")=>"Vector{String}", Symbol("pinnedNotes")=>"Vector{Note}", Symbol("pinnedPageId")=>"String", Symbol("pinnedPage")=>"Page", Symbol("publicReactions")=>"Bool", Symbol("followingVisibility")=>"String", Symbol("followersVisibility")=>"String", Symbol("twoFactorEnabled")=>"Bool", Symbol("usePasswordLessLogin")=>"Bool", Symbol("securityKeys")=>"Bool", Symbol("roles")=>"Vector{RoleLite}", Symbol("memo")=>"String", Symbol("moderationNote")=>"String", Symbol("isFollowing")=>"Bool", Symbol("isFollowed")=>"Bool", Symbol("hasPendingFollowRequestFromYou")=>"Bool", Symbol("hasPendingFollowRequestToYou")=>"Bool", Symbol("isBlocking")=>"Bool", Symbol("isBlocked")=>"Bool", Symbol("isMuted")=>"Bool", Symbol("isRenoteMuted")=>"Bool", Symbol("notify")=>"String", Symbol("withReplies")=>"Bool", Symbol("avatarId")=>"String", Symbol("bannerId")=>"String", Symbol("isModerator")=>"Bool", Symbol("isAdmin")=>"Bool", Symbol("injectFeaturedNote")=>"Bool", Symbol("receiveAnnouncementEmail")=>"Bool", Symbol("alwaysMarkNsfw")=>"Bool", Symbol("autoSensitive")=>"Bool", Symbol("carefulBot")=>"Bool", Symbol("autoAcceptFollowed")=>"Bool", Symbol("noCrawle")=>"Bool", Symbol("preventAiLearning")=>"Bool", Symbol("isExplorable")=>"Bool", Symbol("isDeleted")=>"Bool", Symbol("twoFactorBackupCodesStock")=>"String", Symbol("hideOnlineStatus")=>"Bool", Symbol("hasUnreadSpecifiedNotes")=>"Bool", Symbol("hasUnreadMentions")=>"Bool", Symbol("hasUnreadAnnouncement")=>"Bool", Symbol("unreadAnnouncements")=>"Vector{Announcement}", Symbol("hasUnreadAntenna")=>"Bool", Symbol("hasUnreadChannel")=>"Bool", Symbol("hasUnreadNotification")=>"Bool", Symbol("hasPendingReceivedFollowRequest")=>"Bool", Symbol("unreadNotificationsCount")=>"Float64", Symbol("mutedWords")=>"Vector{Vector{String}}", Symbol("hardMutedWords")=>"Vector{Vector{String}}", Symbol("mutedInstances")=>"Vector{String}", Symbol("notificationRecieveConfig")=>"MeDetailedOnlyNotificationRecieveConfig", Symbol("emailNotificationTypes")=>"Vector{String}", Symbol("achievements")=>"Vector{UsersAchievements200ResponseInner}", Symbol("loggedInDays")=>"Float64", Symbol("policies")=>"RolePolicies", Symbol("email")=>"String", Symbol("emailVerified")=>"Bool", Symbol("securityKeysList")=>"Vector{MeDetailedOnlySecurityKeysListInner}", )
OpenAPI.property_type(::Type{ MeDetailed }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_MeDetailed[name]))}

function check_required(o::MeDetailed)
    o.id === nothing && (return false)
    o.name === nothing && (return false)
    o.username === nothing && (return false)
    o.host === nothing && (return false)
    o.avatarUrl === nothing && (return false)
    o.avatarBlurhash === nothing && (return false)
    o.avatarDecorations === nothing && (return false)
    o.isBot === nothing && (return false)
    o.isCat === nothing && (return false)
    o.instance === nothing && (return false)
    o.emojis === nothing && (return false)
    o.onlineStatus === nothing && (return false)
    o.badgeRoles === nothing && (return false)
    o.url === nothing && (return false)
    o.uri === nothing && (return false)
    o.movedTo === nothing && (return false)
    o.alsoKnownAs === nothing && (return false)
    o.createdAt === nothing && (return false)
    o.updatedAt === nothing && (return false)
    o.lastFetchedAt === nothing && (return false)
    o.bannerUrl === nothing && (return false)
    o.bannerBlurhash === nothing && (return false)
    o.isLocked === nothing && (return false)
    o.isSilenced === nothing && (return false)
    o.isSuspended === nothing && (return false)
    o.description === nothing && (return false)
    o.location === nothing && (return false)
    o.birthday === nothing && (return false)
    o.lang === nothing && (return false)
    o.fields === nothing && (return false)
    o.verifiedLinks === nothing && (return false)
    o.followersCount === nothing && (return false)
    o.followingCount === nothing && (return false)
    o.notesCount === nothing && (return false)
    o.pinnedNoteIds === nothing && (return false)
    o.pinnedNotes === nothing && (return false)
    o.pinnedPageId === nothing && (return false)
    o.pinnedPage === nothing && (return false)
    o.publicReactions === nothing && (return false)
    o.followingVisibility === nothing && (return false)
    o.followersVisibility === nothing && (return false)
    o.twoFactorEnabled === nothing && (return false)
    o.usePasswordLessLogin === nothing && (return false)
    o.securityKeys === nothing && (return false)
    o.roles === nothing && (return false)
    o.memo === nothing && (return false)
    o.moderationNote === nothing && (return false)
    o.isFollowing === nothing && (return false)
    o.isFollowed === nothing && (return false)
    o.hasPendingFollowRequestFromYou === nothing && (return false)
    o.hasPendingFollowRequestToYou === nothing && (return false)
    o.isBlocking === nothing && (return false)
    o.isBlocked === nothing && (return false)
    o.isMuted === nothing && (return false)
    o.isRenoteMuted === nothing && (return false)
    o.notify === nothing && (return false)
    o.withReplies === nothing && (return false)
    o.avatarId === nothing && (return false)
    o.bannerId === nothing && (return false)
    o.isModerator === nothing && (return false)
    o.isAdmin === nothing && (return false)
    o.injectFeaturedNote === nothing && (return false)
    o.receiveAnnouncementEmail === nothing && (return false)
    o.alwaysMarkNsfw === nothing && (return false)
    o.autoSensitive === nothing && (return false)
    o.carefulBot === nothing && (return false)
    o.autoAcceptFollowed === nothing && (return false)
    o.noCrawle === nothing && (return false)
    o.preventAiLearning === nothing && (return false)
    o.isExplorable === nothing && (return false)
    o.isDeleted === nothing && (return false)
    o.twoFactorBackupCodesStock === nothing && (return false)
    o.hideOnlineStatus === nothing && (return false)
    o.hasUnreadSpecifiedNotes === nothing && (return false)
    o.hasUnreadMentions === nothing && (return false)
    o.hasUnreadAnnouncement === nothing && (return false)
    o.unreadAnnouncements === nothing && (return false)
    o.hasUnreadAntenna === nothing && (return false)
    o.hasUnreadChannel === nothing && (return false)
    o.hasUnreadNotification === nothing && (return false)
    o.hasPendingReceivedFollowRequest === nothing && (return false)
    o.unreadNotificationsCount === nothing && (return false)
    o.mutedWords === nothing && (return false)
    o.hardMutedWords === nothing && (return false)
    o.mutedInstances === nothing && (return false)
    o.notificationRecieveConfig === nothing && (return false)
    o.emailNotificationTypes === nothing && (return false)
    o.achievements === nothing && (return false)
    o.loggedInDays === nothing && (return false)
    o.policies === nothing && (return false)
    o.email === nothing && (return false)
    o.emailVerified === nothing && (return false)
    o.securityKeysList === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ MeDetailed }, name::Symbol, val)
    if name === Symbol("id")
        OpenAPI.validate_param(name, "MeDetailed", :format, val, "id")
    end
    if name === Symbol("avatarUrl")
        OpenAPI.validate_param(name, "MeDetailed", :format, val, "url")
    end
    if name === Symbol("onlineStatus")
        OpenAPI.validate_param(name, "MeDetailed", :enum, val, ["unknown", "online", "active", "offline"])
    end
    if name === Symbol("url")
        OpenAPI.validate_param(name, "MeDetailed", :format, val, "url")
    end
    if name === Symbol("uri")
        OpenAPI.validate_param(name, "MeDetailed", :format, val, "uri")
    end
    if name === Symbol("movedTo")
        OpenAPI.validate_param(name, "MeDetailed", :format, val, "uri")
    end
    if name === Symbol("createdAt")
        OpenAPI.validate_param(name, "MeDetailed", :format, val, "date-time")
    end
    if name === Symbol("updatedAt")
        OpenAPI.validate_param(name, "MeDetailed", :format, val, "date-time")
    end
    if name === Symbol("lastFetchedAt")
        OpenAPI.validate_param(name, "MeDetailed", :format, val, "date-time")
    end
    if name === Symbol("bannerUrl")
        OpenAPI.validate_param(name, "MeDetailed", :format, val, "url")
    end
    if name === Symbol("fields")
        OpenAPI.validate_param(name, "MeDetailed", :maxItems, val, 16)
    end
    if name === Symbol("followingVisibility")
        OpenAPI.validate_param(name, "MeDetailed", :enum, val, ["public", "followers", "private"])
    end
    if name === Symbol("followersVisibility")
        OpenAPI.validate_param(name, "MeDetailed", :enum, val, ["public", "followers", "private"])
    end
    if name === Symbol("notify")
        OpenAPI.validate_param(name, "MeDetailed", :enum, val, ["normal", "none"])
    end
    if name === Symbol("avatarId")
        OpenAPI.validate_param(name, "MeDetailed", :format, val, "id")
    end
    if name === Symbol("bannerId")
        OpenAPI.validate_param(name, "MeDetailed", :format, val, "id")
    end
    if name === Symbol("twoFactorBackupCodesStock")
        OpenAPI.validate_param(name, "MeDetailed", :enum, val, ["full", "partial", "none"])
    end
end
