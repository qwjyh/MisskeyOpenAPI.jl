# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""admin___get_user_ips_200_response_inner

    AdminGetUserIps200ResponseInner(;
        ip=nothing,
        createdAt=nothing,
    )

    - ip::String
    - createdAt::ZonedDateTime
"""
Base.@kwdef mutable struct AdminGetUserIps200ResponseInner <: OpenAPI.APIModel
    ip::Union{Nothing, String} = nothing
    createdAt::Union{Nothing, ZonedDateTime} = nothing

    function AdminGetUserIps200ResponseInner(ip, createdAt, )
        OpenAPI.validate_property(AdminGetUserIps200ResponseInner, Symbol("ip"), ip)
        OpenAPI.validate_property(AdminGetUserIps200ResponseInner, Symbol("createdAt"), createdAt)
        return new(ip, createdAt, )
    end
end # type AdminGetUserIps200ResponseInner

const _property_types_AdminGetUserIps200ResponseInner = Dict{Symbol,String}(Symbol("ip")=>"String", Symbol("createdAt")=>"ZonedDateTime", )
OpenAPI.property_type(::Type{ AdminGetUserIps200ResponseInner }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_AdminGetUserIps200ResponseInner[name]))}

function check_required(o::AdminGetUserIps200ResponseInner)
    o.ip === nothing && (return false)
    o.createdAt === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ AdminGetUserIps200ResponseInner }, name::Symbol, val)
    if name === Symbol("createdAt")
        OpenAPI.validate_param(name, "AdminGetUserIps200ResponseInner", :format, val, "date-time")
    end
end
