# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""i___registry___get_detail_request

    IRegistryGetDetailRequest(;
        key=nothing,
        scope=nothing,
        domain=nothing,
    )

    - key::String
    - scope::Vector{String}
    - domain::String
"""
Base.@kwdef mutable struct IRegistryGetDetailRequest <: OpenAPI.APIModel
    key::Union{Nothing, String} = nothing
    scope::Union{Nothing, Vector{String}} = nothing
    domain::Union{Nothing, String} = nothing

    function IRegistryGetDetailRequest(key, scope, domain, )
        OpenAPI.validate_property(IRegistryGetDetailRequest, Symbol("key"), key)
        OpenAPI.validate_property(IRegistryGetDetailRequest, Symbol("scope"), scope)
        OpenAPI.validate_property(IRegistryGetDetailRequest, Symbol("domain"), domain)
        return new(key, scope, domain, )
    end
end # type IRegistryGetDetailRequest

const _property_types_IRegistryGetDetailRequest = Dict{Symbol,String}(Symbol("key")=>"String", Symbol("scope")=>"Vector{String}", Symbol("domain")=>"String", )
OpenAPI.property_type(::Type{ IRegistryGetDetailRequest }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IRegistryGetDetailRequest[name]))}

function check_required(o::IRegistryGetDetailRequest)
    o.key === nothing && (return false)
    o.scope === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ IRegistryGetDetailRequest }, name::Symbol, val)
end
