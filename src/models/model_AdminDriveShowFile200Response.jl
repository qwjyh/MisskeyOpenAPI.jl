# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""admin___drive___show_file_200_response

    AdminDriveShowFile200Response(;
        id=nothing,
        createdAt=nothing,
        userId=nothing,
        userHost=nothing,
        md5=nothing,
        name=nothing,
        type=nothing,
        size=nothing,
        comment=nothing,
        blurhash=nothing,
        properties=nothing,
        storedInternal=nothing,
        url=nothing,
        thumbnailUrl=nothing,
        webpublicUrl=nothing,
        accessKey=nothing,
        thumbnailAccessKey=nothing,
        webpublicAccessKey=nothing,
        uri=nothing,
        src=nothing,
        folderId=nothing,
        isSensitive=nothing,
        isLink=nothing,
    )

    - id::String
    - createdAt::ZonedDateTime
    - userId::String
    - userHost::String : The local host is represented with &#x60;null&#x60;.
    - md5::String
    - name::String
    - type::String
    - size::Float64
    - comment::String
    - blurhash::String
    - properties::AdminDriveShowFile200ResponseProperties
    - storedInternal::Bool
    - url::String
    - thumbnailUrl::String
    - webpublicUrl::String
    - accessKey::String
    - thumbnailAccessKey::String
    - webpublicAccessKey::String
    - uri::String
    - src::String
    - folderId::String
    - isSensitive::Bool
    - isLink::Bool
"""
Base.@kwdef mutable struct AdminDriveShowFile200Response <: OpenAPI.APIModel
    id::Union{Nothing, String} = nothing
    createdAt::Union{Nothing, ZonedDateTime} = nothing
    userId::Union{Nothing, String} = nothing
    userHost::Union{Nothing, String} = nothing
    md5::Union{Nothing, String} = nothing
    name::Union{Nothing, String} = nothing
    type::Union{Nothing, String} = nothing
    size::Union{Nothing, Float64} = nothing
    comment::Union{Nothing, String} = nothing
    blurhash::Union{Nothing, String} = nothing
    properties = nothing # spec type: Union{ Nothing, AdminDriveShowFile200ResponseProperties }
    storedInternal::Union{Nothing, Bool} = nothing
    url::Union{Nothing, String} = nothing
    thumbnailUrl::Union{Nothing, String} = nothing
    webpublicUrl::Union{Nothing, String} = nothing
    accessKey::Union{Nothing, String} = nothing
    thumbnailAccessKey::Union{Nothing, String} = nothing
    webpublicAccessKey::Union{Nothing, String} = nothing
    uri::Union{Nothing, String} = nothing
    src::Union{Nothing, String} = nothing
    folderId::Union{Nothing, String} = nothing
    isSensitive::Union{Nothing, Bool} = nothing
    isLink::Union{Nothing, Bool} = nothing

    function AdminDriveShowFile200Response(id, createdAt, userId, userHost, md5, name, type, size, comment, blurhash, properties, storedInternal, url, thumbnailUrl, webpublicUrl, accessKey, thumbnailAccessKey, webpublicAccessKey, uri, src, folderId, isSensitive, isLink, )
        OpenAPI.validate_property(AdminDriveShowFile200Response, Symbol("id"), id)
        OpenAPI.validate_property(AdminDriveShowFile200Response, Symbol("createdAt"), createdAt)
        OpenAPI.validate_property(AdminDriveShowFile200Response, Symbol("userId"), userId)
        OpenAPI.validate_property(AdminDriveShowFile200Response, Symbol("userHost"), userHost)
        OpenAPI.validate_property(AdminDriveShowFile200Response, Symbol("md5"), md5)
        OpenAPI.validate_property(AdminDriveShowFile200Response, Symbol("name"), name)
        OpenAPI.validate_property(AdminDriveShowFile200Response, Symbol("type"), type)
        OpenAPI.validate_property(AdminDriveShowFile200Response, Symbol("size"), size)
        OpenAPI.validate_property(AdminDriveShowFile200Response, Symbol("comment"), comment)
        OpenAPI.validate_property(AdminDriveShowFile200Response, Symbol("blurhash"), blurhash)
        OpenAPI.validate_property(AdminDriveShowFile200Response, Symbol("properties"), properties)
        OpenAPI.validate_property(AdminDriveShowFile200Response, Symbol("storedInternal"), storedInternal)
        OpenAPI.validate_property(AdminDriveShowFile200Response, Symbol("url"), url)
        OpenAPI.validate_property(AdminDriveShowFile200Response, Symbol("thumbnailUrl"), thumbnailUrl)
        OpenAPI.validate_property(AdminDriveShowFile200Response, Symbol("webpublicUrl"), webpublicUrl)
        OpenAPI.validate_property(AdminDriveShowFile200Response, Symbol("accessKey"), accessKey)
        OpenAPI.validate_property(AdminDriveShowFile200Response, Symbol("thumbnailAccessKey"), thumbnailAccessKey)
        OpenAPI.validate_property(AdminDriveShowFile200Response, Symbol("webpublicAccessKey"), webpublicAccessKey)
        OpenAPI.validate_property(AdminDriveShowFile200Response, Symbol("uri"), uri)
        OpenAPI.validate_property(AdminDriveShowFile200Response, Symbol("src"), src)
        OpenAPI.validate_property(AdminDriveShowFile200Response, Symbol("folderId"), folderId)
        OpenAPI.validate_property(AdminDriveShowFile200Response, Symbol("isSensitive"), isSensitive)
        OpenAPI.validate_property(AdminDriveShowFile200Response, Symbol("isLink"), isLink)
        return new(id, createdAt, userId, userHost, md5, name, type, size, comment, blurhash, properties, storedInternal, url, thumbnailUrl, webpublicUrl, accessKey, thumbnailAccessKey, webpublicAccessKey, uri, src, folderId, isSensitive, isLink, )
    end
end # type AdminDriveShowFile200Response

const _property_types_AdminDriveShowFile200Response = Dict{Symbol,String}(Symbol("id")=>"String", Symbol("createdAt")=>"ZonedDateTime", Symbol("userId")=>"String", Symbol("userHost")=>"String", Symbol("md5")=>"String", Symbol("name")=>"String", Symbol("type")=>"String", Symbol("size")=>"Float64", Symbol("comment")=>"String", Symbol("blurhash")=>"String", Symbol("properties")=>"AdminDriveShowFile200ResponseProperties", Symbol("storedInternal")=>"Bool", Symbol("url")=>"String", Symbol("thumbnailUrl")=>"String", Symbol("webpublicUrl")=>"String", Symbol("accessKey")=>"String", Symbol("thumbnailAccessKey")=>"String", Symbol("webpublicAccessKey")=>"String", Symbol("uri")=>"String", Symbol("src")=>"String", Symbol("folderId")=>"String", Symbol("isSensitive")=>"Bool", Symbol("isLink")=>"Bool", )
OpenAPI.property_type(::Type{ AdminDriveShowFile200Response }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_AdminDriveShowFile200Response[name]))}

function check_required(o::AdminDriveShowFile200Response)
    o.id === nothing && (return false)
    o.createdAt === nothing && (return false)
    o.userId === nothing && (return false)
    o.userHost === nothing && (return false)
    o.md5 === nothing && (return false)
    o.name === nothing && (return false)
    o.type === nothing && (return false)
    o.size === nothing && (return false)
    o.comment === nothing && (return false)
    o.blurhash === nothing && (return false)
    o.properties === nothing && (return false)
    o.storedInternal === nothing && (return false)
    o.url === nothing && (return false)
    o.thumbnailUrl === nothing && (return false)
    o.webpublicUrl === nothing && (return false)
    o.accessKey === nothing && (return false)
    o.thumbnailAccessKey === nothing && (return false)
    o.webpublicAccessKey === nothing && (return false)
    o.uri === nothing && (return false)
    o.src === nothing && (return false)
    o.folderId === nothing && (return false)
    o.isSensitive === nothing && (return false)
    o.isLink === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ AdminDriveShowFile200Response }, name::Symbol, val)
    if name === Symbol("id")
        OpenAPI.validate_param(name, "AdminDriveShowFile200Response", :format, val, "id")
    end
    if name === Symbol("createdAt")
        OpenAPI.validate_param(name, "AdminDriveShowFile200Response", :format, val, "date-time")
    end
    if name === Symbol("userId")
        OpenAPI.validate_param(name, "AdminDriveShowFile200Response", :format, val, "id")
    end
    if name === Symbol("md5")
        OpenAPI.validate_param(name, "AdminDriveShowFile200Response", :format, val, "md5")
    end
    if name === Symbol("url")
        OpenAPI.validate_param(name, "AdminDriveShowFile200Response", :format, val, "url")
    end
    if name === Symbol("thumbnailUrl")
        OpenAPI.validate_param(name, "AdminDriveShowFile200Response", :format, val, "url")
    end
    if name === Symbol("webpublicUrl")
        OpenAPI.validate_param(name, "AdminDriveShowFile200Response", :format, val, "url")
    end
    if name === Symbol("folderId")
        OpenAPI.validate_param(name, "AdminDriveShowFile200Response", :format, val, "id")
    end
end
