# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""drive___files___update_request

    DriveFilesUpdateRequest(;
        fileId=nothing,
        folderId=nothing,
        name=nothing,
        isSensitive=nothing,
        comment=nothing,
    )

    - fileId::String
    - folderId::String
    - name::String
    - isSensitive::Bool
    - comment::String
"""
Base.@kwdef mutable struct DriveFilesUpdateRequest <: OpenAPI.APIModel
    fileId::Union{Nothing, String} = nothing
    folderId::Union{Nothing, String} = nothing
    name::Union{Nothing, String} = nothing
    isSensitive::Union{Nothing, Bool} = nothing
    comment::Union{Nothing, String} = nothing

    function DriveFilesUpdateRequest(fileId, folderId, name, isSensitive, comment, )
        OpenAPI.validate_property(DriveFilesUpdateRequest, Symbol("fileId"), fileId)
        OpenAPI.validate_property(DriveFilesUpdateRequest, Symbol("folderId"), folderId)
        OpenAPI.validate_property(DriveFilesUpdateRequest, Symbol("name"), name)
        OpenAPI.validate_property(DriveFilesUpdateRequest, Symbol("isSensitive"), isSensitive)
        OpenAPI.validate_property(DriveFilesUpdateRequest, Symbol("comment"), comment)
        return new(fileId, folderId, name, isSensitive, comment, )
    end
end # type DriveFilesUpdateRequest

const _property_types_DriveFilesUpdateRequest = Dict{Symbol,String}(Symbol("fileId")=>"String", Symbol("folderId")=>"String", Symbol("name")=>"String", Symbol("isSensitive")=>"Bool", Symbol("comment")=>"String", )
OpenAPI.property_type(::Type{ DriveFilesUpdateRequest }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_DriveFilesUpdateRequest[name]))}

function check_required(o::DriveFilesUpdateRequest)
    o.fileId === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ DriveFilesUpdateRequest }, name::Symbol, val)
    if name === Symbol("fileId")
        OpenAPI.validate_param(name, "DriveFilesUpdateRequest", :format, val, "misskey:id")
    end
    if name === Symbol("folderId")
        OpenAPI.validate_param(name, "DriveFilesUpdateRequest", :format, val, "misskey:id")
    end
    if name === Symbol("comment")
        OpenAPI.validate_param(name, "DriveFilesUpdateRequest", :maxLength, val, 512)
    end
end
