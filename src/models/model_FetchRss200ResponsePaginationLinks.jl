# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""fetch_rss_200_response_paginationLinks

    FetchRss200ResponsePaginationLinks(;
        self=nothing,
        first=nothing,
        next=nothing,
        last=nothing,
        prev=nothing,
    )

    - self::String
    - first::String
    - next::String
    - last::String
    - prev::String
"""
Base.@kwdef mutable struct FetchRss200ResponsePaginationLinks <: OpenAPI.APIModel
    self::Union{Nothing, String} = nothing
    first::Union{Nothing, String} = nothing
    next::Union{Nothing, String} = nothing
    last::Union{Nothing, String} = nothing
    prev::Union{Nothing, String} = nothing

    function FetchRss200ResponsePaginationLinks(self, first, next, last, prev, )
        OpenAPI.validate_property(FetchRss200ResponsePaginationLinks, Symbol("self"), self)
        OpenAPI.validate_property(FetchRss200ResponsePaginationLinks, Symbol("first"), first)
        OpenAPI.validate_property(FetchRss200ResponsePaginationLinks, Symbol("next"), next)
        OpenAPI.validate_property(FetchRss200ResponsePaginationLinks, Symbol("last"), last)
        OpenAPI.validate_property(FetchRss200ResponsePaginationLinks, Symbol("prev"), prev)
        return new(self, first, next, last, prev, )
    end
end # type FetchRss200ResponsePaginationLinks

const _property_types_FetchRss200ResponsePaginationLinks = Dict{Symbol,String}(Symbol("self")=>"String", Symbol("first")=>"String", Symbol("next")=>"String", Symbol("last")=>"String", Symbol("prev")=>"String", )
OpenAPI.property_type(::Type{ FetchRss200ResponsePaginationLinks }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_FetchRss200ResponsePaginationLinks[name]))}

function check_required(o::FetchRss200ResponsePaginationLinks)
    true
end

function OpenAPI.validate_property(::Type{ FetchRss200ResponsePaginationLinks }, name::Symbol, val)
end
