# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""ap___show_200_response_oneOf_1

    ApShow200ResponseOneOf1(;
        type=nothing,
        object=nothing,
    )

    - type::String
    - object::Note
"""
Base.@kwdef mutable struct ApShow200ResponseOneOf1 <: OpenAPI.APIModel
    type::Union{Nothing, String} = nothing
    object = nothing # spec type: Union{ Nothing, Note }

    function ApShow200ResponseOneOf1(type, object, )
        OpenAPI.validate_property(ApShow200ResponseOneOf1, Symbol("type"), type)
        OpenAPI.validate_property(ApShow200ResponseOneOf1, Symbol("object"), object)
        return new(type, object, )
    end
end # type ApShow200ResponseOneOf1

const _property_types_ApShow200ResponseOneOf1 = Dict{Symbol,String}(Symbol("type")=>"String", Symbol("object")=>"Note", )
OpenAPI.property_type(::Type{ ApShow200ResponseOneOf1 }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ApShow200ResponseOneOf1[name]))}

function check_required(o::ApShow200ResponseOneOf1)
    o.type === nothing && (return false)
    o.object === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ ApShow200ResponseOneOf1 }, name::Symbol, val)
    if name === Symbol("type")
        OpenAPI.validate_param(name, "ApShow200ResponseOneOf1", :enum, val, ["Note"])
    end
end
