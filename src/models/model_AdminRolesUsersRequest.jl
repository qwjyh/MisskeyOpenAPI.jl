# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""admin___roles___users_request

    AdminRolesUsersRequest(;
        roleId=nothing,
        sinceId=nothing,
        untilId=nothing,
        limit=10,
    )

    - roleId::String
    - sinceId::String
    - untilId::String
    - limit::Int64
"""
Base.@kwdef mutable struct AdminRolesUsersRequest <: OpenAPI.APIModel
    roleId::Union{Nothing, String} = nothing
    sinceId::Union{Nothing, String} = nothing
    untilId::Union{Nothing, String} = nothing
    limit::Union{Nothing, Int64} = 10

    function AdminRolesUsersRequest(roleId, sinceId, untilId, limit, )
        OpenAPI.validate_property(AdminRolesUsersRequest, Symbol("roleId"), roleId)
        OpenAPI.validate_property(AdminRolesUsersRequest, Symbol("sinceId"), sinceId)
        OpenAPI.validate_property(AdminRolesUsersRequest, Symbol("untilId"), untilId)
        OpenAPI.validate_property(AdminRolesUsersRequest, Symbol("limit"), limit)
        return new(roleId, sinceId, untilId, limit, )
    end
end # type AdminRolesUsersRequest

const _property_types_AdminRolesUsersRequest = Dict{Symbol,String}(Symbol("roleId")=>"String", Symbol("sinceId")=>"String", Symbol("untilId")=>"String", Symbol("limit")=>"Int64", )
OpenAPI.property_type(::Type{ AdminRolesUsersRequest }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_AdminRolesUsersRequest[name]))}

function check_required(o::AdminRolesUsersRequest)
    o.roleId === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ AdminRolesUsersRequest }, name::Symbol, val)
    if name === Symbol("roleId")
        OpenAPI.validate_param(name, "AdminRolesUsersRequest", :format, val, "misskey:id")
    end
    if name === Symbol("sinceId")
        OpenAPI.validate_param(name, "AdminRolesUsersRequest", :format, val, "misskey:id")
    end
    if name === Symbol("untilId")
        OpenAPI.validate_param(name, "AdminRolesUsersRequest", :format, val, "misskey:id")
    end
    if name === Symbol("limit")
        OpenAPI.validate_param(name, "AdminRolesUsersRequest", :maximum, val, 100, false)
        OpenAPI.validate_param(name, "AdminRolesUsersRequest", :minimum, val, 1, false)
    end
end
