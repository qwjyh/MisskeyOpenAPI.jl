# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""DriveFile

    DriveFile(;
        id=nothing,
        createdAt=nothing,
        name=nothing,
        type=nothing,
        md5=nothing,
        size=nothing,
        isSensitive=nothing,
        blurhash=nothing,
        properties=nothing,
        url=nothing,
        thumbnailUrl=nothing,
        comment=nothing,
        folderId=nothing,
        folder=nothing,
        userId=nothing,
        user=nothing,
    )

    - id::String
    - createdAt::ZonedDateTime
    - name::String
    - type::String
    - md5::String
    - size::Float64
    - isSensitive::Bool
    - blurhash::String
    - properties::DriveFileProperties
    - url::String
    - thumbnailUrl::String
    - comment::String
    - folderId::String
    - folder::DriveFolder
    - userId::String
    - user::UserLite
"""
Base.@kwdef mutable struct DriveFile <: OpenAPI.APIModel
    id::Union{Nothing, String} = nothing
    createdAt::Union{Nothing, ZonedDateTime} = nothing
    name::Union{Nothing, String} = nothing
    type::Union{Nothing, String} = nothing
    md5::Union{Nothing, String} = nothing
    size::Union{Nothing, Float64} = nothing
    isSensitive::Union{Nothing, Bool} = nothing
    blurhash::Union{Nothing, String} = nothing
    properties = nothing # spec type: Union{ Nothing, DriveFileProperties }
    url::Union{Nothing, String} = nothing
    thumbnailUrl::Union{Nothing, String} = nothing
    comment::Union{Nothing, String} = nothing
    folderId::Union{Nothing, String} = nothing
    folder = nothing # spec type: Union{ Nothing, DriveFolder }
    userId::Union{Nothing, String} = nothing
    user = nothing # spec type: Union{ Nothing, UserLite }

    function DriveFile(id, createdAt, name, type, md5, size, isSensitive, blurhash, properties, url, thumbnailUrl, comment, folderId, folder, userId, user, )
        OpenAPI.validate_property(DriveFile, Symbol("id"), id)
        OpenAPI.validate_property(DriveFile, Symbol("createdAt"), createdAt)
        OpenAPI.validate_property(DriveFile, Symbol("name"), name)
        OpenAPI.validate_property(DriveFile, Symbol("type"), type)
        OpenAPI.validate_property(DriveFile, Symbol("md5"), md5)
        OpenAPI.validate_property(DriveFile, Symbol("size"), size)
        OpenAPI.validate_property(DriveFile, Symbol("isSensitive"), isSensitive)
        OpenAPI.validate_property(DriveFile, Symbol("blurhash"), blurhash)
        OpenAPI.validate_property(DriveFile, Symbol("properties"), properties)
        OpenAPI.validate_property(DriveFile, Symbol("url"), url)
        OpenAPI.validate_property(DriveFile, Symbol("thumbnailUrl"), thumbnailUrl)
        OpenAPI.validate_property(DriveFile, Symbol("comment"), comment)
        OpenAPI.validate_property(DriveFile, Symbol("folderId"), folderId)
        OpenAPI.validate_property(DriveFile, Symbol("folder"), folder)
        OpenAPI.validate_property(DriveFile, Symbol("userId"), userId)
        OpenAPI.validate_property(DriveFile, Symbol("user"), user)
        return new(id, createdAt, name, type, md5, size, isSensitive, blurhash, properties, url, thumbnailUrl, comment, folderId, folder, userId, user, )
    end
end # type DriveFile

const _property_types_DriveFile = Dict{Symbol,String}(Symbol("id")=>"String", Symbol("createdAt")=>"ZonedDateTime", Symbol("name")=>"String", Symbol("type")=>"String", Symbol("md5")=>"String", Symbol("size")=>"Float64", Symbol("isSensitive")=>"Bool", Symbol("blurhash")=>"String", Symbol("properties")=>"DriveFileProperties", Symbol("url")=>"String", Symbol("thumbnailUrl")=>"String", Symbol("comment")=>"String", Symbol("folderId")=>"String", Symbol("folder")=>"DriveFolder", Symbol("userId")=>"String", Symbol("user")=>"UserLite", )
OpenAPI.property_type(::Type{ DriveFile }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_DriveFile[name]))}

function check_required(o::DriveFile)
    o.id === nothing && (return false)
    o.createdAt === nothing && (return false)
    o.name === nothing && (return false)
    o.type === nothing && (return false)
    o.md5 === nothing && (return false)
    o.size === nothing && (return false)
    o.isSensitive === nothing && (return false)
    o.blurhash === nothing && (return false)
    o.properties === nothing && (return false)
    o.url === nothing && (return false)
    o.thumbnailUrl === nothing && (return false)
    o.comment === nothing && (return false)
    o.folderId === nothing && (return false)
    o.folder === nothing && (return false)
    o.userId === nothing && (return false)
    o.user === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ DriveFile }, name::Symbol, val)
    if name === Symbol("id")
        OpenAPI.validate_param(name, "DriveFile", :format, val, "id")
    end
    if name === Symbol("createdAt")
        OpenAPI.validate_param(name, "DriveFile", :format, val, "date-time")
    end
    if name === Symbol("md5")
        OpenAPI.validate_param(name, "DriveFile", :format, val, "md5")
    end
    if name === Symbol("url")
        OpenAPI.validate_param(name, "DriveFile", :format, val, "url")
    end
    if name === Symbol("thumbnailUrl")
        OpenAPI.validate_param(name, "DriveFile", :format, val, "url")
    end
    if name === Symbol("folderId")
        OpenAPI.validate_param(name, "DriveFile", :format, val, "id")
    end
    if name === Symbol("userId")
        OpenAPI.validate_param(name, "DriveFile", :format, val, "id")
    end
end
