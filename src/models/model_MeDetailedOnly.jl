# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""MeDetailedOnly

    MeDetailedOnly(;
        avatarId=nothing,
        bannerId=nothing,
        isModerator=nothing,
        isAdmin=nothing,
        injectFeaturedNote=nothing,
        receiveAnnouncementEmail=nothing,
        alwaysMarkNsfw=nothing,
        autoSensitive=nothing,
        carefulBot=nothing,
        autoAcceptFollowed=nothing,
        noCrawle=nothing,
        preventAiLearning=nothing,
        isExplorable=nothing,
        isDeleted=nothing,
        twoFactorBackupCodesStock=nothing,
        hideOnlineStatus=nothing,
        hasUnreadSpecifiedNotes=nothing,
        hasUnreadMentions=nothing,
        hasUnreadAnnouncement=nothing,
        unreadAnnouncements=nothing,
        hasUnreadAntenna=nothing,
        hasUnreadChannel=nothing,
        hasUnreadNotification=nothing,
        hasPendingReceivedFollowRequest=nothing,
        unreadNotificationsCount=nothing,
        mutedWords=nothing,
        hardMutedWords=nothing,
        mutedInstances=nothing,
        notificationRecieveConfig=nothing,
        emailNotificationTypes=nothing,
        achievements=nothing,
        loggedInDays=nothing,
        policies=nothing,
        email=nothing,
        emailVerified=nothing,
        securityKeysList=nothing,
    )

    - avatarId::String
    - bannerId::String
    - isModerator::Bool
    - isAdmin::Bool
    - injectFeaturedNote::Bool
    - receiveAnnouncementEmail::Bool
    - alwaysMarkNsfw::Bool
    - autoSensitive::Bool
    - carefulBot::Bool
    - autoAcceptFollowed::Bool
    - noCrawle::Bool
    - preventAiLearning::Bool
    - isExplorable::Bool
    - isDeleted::Bool
    - twoFactorBackupCodesStock::String
    - hideOnlineStatus::Bool
    - hasUnreadSpecifiedNotes::Bool
    - hasUnreadMentions::Bool
    - hasUnreadAnnouncement::Bool
    - unreadAnnouncements::Vector{Announcement}
    - hasUnreadAntenna::Bool
    - hasUnreadChannel::Bool
    - hasUnreadNotification::Bool
    - hasPendingReceivedFollowRequest::Bool
    - unreadNotificationsCount::Float64
    - mutedWords::Vector{Vector{String}}
    - hardMutedWords::Vector{Vector{String}}
    - mutedInstances::Vector{String}
    - notificationRecieveConfig::MeDetailedOnlyNotificationRecieveConfig
    - emailNotificationTypes::Vector{String}
    - achievements::Vector{UsersAchievements200ResponseInner}
    - loggedInDays::Float64
    - policies::RolePolicies
    - email::String
    - emailVerified::Bool
    - securityKeysList::Vector{MeDetailedOnlySecurityKeysListInner}
"""
Base.@kwdef mutable struct MeDetailedOnly <: OpenAPI.APIModel
    avatarId::Union{Nothing, String} = nothing
    bannerId::Union{Nothing, String} = nothing
    isModerator::Union{Nothing, Bool} = nothing
    isAdmin::Union{Nothing, Bool} = nothing
    injectFeaturedNote::Union{Nothing, Bool} = nothing
    receiveAnnouncementEmail::Union{Nothing, Bool} = nothing
    alwaysMarkNsfw::Union{Nothing, Bool} = nothing
    autoSensitive::Union{Nothing, Bool} = nothing
    carefulBot::Union{Nothing, Bool} = nothing
    autoAcceptFollowed::Union{Nothing, Bool} = nothing
    noCrawle::Union{Nothing, Bool} = nothing
    preventAiLearning::Union{Nothing, Bool} = nothing
    isExplorable::Union{Nothing, Bool} = nothing
    isDeleted::Union{Nothing, Bool} = nothing
    twoFactorBackupCodesStock::Union{Nothing, String} = nothing
    hideOnlineStatus::Union{Nothing, Bool} = nothing
    hasUnreadSpecifiedNotes::Union{Nothing, Bool} = nothing
    hasUnreadMentions::Union{Nothing, Bool} = nothing
    hasUnreadAnnouncement::Union{Nothing, Bool} = nothing
    unreadAnnouncements::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{Announcement} }
    hasUnreadAntenna::Union{Nothing, Bool} = nothing
    hasUnreadChannel::Union{Nothing, Bool} = nothing
    hasUnreadNotification::Union{Nothing, Bool} = nothing
    hasPendingReceivedFollowRequest::Union{Nothing, Bool} = nothing
    unreadNotificationsCount::Union{Nothing, Float64} = nothing
    mutedWords::Union{Nothing, Vector{Vector{String}}} = nothing
    hardMutedWords::Union{Nothing, Vector{Vector{String}}} = nothing
    mutedInstances::Union{Nothing, Vector{String}} = nothing
    notificationRecieveConfig = nothing # spec type: Union{ Nothing, MeDetailedOnlyNotificationRecieveConfig }
    emailNotificationTypes::Union{Nothing, Vector{String}} = nothing
    achievements::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{UsersAchievements200ResponseInner} }
    loggedInDays::Union{Nothing, Float64} = nothing
    policies = nothing # spec type: Union{ Nothing, RolePolicies }
    email::Union{Nothing, String} = nothing
    emailVerified::Union{Nothing, Bool} = nothing
    securityKeysList::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{MeDetailedOnlySecurityKeysListInner} }

    function MeDetailedOnly(avatarId, bannerId, isModerator, isAdmin, injectFeaturedNote, receiveAnnouncementEmail, alwaysMarkNsfw, autoSensitive, carefulBot, autoAcceptFollowed, noCrawle, preventAiLearning, isExplorable, isDeleted, twoFactorBackupCodesStock, hideOnlineStatus, hasUnreadSpecifiedNotes, hasUnreadMentions, hasUnreadAnnouncement, unreadAnnouncements, hasUnreadAntenna, hasUnreadChannel, hasUnreadNotification, hasPendingReceivedFollowRequest, unreadNotificationsCount, mutedWords, hardMutedWords, mutedInstances, notificationRecieveConfig, emailNotificationTypes, achievements, loggedInDays, policies, email, emailVerified, securityKeysList, )
        OpenAPI.validate_property(MeDetailedOnly, Symbol("avatarId"), avatarId)
        OpenAPI.validate_property(MeDetailedOnly, Symbol("bannerId"), bannerId)
        OpenAPI.validate_property(MeDetailedOnly, Symbol("isModerator"), isModerator)
        OpenAPI.validate_property(MeDetailedOnly, Symbol("isAdmin"), isAdmin)
        OpenAPI.validate_property(MeDetailedOnly, Symbol("injectFeaturedNote"), injectFeaturedNote)
        OpenAPI.validate_property(MeDetailedOnly, Symbol("receiveAnnouncementEmail"), receiveAnnouncementEmail)
        OpenAPI.validate_property(MeDetailedOnly, Symbol("alwaysMarkNsfw"), alwaysMarkNsfw)
        OpenAPI.validate_property(MeDetailedOnly, Symbol("autoSensitive"), autoSensitive)
        OpenAPI.validate_property(MeDetailedOnly, Symbol("carefulBot"), carefulBot)
        OpenAPI.validate_property(MeDetailedOnly, Symbol("autoAcceptFollowed"), autoAcceptFollowed)
        OpenAPI.validate_property(MeDetailedOnly, Symbol("noCrawle"), noCrawle)
        OpenAPI.validate_property(MeDetailedOnly, Symbol("preventAiLearning"), preventAiLearning)
        OpenAPI.validate_property(MeDetailedOnly, Symbol("isExplorable"), isExplorable)
        OpenAPI.validate_property(MeDetailedOnly, Symbol("isDeleted"), isDeleted)
        OpenAPI.validate_property(MeDetailedOnly, Symbol("twoFactorBackupCodesStock"), twoFactorBackupCodesStock)
        OpenAPI.validate_property(MeDetailedOnly, Symbol("hideOnlineStatus"), hideOnlineStatus)
        OpenAPI.validate_property(MeDetailedOnly, Symbol("hasUnreadSpecifiedNotes"), hasUnreadSpecifiedNotes)
        OpenAPI.validate_property(MeDetailedOnly, Symbol("hasUnreadMentions"), hasUnreadMentions)
        OpenAPI.validate_property(MeDetailedOnly, Symbol("hasUnreadAnnouncement"), hasUnreadAnnouncement)
        OpenAPI.validate_property(MeDetailedOnly, Symbol("unreadAnnouncements"), unreadAnnouncements)
        OpenAPI.validate_property(MeDetailedOnly, Symbol("hasUnreadAntenna"), hasUnreadAntenna)
        OpenAPI.validate_property(MeDetailedOnly, Symbol("hasUnreadChannel"), hasUnreadChannel)
        OpenAPI.validate_property(MeDetailedOnly, Symbol("hasUnreadNotification"), hasUnreadNotification)
        OpenAPI.validate_property(MeDetailedOnly, Symbol("hasPendingReceivedFollowRequest"), hasPendingReceivedFollowRequest)
        OpenAPI.validate_property(MeDetailedOnly, Symbol("unreadNotificationsCount"), unreadNotificationsCount)
        OpenAPI.validate_property(MeDetailedOnly, Symbol("mutedWords"), mutedWords)
        OpenAPI.validate_property(MeDetailedOnly, Symbol("hardMutedWords"), hardMutedWords)
        OpenAPI.validate_property(MeDetailedOnly, Symbol("mutedInstances"), mutedInstances)
        OpenAPI.validate_property(MeDetailedOnly, Symbol("notificationRecieveConfig"), notificationRecieveConfig)
        OpenAPI.validate_property(MeDetailedOnly, Symbol("emailNotificationTypes"), emailNotificationTypes)
        OpenAPI.validate_property(MeDetailedOnly, Symbol("achievements"), achievements)
        OpenAPI.validate_property(MeDetailedOnly, Symbol("loggedInDays"), loggedInDays)
        OpenAPI.validate_property(MeDetailedOnly, Symbol("policies"), policies)
        OpenAPI.validate_property(MeDetailedOnly, Symbol("email"), email)
        OpenAPI.validate_property(MeDetailedOnly, Symbol("emailVerified"), emailVerified)
        OpenAPI.validate_property(MeDetailedOnly, Symbol("securityKeysList"), securityKeysList)
        return new(avatarId, bannerId, isModerator, isAdmin, injectFeaturedNote, receiveAnnouncementEmail, alwaysMarkNsfw, autoSensitive, carefulBot, autoAcceptFollowed, noCrawle, preventAiLearning, isExplorable, isDeleted, twoFactorBackupCodesStock, hideOnlineStatus, hasUnreadSpecifiedNotes, hasUnreadMentions, hasUnreadAnnouncement, unreadAnnouncements, hasUnreadAntenna, hasUnreadChannel, hasUnreadNotification, hasPendingReceivedFollowRequest, unreadNotificationsCount, mutedWords, hardMutedWords, mutedInstances, notificationRecieveConfig, emailNotificationTypes, achievements, loggedInDays, policies, email, emailVerified, securityKeysList, )
    end
end # type MeDetailedOnly

const _property_types_MeDetailedOnly = Dict{Symbol,String}(Symbol("avatarId")=>"String", Symbol("bannerId")=>"String", Symbol("isModerator")=>"Bool", Symbol("isAdmin")=>"Bool", Symbol("injectFeaturedNote")=>"Bool", Symbol("receiveAnnouncementEmail")=>"Bool", Symbol("alwaysMarkNsfw")=>"Bool", Symbol("autoSensitive")=>"Bool", Symbol("carefulBot")=>"Bool", Symbol("autoAcceptFollowed")=>"Bool", Symbol("noCrawle")=>"Bool", Symbol("preventAiLearning")=>"Bool", Symbol("isExplorable")=>"Bool", Symbol("isDeleted")=>"Bool", Symbol("twoFactorBackupCodesStock")=>"String", Symbol("hideOnlineStatus")=>"Bool", Symbol("hasUnreadSpecifiedNotes")=>"Bool", Symbol("hasUnreadMentions")=>"Bool", Symbol("hasUnreadAnnouncement")=>"Bool", Symbol("unreadAnnouncements")=>"Vector{Announcement}", Symbol("hasUnreadAntenna")=>"Bool", Symbol("hasUnreadChannel")=>"Bool", Symbol("hasUnreadNotification")=>"Bool", Symbol("hasPendingReceivedFollowRequest")=>"Bool", Symbol("unreadNotificationsCount")=>"Float64", Symbol("mutedWords")=>"Vector{Vector{String}}", Symbol("hardMutedWords")=>"Vector{Vector{String}}", Symbol("mutedInstances")=>"Vector{String}", Symbol("notificationRecieveConfig")=>"MeDetailedOnlyNotificationRecieveConfig", Symbol("emailNotificationTypes")=>"Vector{String}", Symbol("achievements")=>"Vector{UsersAchievements200ResponseInner}", Symbol("loggedInDays")=>"Float64", Symbol("policies")=>"RolePolicies", Symbol("email")=>"String", Symbol("emailVerified")=>"Bool", Symbol("securityKeysList")=>"Vector{MeDetailedOnlySecurityKeysListInner}", )
OpenAPI.property_type(::Type{ MeDetailedOnly }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_MeDetailedOnly[name]))}

function check_required(o::MeDetailedOnly)
    o.avatarId === nothing && (return false)
    o.bannerId === nothing && (return false)
    o.isModerator === nothing && (return false)
    o.isAdmin === nothing && (return false)
    o.injectFeaturedNote === nothing && (return false)
    o.receiveAnnouncementEmail === nothing && (return false)
    o.alwaysMarkNsfw === nothing && (return false)
    o.autoSensitive === nothing && (return false)
    o.carefulBot === nothing && (return false)
    o.autoAcceptFollowed === nothing && (return false)
    o.noCrawle === nothing && (return false)
    o.preventAiLearning === nothing && (return false)
    o.isExplorable === nothing && (return false)
    o.isDeleted === nothing && (return false)
    o.twoFactorBackupCodesStock === nothing && (return false)
    o.hideOnlineStatus === nothing && (return false)
    o.hasUnreadSpecifiedNotes === nothing && (return false)
    o.hasUnreadMentions === nothing && (return false)
    o.hasUnreadAnnouncement === nothing && (return false)
    o.unreadAnnouncements === nothing && (return false)
    o.hasUnreadAntenna === nothing && (return false)
    o.hasUnreadChannel === nothing && (return false)
    o.hasUnreadNotification === nothing && (return false)
    o.hasPendingReceivedFollowRequest === nothing && (return false)
    o.unreadNotificationsCount === nothing && (return false)
    o.mutedWords === nothing && (return false)
    o.hardMutedWords === nothing && (return false)
    o.mutedInstances === nothing && (return false)
    o.notificationRecieveConfig === nothing && (return false)
    o.emailNotificationTypes === nothing && (return false)
    o.achievements === nothing && (return false)
    o.loggedInDays === nothing && (return false)
    o.policies === nothing && (return false)
    o.email === nothing && (return false)
    o.emailVerified === nothing && (return false)
    o.securityKeysList === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ MeDetailedOnly }, name::Symbol, val)
    if name === Symbol("avatarId")
        OpenAPI.validate_param(name, "MeDetailedOnly", :format, val, "id")
    end
    if name === Symbol("bannerId")
        OpenAPI.validate_param(name, "MeDetailedOnly", :format, val, "id")
    end
    if name === Symbol("twoFactorBackupCodesStock")
        OpenAPI.validate_param(name, "MeDetailedOnly", :enum, val, ["full", "partial", "none"])
    end
end
