# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""flash___my_likes_200_response_inner

    FlashMyLikes200ResponseInner(;
        id=nothing,
        flash=nothing,
    )

    - id::String
    - flash::Flash
"""
Base.@kwdef mutable struct FlashMyLikes200ResponseInner <: OpenAPI.APIModel
    id::Union{Nothing, String} = nothing
    flash = nothing # spec type: Union{ Nothing, Flash }

    function FlashMyLikes200ResponseInner(id, flash, )
        OpenAPI.validate_property(FlashMyLikes200ResponseInner, Symbol("id"), id)
        OpenAPI.validate_property(FlashMyLikes200ResponseInner, Symbol("flash"), flash)
        return new(id, flash, )
    end
end # type FlashMyLikes200ResponseInner

const _property_types_FlashMyLikes200ResponseInner = Dict{Symbol,String}(Symbol("id")=>"String", Symbol("flash")=>"Flash", )
OpenAPI.property_type(::Type{ FlashMyLikes200ResponseInner }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_FlashMyLikes200ResponseInner[name]))}

function check_required(o::FlashMyLikes200ResponseInner)
    o.id === nothing && (return false)
    o.flash === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ FlashMyLikes200ResponseInner }, name::Symbol, val)
    if name === Symbol("id")
        OpenAPI.validate_param(name, "FlashMyLikes200ResponseInner", :format, val, "id")
    end
end
