# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""admin___announcements___update_request

    AdminAnnouncementsUpdateRequest(;
        id=nothing,
        title=nothing,
        text=nothing,
        imageUrl=nothing,
        icon=nothing,
        display=nothing,
        forExistingUsers=nothing,
        silence=nothing,
        needConfirmationToRead=nothing,
        isActive=nothing,
    )

    - id::String
    - title::String
    - text::String
    - imageUrl::String
    - icon::String
    - display::String
    - forExistingUsers::Bool
    - silence::Bool
    - needConfirmationToRead::Bool
    - isActive::Bool
"""
Base.@kwdef mutable struct AdminAnnouncementsUpdateRequest <: OpenAPI.APIModel
    id::Union{Nothing, String} = nothing
    title::Union{Nothing, String} = nothing
    text::Union{Nothing, String} = nothing
    imageUrl::Union{Nothing, String} = nothing
    icon::Union{Nothing, String} = nothing
    display::Union{Nothing, String} = nothing
    forExistingUsers::Union{Nothing, Bool} = nothing
    silence::Union{Nothing, Bool} = nothing
    needConfirmationToRead::Union{Nothing, Bool} = nothing
    isActive::Union{Nothing, Bool} = nothing

    function AdminAnnouncementsUpdateRequest(id, title, text, imageUrl, icon, display, forExistingUsers, silence, needConfirmationToRead, isActive, )
        OpenAPI.validate_property(AdminAnnouncementsUpdateRequest, Symbol("id"), id)
        OpenAPI.validate_property(AdminAnnouncementsUpdateRequest, Symbol("title"), title)
        OpenAPI.validate_property(AdminAnnouncementsUpdateRequest, Symbol("text"), text)
        OpenAPI.validate_property(AdminAnnouncementsUpdateRequest, Symbol("imageUrl"), imageUrl)
        OpenAPI.validate_property(AdminAnnouncementsUpdateRequest, Symbol("icon"), icon)
        OpenAPI.validate_property(AdminAnnouncementsUpdateRequest, Symbol("display"), display)
        OpenAPI.validate_property(AdminAnnouncementsUpdateRequest, Symbol("forExistingUsers"), forExistingUsers)
        OpenAPI.validate_property(AdminAnnouncementsUpdateRequest, Symbol("silence"), silence)
        OpenAPI.validate_property(AdminAnnouncementsUpdateRequest, Symbol("needConfirmationToRead"), needConfirmationToRead)
        OpenAPI.validate_property(AdminAnnouncementsUpdateRequest, Symbol("isActive"), isActive)
        return new(id, title, text, imageUrl, icon, display, forExistingUsers, silence, needConfirmationToRead, isActive, )
    end
end # type AdminAnnouncementsUpdateRequest

const _property_types_AdminAnnouncementsUpdateRequest = Dict{Symbol,String}(Symbol("id")=>"String", Symbol("title")=>"String", Symbol("text")=>"String", Symbol("imageUrl")=>"String", Symbol("icon")=>"String", Symbol("display")=>"String", Symbol("forExistingUsers")=>"Bool", Symbol("silence")=>"Bool", Symbol("needConfirmationToRead")=>"Bool", Symbol("isActive")=>"Bool", )
OpenAPI.property_type(::Type{ AdminAnnouncementsUpdateRequest }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_AdminAnnouncementsUpdateRequest[name]))}

function check_required(o::AdminAnnouncementsUpdateRequest)
    o.id === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ AdminAnnouncementsUpdateRequest }, name::Symbol, val)
    if name === Symbol("id")
        OpenAPI.validate_param(name, "AdminAnnouncementsUpdateRequest", :format, val, "misskey:id")
    end
    if name === Symbol("title")
        OpenAPI.validate_param(name, "AdminAnnouncementsUpdateRequest", :minLength, val, 1)
    end
    if name === Symbol("text")
        OpenAPI.validate_param(name, "AdminAnnouncementsUpdateRequest", :minLength, val, 1)
    end
    if name === Symbol("imageUrl")
        OpenAPI.validate_param(name, "AdminAnnouncementsUpdateRequest", :minLength, val, 0)
    end
    if name === Symbol("icon")
        OpenAPI.validate_param(name, "AdminAnnouncementsUpdateRequest", :enum, val, ["info", "warning", "error", "success"])
    end
    if name === Symbol("display")
        OpenAPI.validate_param(name, "AdminAnnouncementsUpdateRequest", :enum, val, ["normal", "banner", "dialog"])
    end
end
