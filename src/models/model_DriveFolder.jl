# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""DriveFolder

    DriveFolder(;
        id=nothing,
        createdAt=nothing,
        name=nothing,
        parentId=nothing,
        foldersCount=nothing,
        filesCount=nothing,
        parent=nothing,
    )

    - id::String
    - createdAt::ZonedDateTime
    - name::String
    - parentId::String
    - foldersCount::Float64
    - filesCount::Float64
    - parent::DriveFolder
"""
Base.@kwdef mutable struct DriveFolder <: OpenAPI.APIModel
    id::Union{Nothing, String} = nothing
    createdAt::Union{Nothing, ZonedDateTime} = nothing
    name::Union{Nothing, String} = nothing
    parentId::Union{Nothing, String} = nothing
    foldersCount::Union{Nothing, Float64} = nothing
    filesCount::Union{Nothing, Float64} = nothing
    parent = nothing # spec type: Union{ Nothing, DriveFolder }

    function DriveFolder(id, createdAt, name, parentId, foldersCount, filesCount, parent, )
        OpenAPI.validate_property(DriveFolder, Symbol("id"), id)
        OpenAPI.validate_property(DriveFolder, Symbol("createdAt"), createdAt)
        OpenAPI.validate_property(DriveFolder, Symbol("name"), name)
        OpenAPI.validate_property(DriveFolder, Symbol("parentId"), parentId)
        OpenAPI.validate_property(DriveFolder, Symbol("foldersCount"), foldersCount)
        OpenAPI.validate_property(DriveFolder, Symbol("filesCount"), filesCount)
        OpenAPI.validate_property(DriveFolder, Symbol("parent"), parent)
        return new(id, createdAt, name, parentId, foldersCount, filesCount, parent, )
    end
end # type DriveFolder

const _property_types_DriveFolder = Dict{Symbol,String}(Symbol("id")=>"String", Symbol("createdAt")=>"ZonedDateTime", Symbol("name")=>"String", Symbol("parentId")=>"String", Symbol("foldersCount")=>"Float64", Symbol("filesCount")=>"Float64", Symbol("parent")=>"DriveFolder", )
OpenAPI.property_type(::Type{ DriveFolder }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_DriveFolder[name]))}

function check_required(o::DriveFolder)
    o.id === nothing && (return false)
    o.createdAt === nothing && (return false)
    o.name === nothing && (return false)
    o.parentId === nothing && (return false)
    o.foldersCount === nothing && (return false)
    o.filesCount === nothing && (return false)
    o.parent === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ DriveFolder }, name::Symbol, val)
    if name === Symbol("id")
        OpenAPI.validate_param(name, "DriveFolder", :format, val, "id")
    end
    if name === Symbol("createdAt")
        OpenAPI.validate_param(name, "DriveFolder", :format, val, "date-time")
    end
    if name === Symbol("parentId")
        OpenAPI.validate_param(name, "DriveFolder", :format, val, "id")
    end
end
