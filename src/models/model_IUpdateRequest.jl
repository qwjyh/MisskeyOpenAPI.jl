# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""i___update_request

    IUpdateRequest(;
        name=nothing,
        description=nothing,
        location=nothing,
        birthday=nothing,
        lang=nothing,
        avatarId=nothing,
        avatarDecorations=nothing,
        bannerId=nothing,
        fields=nothing,
        isLocked=nothing,
        isExplorable=nothing,
        hideOnlineStatus=nothing,
        publicReactions=nothing,
        carefulBot=nothing,
        autoAcceptFollowed=nothing,
        noCrawle=nothing,
        preventAiLearning=nothing,
        isBot=nothing,
        isCat=nothing,
        injectFeaturedNote=nothing,
        receiveAnnouncementEmail=nothing,
        alwaysMarkNsfw=nothing,
        autoSensitive=nothing,
        followingVisibility=nothing,
        followersVisibility=nothing,
        pinnedPageId=nothing,
        mutedWords=nothing,
        hardMutedWords=nothing,
        mutedInstances=nothing,
        notificationRecieveConfig=nothing,
        emailNotificationTypes=nothing,
        alsoKnownAs=nothing,
    )

    - name::String
    - description::String
    - location::String
    - birthday::String
    - lang::String
    - avatarId::String
    - avatarDecorations::Vector{IUpdateRequestAvatarDecorationsInner}
    - bannerId::String
    - fields::Vector{IUpdateRequestFieldsInner}
    - isLocked::Bool
    - isExplorable::Bool
    - hideOnlineStatus::Bool
    - publicReactions::Bool
    - carefulBot::Bool
    - autoAcceptFollowed::Bool
    - noCrawle::Bool
    - preventAiLearning::Bool
    - isBot::Bool
    - isCat::Bool
    - injectFeaturedNote::Bool
    - receiveAnnouncementEmail::Bool
    - alwaysMarkNsfw::Bool
    - autoSensitive::Bool
    - followingVisibility::String
    - followersVisibility::String
    - pinnedPageId::String
    - mutedWords::Vector{IUpdateRequestMutedWordsInner}
    - hardMutedWords::Vector{IUpdateRequestMutedWordsInner}
    - mutedInstances::Vector{String}
    - notificationRecieveConfig::AdminShowUser200ResponseNotificationRecieveConfig
    - emailNotificationTypes::Vector{String}
    - alsoKnownAs::Vector{String}
"""
Base.@kwdef mutable struct IUpdateRequest <: OpenAPI.APIModel
    name::Union{Nothing, String} = nothing
    description::Union{Nothing, String} = nothing
    location::Union{Nothing, String} = nothing
    birthday::Union{Nothing, String} = nothing
    lang::Union{Nothing, String} = nothing
    avatarId::Union{Nothing, String} = nothing
    avatarDecorations::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{IUpdateRequestAvatarDecorationsInner} }
    bannerId::Union{Nothing, String} = nothing
    fields::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{IUpdateRequestFieldsInner} }
    isLocked::Union{Nothing, Bool} = nothing
    isExplorable::Union{Nothing, Bool} = nothing
    hideOnlineStatus::Union{Nothing, Bool} = nothing
    publicReactions::Union{Nothing, Bool} = nothing
    carefulBot::Union{Nothing, Bool} = nothing
    autoAcceptFollowed::Union{Nothing, Bool} = nothing
    noCrawle::Union{Nothing, Bool} = nothing
    preventAiLearning::Union{Nothing, Bool} = nothing
    isBot::Union{Nothing, Bool} = nothing
    isCat::Union{Nothing, Bool} = nothing
    injectFeaturedNote::Union{Nothing, Bool} = nothing
    receiveAnnouncementEmail::Union{Nothing, Bool} = nothing
    alwaysMarkNsfw::Union{Nothing, Bool} = nothing
    autoSensitive::Union{Nothing, Bool} = nothing
    followingVisibility::Union{Nothing, String} = nothing
    followersVisibility::Union{Nothing, String} = nothing
    pinnedPageId::Union{Nothing, String} = nothing
    mutedWords::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{IUpdateRequestMutedWordsInner} }
    hardMutedWords::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{IUpdateRequestMutedWordsInner} }
    mutedInstances::Union{Nothing, Vector{String}} = nothing
    notificationRecieveConfig = nothing # spec type: Union{ Nothing, AdminShowUser200ResponseNotificationRecieveConfig }
    emailNotificationTypes::Union{Nothing, Vector{String}} = nothing
    alsoKnownAs::Union{Nothing, Vector{String}} = nothing

    function IUpdateRequest(name, description, location, birthday, lang, avatarId, avatarDecorations, bannerId, fields, isLocked, isExplorable, hideOnlineStatus, publicReactions, carefulBot, autoAcceptFollowed, noCrawle, preventAiLearning, isBot, isCat, injectFeaturedNote, receiveAnnouncementEmail, alwaysMarkNsfw, autoSensitive, followingVisibility, followersVisibility, pinnedPageId, mutedWords, hardMutedWords, mutedInstances, notificationRecieveConfig, emailNotificationTypes, alsoKnownAs, )
        OpenAPI.validate_property(IUpdateRequest, Symbol("name"), name)
        OpenAPI.validate_property(IUpdateRequest, Symbol("description"), description)
        OpenAPI.validate_property(IUpdateRequest, Symbol("location"), location)
        OpenAPI.validate_property(IUpdateRequest, Symbol("birthday"), birthday)
        OpenAPI.validate_property(IUpdateRequest, Symbol("lang"), lang)
        OpenAPI.validate_property(IUpdateRequest, Symbol("avatarId"), avatarId)
        OpenAPI.validate_property(IUpdateRequest, Symbol("avatarDecorations"), avatarDecorations)
        OpenAPI.validate_property(IUpdateRequest, Symbol("bannerId"), bannerId)
        OpenAPI.validate_property(IUpdateRequest, Symbol("fields"), fields)
        OpenAPI.validate_property(IUpdateRequest, Symbol("isLocked"), isLocked)
        OpenAPI.validate_property(IUpdateRequest, Symbol("isExplorable"), isExplorable)
        OpenAPI.validate_property(IUpdateRequest, Symbol("hideOnlineStatus"), hideOnlineStatus)
        OpenAPI.validate_property(IUpdateRequest, Symbol("publicReactions"), publicReactions)
        OpenAPI.validate_property(IUpdateRequest, Symbol("carefulBot"), carefulBot)
        OpenAPI.validate_property(IUpdateRequest, Symbol("autoAcceptFollowed"), autoAcceptFollowed)
        OpenAPI.validate_property(IUpdateRequest, Symbol("noCrawle"), noCrawle)
        OpenAPI.validate_property(IUpdateRequest, Symbol("preventAiLearning"), preventAiLearning)
        OpenAPI.validate_property(IUpdateRequest, Symbol("isBot"), isBot)
        OpenAPI.validate_property(IUpdateRequest, Symbol("isCat"), isCat)
        OpenAPI.validate_property(IUpdateRequest, Symbol("injectFeaturedNote"), injectFeaturedNote)
        OpenAPI.validate_property(IUpdateRequest, Symbol("receiveAnnouncementEmail"), receiveAnnouncementEmail)
        OpenAPI.validate_property(IUpdateRequest, Symbol("alwaysMarkNsfw"), alwaysMarkNsfw)
        OpenAPI.validate_property(IUpdateRequest, Symbol("autoSensitive"), autoSensitive)
        OpenAPI.validate_property(IUpdateRequest, Symbol("followingVisibility"), followingVisibility)
        OpenAPI.validate_property(IUpdateRequest, Symbol("followersVisibility"), followersVisibility)
        OpenAPI.validate_property(IUpdateRequest, Symbol("pinnedPageId"), pinnedPageId)
        OpenAPI.validate_property(IUpdateRequest, Symbol("mutedWords"), mutedWords)
        OpenAPI.validate_property(IUpdateRequest, Symbol("hardMutedWords"), hardMutedWords)
        OpenAPI.validate_property(IUpdateRequest, Symbol("mutedInstances"), mutedInstances)
        OpenAPI.validate_property(IUpdateRequest, Symbol("notificationRecieveConfig"), notificationRecieveConfig)
        OpenAPI.validate_property(IUpdateRequest, Symbol("emailNotificationTypes"), emailNotificationTypes)
        OpenAPI.validate_property(IUpdateRequest, Symbol("alsoKnownAs"), alsoKnownAs)
        return new(name, description, location, birthday, lang, avatarId, avatarDecorations, bannerId, fields, isLocked, isExplorable, hideOnlineStatus, publicReactions, carefulBot, autoAcceptFollowed, noCrawle, preventAiLearning, isBot, isCat, injectFeaturedNote, receiveAnnouncementEmail, alwaysMarkNsfw, autoSensitive, followingVisibility, followersVisibility, pinnedPageId, mutedWords, hardMutedWords, mutedInstances, notificationRecieveConfig, emailNotificationTypes, alsoKnownAs, )
    end
end # type IUpdateRequest

const _property_types_IUpdateRequest = Dict{Symbol,String}(Symbol("name")=>"String", Symbol("description")=>"String", Symbol("location")=>"String", Symbol("birthday")=>"String", Symbol("lang")=>"String", Symbol("avatarId")=>"String", Symbol("avatarDecorations")=>"Vector{IUpdateRequestAvatarDecorationsInner}", Symbol("bannerId")=>"String", Symbol("fields")=>"Vector{IUpdateRequestFieldsInner}", Symbol("isLocked")=>"Bool", Symbol("isExplorable")=>"Bool", Symbol("hideOnlineStatus")=>"Bool", Symbol("publicReactions")=>"Bool", Symbol("carefulBot")=>"Bool", Symbol("autoAcceptFollowed")=>"Bool", Symbol("noCrawle")=>"Bool", Symbol("preventAiLearning")=>"Bool", Symbol("isBot")=>"Bool", Symbol("isCat")=>"Bool", Symbol("injectFeaturedNote")=>"Bool", Symbol("receiveAnnouncementEmail")=>"Bool", Symbol("alwaysMarkNsfw")=>"Bool", Symbol("autoSensitive")=>"Bool", Symbol("followingVisibility")=>"String", Symbol("followersVisibility")=>"String", Symbol("pinnedPageId")=>"String", Symbol("mutedWords")=>"Vector{IUpdateRequestMutedWordsInner}", Symbol("hardMutedWords")=>"Vector{IUpdateRequestMutedWordsInner}", Symbol("mutedInstances")=>"Vector{String}", Symbol("notificationRecieveConfig")=>"AdminShowUser200ResponseNotificationRecieveConfig", Symbol("emailNotificationTypes")=>"Vector{String}", Symbol("alsoKnownAs")=>"Vector{String}", )
OpenAPI.property_type(::Type{ IUpdateRequest }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IUpdateRequest[name]))}

function check_required(o::IUpdateRequest)
    true
end

function OpenAPI.validate_property(::Type{ IUpdateRequest }, name::Symbol, val)
    if name === Symbol("name")
        OpenAPI.validate_param(name, "IUpdateRequest", :maxLength, val, 50)
        OpenAPI.validate_param(name, "IUpdateRequest", :minLength, val, 1)
    end
    if name === Symbol("description")
        OpenAPI.validate_param(name, "IUpdateRequest", :maxLength, val, 1500)
        OpenAPI.validate_param(name, "IUpdateRequest", :minLength, val, 1)
    end
    if name === Symbol("location")
        OpenAPI.validate_param(name, "IUpdateRequest", :maxLength, val, 50)
        OpenAPI.validate_param(name, "IUpdateRequest", :minLength, val, 1)
    end
    if name === Symbol("birthday")
        OpenAPI.validate_param(name, "IUpdateRequest", :pattern, val, r"^([0-9]{4})-([0-9]{2})-([0-9]{2})$")
    end
    if name === Symbol("lang")
        OpenAPI.validate_param(name, "IUpdateRequest", :enum, val, ["null", "ach", "ady", "af", "af-NA", "af-ZA", "ak", "ar", "ar-AR", "ar-MA", "ar-SA", "ay-BO", "az", "az-AZ", "be-BY", "bg", "bg-BG", "bn", "bn-IN", "bn-BD", "br", "bs-BA", "ca", "ca-ES", "cak", "ck-US", "cs", "cs-CZ", "cy", "cy-GB", "da", "da-DK", "de", "de-AT", "de-DE", "de-CH", "dsb", "el", "el-GR", "en", "en-GB", "en-AU", "en-CA", "en-IE", "en-IN", "en-PI", "en-SG", "en-UD", "en-US", "en-ZA", "en@pirate", "eo", "eo-EO", "es", "es-AR", "es-419", "es-CL", "es-CO", "es-EC", "es-ES", "es-LA", "es-NI", "es-MX", "es-US", "es-VE", "et", "et-EE", "eu", "eu-ES", "fa", "fa-IR", "fb-LT", "ff", "fi", "fi-FI", "fo", "fo-FO", "fr", "fr-CA", "fr-FR", "fr-BE", "fr-CH", "fy-NL", "ga", "ga-IE", "gd", "gl", "gl-ES", "gn-PY", "gu-IN", "gv", "gx-GR", "he", "he-IL", "hi", "hi-IN", "hr", "hr-HR", "hsb", "ht", "hu", "hu-HU", "hy", "hy-AM", "id", "id-ID", "is", "is-IS", "it", "it-IT", "ja", "ja-JP", "jv-ID", "ka-GE", "kk-KZ", "km", "kl", "km-KH", "kab", "kn", "kn-IN", "ko", "ko-KR", "ku-TR", "kw", "la", "la-VA", "lb", "li-NL", "lt", "lt-LT", "lv", "lv-LV", "mai", "mg-MG", "mk", "mk-MK", "ml", "ml-IN", "mn-MN", "mr", "mr-IN", "ms", "ms-MY", "mt", "mt-MT", "my", "no", "nb", "nb-NO", "ne", "ne-NP", "nl", "nl-BE", "nl-NL", "nn-NO", "oc", "or-IN", "pa", "pa-IN", "pl", "pl-PL", "ps-AF", "pt", "pt-BR", "pt-PT", "qu-PE", "rm-CH", "ro", "ro-RO", "ru", "ru-RU", "sa-IN", "se-NO", "sh", "si-LK", "sk", "sk-SK", "sl", "sl-SI", "so-SO", "sq", "sq-AL", "sr", "sr-RS", "su", "sv", "sv-SE", "sw", "sw-KE", "ta", "ta-IN", "te", "te-IN", "tg", "tg-TJ", "th", "th-TH", "fil", "tlh", "tr", "tr-TR", "tt-RU", "uk", "uk-UA", "ur", "ur-PK", "uz", "uz-UZ", "vi", "vi-VN", "xh-ZA", "yi", "yi-DE", "zh", "zh-Hans", "zh-Hant", "zh-CN", "zh-HK", "zh-SG", "zh-TW", "zu-ZA"])
    end
    if name === Symbol("avatarId")
        OpenAPI.validate_param(name, "IUpdateRequest", :format, val, "misskey:id")
    end
    if name === Symbol("avatarDecorations")
        OpenAPI.validate_param(name, "IUpdateRequest", :maxItems, val, 16)
    end
    if name === Symbol("bannerId")
        OpenAPI.validate_param(name, "IUpdateRequest", :format, val, "misskey:id")
    end
    if name === Symbol("fields")
        OpenAPI.validate_param(name, "IUpdateRequest", :maxItems, val, 16)
        OpenAPI.validate_param(name, "IUpdateRequest", :minItems, val, 0)
    end
    if name === Symbol("followingVisibility")
        OpenAPI.validate_param(name, "IUpdateRequest", :enum, val, ["public", "followers", "private"])
    end
    if name === Symbol("followersVisibility")
        OpenAPI.validate_param(name, "IUpdateRequest", :enum, val, ["public", "followers", "private"])
    end
    if name === Symbol("pinnedPageId")
        OpenAPI.validate_param(name, "IUpdateRequest", :format, val, "misskey:id")
    end
    if name === Symbol("alsoKnownAs")
        OpenAPI.validate_param(name, "IUpdateRequest", :maxItems, val, 10)
        OpenAPI.validate_param(name, "IUpdateRequest", :uniqueItems, val, true)
    end
end
