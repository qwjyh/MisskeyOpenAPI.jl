# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""admin___emoji___set_license_bulk_request

    AdminEmojiSetLicenseBulkRequest(;
        ids=nothing,
        license=nothing,
    )

    - ids::Vector{String}
    - license::String : Use &#x60;null&#x60; to reset the license.
"""
Base.@kwdef mutable struct AdminEmojiSetLicenseBulkRequest <: OpenAPI.APIModel
    ids::Union{Nothing, Vector{String}} = nothing
    license::Union{Nothing, String} = nothing

    function AdminEmojiSetLicenseBulkRequest(ids, license, )
        OpenAPI.validate_property(AdminEmojiSetLicenseBulkRequest, Symbol("ids"), ids)
        OpenAPI.validate_property(AdminEmojiSetLicenseBulkRequest, Symbol("license"), license)
        return new(ids, license, )
    end
end # type AdminEmojiSetLicenseBulkRequest

const _property_types_AdminEmojiSetLicenseBulkRequest = Dict{Symbol,String}(Symbol("ids")=>"Vector{String}", Symbol("license")=>"String", )
OpenAPI.property_type(::Type{ AdminEmojiSetLicenseBulkRequest }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_AdminEmojiSetLicenseBulkRequest[name]))}

function check_required(o::AdminEmojiSetLicenseBulkRequest)
    o.ids === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ AdminEmojiSetLicenseBulkRequest }, name::Symbol, val)
end
