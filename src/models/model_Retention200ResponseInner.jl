# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""retention_200_response_inner

    Retention200ResponseInner(;
        createdAt=nothing,
        users=nothing,
        data=nothing,
    )

    - createdAt::ZonedDateTime
    - users::Float64
    - data::Any
"""
Base.@kwdef mutable struct Retention200ResponseInner <: OpenAPI.APIModel
    createdAt::Union{Nothing, ZonedDateTime} = nothing
    users::Union{Nothing, Float64} = nothing
    data::Union{Nothing, Any} = nothing

    function Retention200ResponseInner(createdAt, users, data, )
        OpenAPI.validate_property(Retention200ResponseInner, Symbol("createdAt"), createdAt)
        OpenAPI.validate_property(Retention200ResponseInner, Symbol("users"), users)
        OpenAPI.validate_property(Retention200ResponseInner, Symbol("data"), data)
        return new(createdAt, users, data, )
    end
end # type Retention200ResponseInner

const _property_types_Retention200ResponseInner = Dict{Symbol,String}(Symbol("createdAt")=>"ZonedDateTime", Symbol("users")=>"Float64", Symbol("data")=>"Any", )
OpenAPI.property_type(::Type{ Retention200ResponseInner }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_Retention200ResponseInner[name]))}

function check_required(o::Retention200ResponseInner)
    o.createdAt === nothing && (return false)
    o.users === nothing && (return false)
    o.data === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ Retention200ResponseInner }, name::Symbol, val)
    if name === Symbol("createdAt")
        OpenAPI.validate_param(name, "Retention200ResponseInner", :format, val, "date-time")
    end
end
