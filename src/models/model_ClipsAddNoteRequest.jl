# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""clips___add_note_request

    ClipsAddNoteRequest(;
        clipId=nothing,
        noteId=nothing,
    )

    - clipId::String
    - noteId::String
"""
Base.@kwdef mutable struct ClipsAddNoteRequest <: OpenAPI.APIModel
    clipId::Union{Nothing, String} = nothing
    noteId::Union{Nothing, String} = nothing

    function ClipsAddNoteRequest(clipId, noteId, )
        OpenAPI.validate_property(ClipsAddNoteRequest, Symbol("clipId"), clipId)
        OpenAPI.validate_property(ClipsAddNoteRequest, Symbol("noteId"), noteId)
        return new(clipId, noteId, )
    end
end # type ClipsAddNoteRequest

const _property_types_ClipsAddNoteRequest = Dict{Symbol,String}(Symbol("clipId")=>"String", Symbol("noteId")=>"String", )
OpenAPI.property_type(::Type{ ClipsAddNoteRequest }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ClipsAddNoteRequest[name]))}

function check_required(o::ClipsAddNoteRequest)
    o.clipId === nothing && (return false)
    o.noteId === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ ClipsAddNoteRequest }, name::Symbol, val)
    if name === Symbol("clipId")
        OpenAPI.validate_param(name, "ClipsAddNoteRequest", :format, val, "misskey:id")
    end
    if name === Symbol("noteId")
        OpenAPI.validate_param(name, "ClipsAddNoteRequest", :format, val, "misskey:id")
    end
end
