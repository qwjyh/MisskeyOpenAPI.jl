# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""MetaLite

    MetaLite(;
        maintainerName=nothing,
        maintainerEmail=nothing,
        version=nothing,
        providesTarball=nothing,
        name=nothing,
        shortName=nothing,
        uri=nothing,
        description=nothing,
        langs=nothing,
        tosUrl=nothing,
        repositoryUrl="https://github.com/misskey-dev/misskey",
        feedbackUrl="https://github.com/misskey-dev/misskey/issues/new",
        defaultDarkTheme=nothing,
        defaultLightTheme=nothing,
        disableRegistration=nothing,
        emailRequiredForSignup=nothing,
        enableHcaptcha=nothing,
        hcaptchaSiteKey=nothing,
        enableMcaptcha=nothing,
        mcaptchaSiteKey=nothing,
        mcaptchaInstanceUrl=nothing,
        enableRecaptcha=nothing,
        recaptchaSiteKey=nothing,
        enableTurnstile=nothing,
        turnstileSiteKey=nothing,
        swPublickey=nothing,
        mascotImageUrl="/assets/ai.png",
        bannerUrl=nothing,
        serverErrorImageUrl=nothing,
        infoImageUrl=nothing,
        notFoundImageUrl=nothing,
        iconUrl=nothing,
        maxNoteTextLength=nothing,
        ads=nothing,
        notesPerOneAd=0,
        enableEmail=nothing,
        enableServiceWorker=nothing,
        translatorAvailable=nothing,
        mediaProxy=nothing,
        enableUrlPreview=nothing,
        backgroundImageUrl=nothing,
        impressumUrl=nothing,
        logoImageUrl=nothing,
        privacyPolicyUrl=nothing,
        inquiryUrl=nothing,
        serverRules=nothing,
        themeColor=nothing,
        policies=nothing,
    )

    - maintainerName::String
    - maintainerEmail::String
    - version::String
    - providesTarball::Bool
    - name::String
    - shortName::String
    - uri::String
    - description::String
    - langs::Vector{String}
    - tosUrl::String
    - repositoryUrl::String
    - feedbackUrl::String
    - defaultDarkTheme::String
    - defaultLightTheme::String
    - disableRegistration::Bool
    - emailRequiredForSignup::Bool
    - enableHcaptcha::Bool
    - hcaptchaSiteKey::String
    - enableMcaptcha::Bool
    - mcaptchaSiteKey::String
    - mcaptchaInstanceUrl::String
    - enableRecaptcha::Bool
    - recaptchaSiteKey::String
    - enableTurnstile::Bool
    - turnstileSiteKey::String
    - swPublickey::String
    - mascotImageUrl::String
    - bannerUrl::String
    - serverErrorImageUrl::String
    - infoImageUrl::String
    - notFoundImageUrl::String
    - iconUrl::String
    - maxNoteTextLength::Float64
    - ads::Vector{MetaLiteAdsInner}
    - notesPerOneAd::Float64
    - enableEmail::Bool
    - enableServiceWorker::Bool
    - translatorAvailable::Bool
    - mediaProxy::String
    - enableUrlPreview::Bool
    - backgroundImageUrl::String
    - impressumUrl::String
    - logoImageUrl::String
    - privacyPolicyUrl::String
    - inquiryUrl::String
    - serverRules::Vector{String}
    - themeColor::String
    - policies::RolePolicies
"""
Base.@kwdef mutable struct MetaLite <: OpenAPI.APIModel
    maintainerName::Union{Nothing, String} = nothing
    maintainerEmail::Union{Nothing, String} = nothing
    version::Union{Nothing, String} = nothing
    providesTarball::Union{Nothing, Bool} = nothing
    name::Union{Nothing, String} = nothing
    shortName::Union{Nothing, String} = nothing
    uri::Union{Nothing, String} = nothing
    description::Union{Nothing, String} = nothing
    langs::Union{Nothing, Vector{String}} = nothing
    tosUrl::Union{Nothing, String} = nothing
    repositoryUrl::Union{Nothing, String} = "https://github.com/misskey-dev/misskey"
    feedbackUrl::Union{Nothing, String} = "https://github.com/misskey-dev/misskey/issues/new"
    defaultDarkTheme::Union{Nothing, String} = nothing
    defaultLightTheme::Union{Nothing, String} = nothing
    disableRegistration::Union{Nothing, Bool} = nothing
    emailRequiredForSignup::Union{Nothing, Bool} = nothing
    enableHcaptcha::Union{Nothing, Bool} = nothing
    hcaptchaSiteKey::Union{Nothing, String} = nothing
    enableMcaptcha::Union{Nothing, Bool} = nothing
    mcaptchaSiteKey::Union{Nothing, String} = nothing
    mcaptchaInstanceUrl::Union{Nothing, String} = nothing
    enableRecaptcha::Union{Nothing, Bool} = nothing
    recaptchaSiteKey::Union{Nothing, String} = nothing
    enableTurnstile::Union{Nothing, Bool} = nothing
    turnstileSiteKey::Union{Nothing, String} = nothing
    swPublickey::Union{Nothing, String} = nothing
    mascotImageUrl::Union{Nothing, String} = "/assets/ai.png"
    bannerUrl::Union{Nothing, String} = nothing
    serverErrorImageUrl::Union{Nothing, String} = nothing
    infoImageUrl::Union{Nothing, String} = nothing
    notFoundImageUrl::Union{Nothing, String} = nothing
    iconUrl::Union{Nothing, String} = nothing
    maxNoteTextLength::Union{Nothing, Float64} = nothing
    ads::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{MetaLiteAdsInner} }
    notesPerOneAd::Union{Nothing, Float64} = 0
    enableEmail::Union{Nothing, Bool} = nothing
    enableServiceWorker::Union{Nothing, Bool} = nothing
    translatorAvailable::Union{Nothing, Bool} = nothing
    mediaProxy::Union{Nothing, String} = nothing
    enableUrlPreview::Union{Nothing, Bool} = nothing
    backgroundImageUrl::Union{Nothing, String} = nothing
    impressumUrl::Union{Nothing, String} = nothing
    logoImageUrl::Union{Nothing, String} = nothing
    privacyPolicyUrl::Union{Nothing, String} = nothing
    inquiryUrl::Union{Nothing, String} = nothing
    serverRules::Union{Nothing, Vector{String}} = nothing
    themeColor::Union{Nothing, String} = nothing
    policies = nothing # spec type: Union{ Nothing, RolePolicies }

    function MetaLite(maintainerName, maintainerEmail, version, providesTarball, name, shortName, uri, description, langs, tosUrl, repositoryUrl, feedbackUrl, defaultDarkTheme, defaultLightTheme, disableRegistration, emailRequiredForSignup, enableHcaptcha, hcaptchaSiteKey, enableMcaptcha, mcaptchaSiteKey, mcaptchaInstanceUrl, enableRecaptcha, recaptchaSiteKey, enableTurnstile, turnstileSiteKey, swPublickey, mascotImageUrl, bannerUrl, serverErrorImageUrl, infoImageUrl, notFoundImageUrl, iconUrl, maxNoteTextLength, ads, notesPerOneAd, enableEmail, enableServiceWorker, translatorAvailable, mediaProxy, enableUrlPreview, backgroundImageUrl, impressumUrl, logoImageUrl, privacyPolicyUrl, inquiryUrl, serverRules, themeColor, policies, )
        OpenAPI.validate_property(MetaLite, Symbol("maintainerName"), maintainerName)
        OpenAPI.validate_property(MetaLite, Symbol("maintainerEmail"), maintainerEmail)
        OpenAPI.validate_property(MetaLite, Symbol("version"), version)
        OpenAPI.validate_property(MetaLite, Symbol("providesTarball"), providesTarball)
        OpenAPI.validate_property(MetaLite, Symbol("name"), name)
        OpenAPI.validate_property(MetaLite, Symbol("shortName"), shortName)
        OpenAPI.validate_property(MetaLite, Symbol("uri"), uri)
        OpenAPI.validate_property(MetaLite, Symbol("description"), description)
        OpenAPI.validate_property(MetaLite, Symbol("langs"), langs)
        OpenAPI.validate_property(MetaLite, Symbol("tosUrl"), tosUrl)
        OpenAPI.validate_property(MetaLite, Symbol("repositoryUrl"), repositoryUrl)
        OpenAPI.validate_property(MetaLite, Symbol("feedbackUrl"), feedbackUrl)
        OpenAPI.validate_property(MetaLite, Symbol("defaultDarkTheme"), defaultDarkTheme)
        OpenAPI.validate_property(MetaLite, Symbol("defaultLightTheme"), defaultLightTheme)
        OpenAPI.validate_property(MetaLite, Symbol("disableRegistration"), disableRegistration)
        OpenAPI.validate_property(MetaLite, Symbol("emailRequiredForSignup"), emailRequiredForSignup)
        OpenAPI.validate_property(MetaLite, Symbol("enableHcaptcha"), enableHcaptcha)
        OpenAPI.validate_property(MetaLite, Symbol("hcaptchaSiteKey"), hcaptchaSiteKey)
        OpenAPI.validate_property(MetaLite, Symbol("enableMcaptcha"), enableMcaptcha)
        OpenAPI.validate_property(MetaLite, Symbol("mcaptchaSiteKey"), mcaptchaSiteKey)
        OpenAPI.validate_property(MetaLite, Symbol("mcaptchaInstanceUrl"), mcaptchaInstanceUrl)
        OpenAPI.validate_property(MetaLite, Symbol("enableRecaptcha"), enableRecaptcha)
        OpenAPI.validate_property(MetaLite, Symbol("recaptchaSiteKey"), recaptchaSiteKey)
        OpenAPI.validate_property(MetaLite, Symbol("enableTurnstile"), enableTurnstile)
        OpenAPI.validate_property(MetaLite, Symbol("turnstileSiteKey"), turnstileSiteKey)
        OpenAPI.validate_property(MetaLite, Symbol("swPublickey"), swPublickey)
        OpenAPI.validate_property(MetaLite, Symbol("mascotImageUrl"), mascotImageUrl)
        OpenAPI.validate_property(MetaLite, Symbol("bannerUrl"), bannerUrl)
        OpenAPI.validate_property(MetaLite, Symbol("serverErrorImageUrl"), serverErrorImageUrl)
        OpenAPI.validate_property(MetaLite, Symbol("infoImageUrl"), infoImageUrl)
        OpenAPI.validate_property(MetaLite, Symbol("notFoundImageUrl"), notFoundImageUrl)
        OpenAPI.validate_property(MetaLite, Symbol("iconUrl"), iconUrl)
        OpenAPI.validate_property(MetaLite, Symbol("maxNoteTextLength"), maxNoteTextLength)
        OpenAPI.validate_property(MetaLite, Symbol("ads"), ads)
        OpenAPI.validate_property(MetaLite, Symbol("notesPerOneAd"), notesPerOneAd)
        OpenAPI.validate_property(MetaLite, Symbol("enableEmail"), enableEmail)
        OpenAPI.validate_property(MetaLite, Symbol("enableServiceWorker"), enableServiceWorker)
        OpenAPI.validate_property(MetaLite, Symbol("translatorAvailable"), translatorAvailable)
        OpenAPI.validate_property(MetaLite, Symbol("mediaProxy"), mediaProxy)
        OpenAPI.validate_property(MetaLite, Symbol("enableUrlPreview"), enableUrlPreview)
        OpenAPI.validate_property(MetaLite, Symbol("backgroundImageUrl"), backgroundImageUrl)
        OpenAPI.validate_property(MetaLite, Symbol("impressumUrl"), impressumUrl)
        OpenAPI.validate_property(MetaLite, Symbol("logoImageUrl"), logoImageUrl)
        OpenAPI.validate_property(MetaLite, Symbol("privacyPolicyUrl"), privacyPolicyUrl)
        OpenAPI.validate_property(MetaLite, Symbol("inquiryUrl"), inquiryUrl)
        OpenAPI.validate_property(MetaLite, Symbol("serverRules"), serverRules)
        OpenAPI.validate_property(MetaLite, Symbol("themeColor"), themeColor)
        OpenAPI.validate_property(MetaLite, Symbol("policies"), policies)
        return new(maintainerName, maintainerEmail, version, providesTarball, name, shortName, uri, description, langs, tosUrl, repositoryUrl, feedbackUrl, defaultDarkTheme, defaultLightTheme, disableRegistration, emailRequiredForSignup, enableHcaptcha, hcaptchaSiteKey, enableMcaptcha, mcaptchaSiteKey, mcaptchaInstanceUrl, enableRecaptcha, recaptchaSiteKey, enableTurnstile, turnstileSiteKey, swPublickey, mascotImageUrl, bannerUrl, serverErrorImageUrl, infoImageUrl, notFoundImageUrl, iconUrl, maxNoteTextLength, ads, notesPerOneAd, enableEmail, enableServiceWorker, translatorAvailable, mediaProxy, enableUrlPreview, backgroundImageUrl, impressumUrl, logoImageUrl, privacyPolicyUrl, inquiryUrl, serverRules, themeColor, policies, )
    end
end # type MetaLite

const _property_types_MetaLite = Dict{Symbol,String}(Symbol("maintainerName")=>"String", Symbol("maintainerEmail")=>"String", Symbol("version")=>"String", Symbol("providesTarball")=>"Bool", Symbol("name")=>"String", Symbol("shortName")=>"String", Symbol("uri")=>"String", Symbol("description")=>"String", Symbol("langs")=>"Vector{String}", Symbol("tosUrl")=>"String", Symbol("repositoryUrl")=>"String", Symbol("feedbackUrl")=>"String", Symbol("defaultDarkTheme")=>"String", Symbol("defaultLightTheme")=>"String", Symbol("disableRegistration")=>"Bool", Symbol("emailRequiredForSignup")=>"Bool", Symbol("enableHcaptcha")=>"Bool", Symbol("hcaptchaSiteKey")=>"String", Symbol("enableMcaptcha")=>"Bool", Symbol("mcaptchaSiteKey")=>"String", Symbol("mcaptchaInstanceUrl")=>"String", Symbol("enableRecaptcha")=>"Bool", Symbol("recaptchaSiteKey")=>"String", Symbol("enableTurnstile")=>"Bool", Symbol("turnstileSiteKey")=>"String", Symbol("swPublickey")=>"String", Symbol("mascotImageUrl")=>"String", Symbol("bannerUrl")=>"String", Symbol("serverErrorImageUrl")=>"String", Symbol("infoImageUrl")=>"String", Symbol("notFoundImageUrl")=>"String", Symbol("iconUrl")=>"String", Symbol("maxNoteTextLength")=>"Float64", Symbol("ads")=>"Vector{MetaLiteAdsInner}", Symbol("notesPerOneAd")=>"Float64", Symbol("enableEmail")=>"Bool", Symbol("enableServiceWorker")=>"Bool", Symbol("translatorAvailable")=>"Bool", Symbol("mediaProxy")=>"String", Symbol("enableUrlPreview")=>"Bool", Symbol("backgroundImageUrl")=>"String", Symbol("impressumUrl")=>"String", Symbol("logoImageUrl")=>"String", Symbol("privacyPolicyUrl")=>"String", Symbol("inquiryUrl")=>"String", Symbol("serverRules")=>"Vector{String}", Symbol("themeColor")=>"String", Symbol("policies")=>"RolePolicies", )
OpenAPI.property_type(::Type{ MetaLite }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_MetaLite[name]))}

function check_required(o::MetaLite)
    o.maintainerName === nothing && (return false)
    o.maintainerEmail === nothing && (return false)
    o.version === nothing && (return false)
    o.providesTarball === nothing && (return false)
    o.name === nothing && (return false)
    o.shortName === nothing && (return false)
    o.uri === nothing && (return false)
    o.description === nothing && (return false)
    o.langs === nothing && (return false)
    o.tosUrl === nothing && (return false)
    o.repositoryUrl === nothing && (return false)
    o.feedbackUrl === nothing && (return false)
    o.defaultDarkTheme === nothing && (return false)
    o.defaultLightTheme === nothing && (return false)
    o.disableRegistration === nothing && (return false)
    o.emailRequiredForSignup === nothing && (return false)
    o.enableHcaptcha === nothing && (return false)
    o.hcaptchaSiteKey === nothing && (return false)
    o.enableMcaptcha === nothing && (return false)
    o.mcaptchaSiteKey === nothing && (return false)
    o.mcaptchaInstanceUrl === nothing && (return false)
    o.enableRecaptcha === nothing && (return false)
    o.recaptchaSiteKey === nothing && (return false)
    o.enableTurnstile === nothing && (return false)
    o.turnstileSiteKey === nothing && (return false)
    o.swPublickey === nothing && (return false)
    o.mascotImageUrl === nothing && (return false)
    o.bannerUrl === nothing && (return false)
    o.serverErrorImageUrl === nothing && (return false)
    o.infoImageUrl === nothing && (return false)
    o.notFoundImageUrl === nothing && (return false)
    o.iconUrl === nothing && (return false)
    o.maxNoteTextLength === nothing && (return false)
    o.ads === nothing && (return false)
    o.notesPerOneAd === nothing && (return false)
    o.enableEmail === nothing && (return false)
    o.enableServiceWorker === nothing && (return false)
    o.translatorAvailable === nothing && (return false)
    o.mediaProxy === nothing && (return false)
    o.enableUrlPreview === nothing && (return false)
    o.backgroundImageUrl === nothing && (return false)
    o.impressumUrl === nothing && (return false)
    o.logoImageUrl === nothing && (return false)
    o.privacyPolicyUrl === nothing && (return false)
    o.inquiryUrl === nothing && (return false)
    o.serverRules === nothing && (return false)
    o.themeColor === nothing && (return false)
    o.policies === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ MetaLite }, name::Symbol, val)
    if name === Symbol("uri")
        OpenAPI.validate_param(name, "MetaLite", :format, val, "url")
    end
end
