# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""i___registry___get_all_request

    IRegistryGetAllRequest(;
        scope=nothing,
        domain=nothing,
    )

    - scope::Vector{String}
    - domain::String
"""
Base.@kwdef mutable struct IRegistryGetAllRequest <: OpenAPI.APIModel
    scope::Union{Nothing, Vector{String}} = nothing
    domain::Union{Nothing, String} = nothing

    function IRegistryGetAllRequest(scope, domain, )
        OpenAPI.validate_property(IRegistryGetAllRequest, Symbol("scope"), scope)
        OpenAPI.validate_property(IRegistryGetAllRequest, Symbol("domain"), domain)
        return new(scope, domain, )
    end
end # type IRegistryGetAllRequest

const _property_types_IRegistryGetAllRequest = Dict{Symbol,String}(Symbol("scope")=>"Vector{String}", Symbol("domain")=>"String", )
OpenAPI.property_type(::Type{ IRegistryGetAllRequest }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IRegistryGetAllRequest[name]))}

function check_required(o::IRegistryGetAllRequest)
    o.scope === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ IRegistryGetAllRequest }, name::Symbol, val)
end
