# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""admin___accounts___create_request

    AdminAccountsCreateRequest(;
        username=nothing,
        password=nothing,
    )

    - username::String
    - password::String
"""
Base.@kwdef mutable struct AdminAccountsCreateRequest <: OpenAPI.APIModel
    username::Union{Nothing, String} = nothing
    password::Union{Nothing, String} = nothing

    function AdminAccountsCreateRequest(username, password, )
        OpenAPI.validate_property(AdminAccountsCreateRequest, Symbol("username"), username)
        OpenAPI.validate_property(AdminAccountsCreateRequest, Symbol("password"), password)
        return new(username, password, )
    end
end # type AdminAccountsCreateRequest

const _property_types_AdminAccountsCreateRequest = Dict{Symbol,String}(Symbol("username")=>"String", Symbol("password")=>"String", )
OpenAPI.property_type(::Type{ AdminAccountsCreateRequest }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_AdminAccountsCreateRequest[name]))}

function check_required(o::AdminAccountsCreateRequest)
    o.username === nothing && (return false)
    o.password === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ AdminAccountsCreateRequest }, name::Symbol, val)
    if name === Symbol("username")
        OpenAPI.validate_param(name, "AdminAccountsCreateRequest", :pattern, val, r"^\w{1,20}$")
    end
    if name === Symbol("password")
        OpenAPI.validate_param(name, "AdminAccountsCreateRequest", :minLength, val, 1)
    end
end
