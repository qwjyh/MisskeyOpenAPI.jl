# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""Channel

    Channel(;
        id=nothing,
        createdAt=nothing,
        lastNotedAt=nothing,
        name=nothing,
        description=nothing,
        userId=nothing,
        bannerUrl=nothing,
        pinnedNoteIds=nothing,
        color=nothing,
        isArchived=nothing,
        usersCount=nothing,
        notesCount=nothing,
        isSensitive=nothing,
        allowRenoteToExternal=nothing,
        isFollowing=nothing,
        isFavorited=nothing,
        pinnedNotes=nothing,
    )

    - id::String
    - createdAt::ZonedDateTime
    - lastNotedAt::ZonedDateTime
    - name::String
    - description::String
    - userId::String
    - bannerUrl::String
    - pinnedNoteIds::Vector{String}
    - color::String
    - isArchived::Bool
    - usersCount::Float64
    - notesCount::Float64
    - isSensitive::Bool
    - allowRenoteToExternal::Bool
    - isFollowing::Bool
    - isFavorited::Bool
    - pinnedNotes::Vector{Note}
"""
Base.@kwdef mutable struct Channel <: OpenAPI.APIModel
    id::Union{Nothing, String} = nothing
    createdAt::Union{Nothing, ZonedDateTime} = nothing
    lastNotedAt::Union{Nothing, ZonedDateTime} = nothing
    name::Union{Nothing, String} = nothing
    description::Union{Nothing, String} = nothing
    userId::Union{Nothing, String} = nothing
    bannerUrl::Union{Nothing, String} = nothing
    pinnedNoteIds::Union{Nothing, Vector{String}} = nothing
    color::Union{Nothing, String} = nothing
    isArchived::Union{Nothing, Bool} = nothing
    usersCount::Union{Nothing, Float64} = nothing
    notesCount::Union{Nothing, Float64} = nothing
    isSensitive::Union{Nothing, Bool} = nothing
    allowRenoteToExternal::Union{Nothing, Bool} = nothing
    isFollowing::Union{Nothing, Bool} = nothing
    isFavorited::Union{Nothing, Bool} = nothing
    pinnedNotes::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{Note} }

    function Channel(id, createdAt, lastNotedAt, name, description, userId, bannerUrl, pinnedNoteIds, color, isArchived, usersCount, notesCount, isSensitive, allowRenoteToExternal, isFollowing, isFavorited, pinnedNotes, )
        OpenAPI.validate_property(Channel, Symbol("id"), id)
        OpenAPI.validate_property(Channel, Symbol("createdAt"), createdAt)
        OpenAPI.validate_property(Channel, Symbol("lastNotedAt"), lastNotedAt)
        OpenAPI.validate_property(Channel, Symbol("name"), name)
        OpenAPI.validate_property(Channel, Symbol("description"), description)
        OpenAPI.validate_property(Channel, Symbol("userId"), userId)
        OpenAPI.validate_property(Channel, Symbol("bannerUrl"), bannerUrl)
        OpenAPI.validate_property(Channel, Symbol("pinnedNoteIds"), pinnedNoteIds)
        OpenAPI.validate_property(Channel, Symbol("color"), color)
        OpenAPI.validate_property(Channel, Symbol("isArchived"), isArchived)
        OpenAPI.validate_property(Channel, Symbol("usersCount"), usersCount)
        OpenAPI.validate_property(Channel, Symbol("notesCount"), notesCount)
        OpenAPI.validate_property(Channel, Symbol("isSensitive"), isSensitive)
        OpenAPI.validate_property(Channel, Symbol("allowRenoteToExternal"), allowRenoteToExternal)
        OpenAPI.validate_property(Channel, Symbol("isFollowing"), isFollowing)
        OpenAPI.validate_property(Channel, Symbol("isFavorited"), isFavorited)
        OpenAPI.validate_property(Channel, Symbol("pinnedNotes"), pinnedNotes)
        return new(id, createdAt, lastNotedAt, name, description, userId, bannerUrl, pinnedNoteIds, color, isArchived, usersCount, notesCount, isSensitive, allowRenoteToExternal, isFollowing, isFavorited, pinnedNotes, )
    end
end # type Channel

const _property_types_Channel = Dict{Symbol,String}(Symbol("id")=>"String", Symbol("createdAt")=>"ZonedDateTime", Symbol("lastNotedAt")=>"ZonedDateTime", Symbol("name")=>"String", Symbol("description")=>"String", Symbol("userId")=>"String", Symbol("bannerUrl")=>"String", Symbol("pinnedNoteIds")=>"Vector{String}", Symbol("color")=>"String", Symbol("isArchived")=>"Bool", Symbol("usersCount")=>"Float64", Symbol("notesCount")=>"Float64", Symbol("isSensitive")=>"Bool", Symbol("allowRenoteToExternal")=>"Bool", Symbol("isFollowing")=>"Bool", Symbol("isFavorited")=>"Bool", Symbol("pinnedNotes")=>"Vector{Note}", )
OpenAPI.property_type(::Type{ Channel }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_Channel[name]))}

function check_required(o::Channel)
    o.id === nothing && (return false)
    o.createdAt === nothing && (return false)
    o.lastNotedAt === nothing && (return false)
    o.name === nothing && (return false)
    o.description === nothing && (return false)
    o.userId === nothing && (return false)
    o.bannerUrl === nothing && (return false)
    o.pinnedNoteIds === nothing && (return false)
    o.color === nothing && (return false)
    o.isArchived === nothing && (return false)
    o.usersCount === nothing && (return false)
    o.notesCount === nothing && (return false)
    o.isSensitive === nothing && (return false)
    o.allowRenoteToExternal === nothing && (return false)
    o.isFollowing === nothing && (return false)
    o.isFavorited === nothing && (return false)
    o.pinnedNotes === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ Channel }, name::Symbol, val)
    if name === Symbol("id")
        OpenAPI.validate_param(name, "Channel", :format, val, "id")
    end
    if name === Symbol("createdAt")
        OpenAPI.validate_param(name, "Channel", :format, val, "date-time")
    end
    if name === Symbol("lastNotedAt")
        OpenAPI.validate_param(name, "Channel", :format, val, "date-time")
    end
    if name === Symbol("userId")
        OpenAPI.validate_param(name, "Channel", :format, val, "id")
    end
    if name === Symbol("bannerUrl")
        OpenAPI.validate_param(name, "Channel", :format, val, "url")
    end
end
