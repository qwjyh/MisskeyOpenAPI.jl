# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""admin___server_info_200_response

    AdminServerInfo200Response(;
        machine=nothing,
        os=nothing,
        node=nothing,
        psql=nothing,
        cpu=nothing,
        mem=nothing,
        fs=nothing,
        net=nothing,
    )

    - machine::String
    - os::String
    - node::String
    - psql::String
    - cpu::AdminServerInfo200ResponseCpu
    - mem::AdminServerInfo200ResponseMem
    - fs::AdminServerInfo200ResponseFs
    - net::AdminServerInfo200ResponseNet
"""
Base.@kwdef mutable struct AdminServerInfo200Response <: OpenAPI.APIModel
    machine::Union{Nothing, String} = nothing
    os::Union{Nothing, String} = nothing
    node::Union{Nothing, String} = nothing
    psql::Union{Nothing, String} = nothing
    cpu = nothing # spec type: Union{ Nothing, AdminServerInfo200ResponseCpu }
    mem = nothing # spec type: Union{ Nothing, AdminServerInfo200ResponseMem }
    fs = nothing # spec type: Union{ Nothing, AdminServerInfo200ResponseFs }
    net = nothing # spec type: Union{ Nothing, AdminServerInfo200ResponseNet }

    function AdminServerInfo200Response(machine, os, node, psql, cpu, mem, fs, net, )
        OpenAPI.validate_property(AdminServerInfo200Response, Symbol("machine"), machine)
        OpenAPI.validate_property(AdminServerInfo200Response, Symbol("os"), os)
        OpenAPI.validate_property(AdminServerInfo200Response, Symbol("node"), node)
        OpenAPI.validate_property(AdminServerInfo200Response, Symbol("psql"), psql)
        OpenAPI.validate_property(AdminServerInfo200Response, Symbol("cpu"), cpu)
        OpenAPI.validate_property(AdminServerInfo200Response, Symbol("mem"), mem)
        OpenAPI.validate_property(AdminServerInfo200Response, Symbol("fs"), fs)
        OpenAPI.validate_property(AdminServerInfo200Response, Symbol("net"), net)
        return new(machine, os, node, psql, cpu, mem, fs, net, )
    end
end # type AdminServerInfo200Response

const _property_types_AdminServerInfo200Response = Dict{Symbol,String}(Symbol("machine")=>"String", Symbol("os")=>"String", Symbol("node")=>"String", Symbol("psql")=>"String", Symbol("cpu")=>"AdminServerInfo200ResponseCpu", Symbol("mem")=>"AdminServerInfo200ResponseMem", Symbol("fs")=>"AdminServerInfo200ResponseFs", Symbol("net")=>"AdminServerInfo200ResponseNet", )
OpenAPI.property_type(::Type{ AdminServerInfo200Response }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_AdminServerInfo200Response[name]))}

function check_required(o::AdminServerInfo200Response)
    o.machine === nothing && (return false)
    o.os === nothing && (return false)
    o.node === nothing && (return false)
    o.psql === nothing && (return false)
    o.cpu === nothing && (return false)
    o.mem === nothing && (return false)
    o.fs === nothing && (return false)
    o.net === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ AdminServerInfo200Response }, name::Symbol, val)
end
