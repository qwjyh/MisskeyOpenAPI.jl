# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""users___achievements_200_response_inner

    UsersAchievements200ResponseInner(;
        name=nothing,
        unlockedAt=nothing,
    )

    - name::String
    - unlockedAt::Float64
"""
Base.@kwdef mutable struct UsersAchievements200ResponseInner <: OpenAPI.APIModel
    name::Union{Nothing, String} = nothing
    unlockedAt::Union{Nothing, Float64} = nothing

    function UsersAchievements200ResponseInner(name, unlockedAt, )
        OpenAPI.validate_property(UsersAchievements200ResponseInner, Symbol("name"), name)
        OpenAPI.validate_property(UsersAchievements200ResponseInner, Symbol("unlockedAt"), unlockedAt)
        return new(name, unlockedAt, )
    end
end # type UsersAchievements200ResponseInner

const _property_types_UsersAchievements200ResponseInner = Dict{Symbol,String}(Symbol("name")=>"String", Symbol("unlockedAt")=>"Float64", )
OpenAPI.property_type(::Type{ UsersAchievements200ResponseInner }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_UsersAchievements200ResponseInner[name]))}

function check_required(o::UsersAchievements200ResponseInner)
    o.name === nothing && (return false)
    o.unlockedAt === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ UsersAchievements200ResponseInner }, name::Symbol, val)
end
