# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""users___lists___show_request

    UsersListsShowRequest(;
        listId=nothing,
        forPublic=false,
    )

    - listId::String
    - forPublic::Bool
"""
Base.@kwdef mutable struct UsersListsShowRequest <: OpenAPI.APIModel
    listId::Union{Nothing, String} = nothing
    forPublic::Union{Nothing, Bool} = false

    function UsersListsShowRequest(listId, forPublic, )
        OpenAPI.validate_property(UsersListsShowRequest, Symbol("listId"), listId)
        OpenAPI.validate_property(UsersListsShowRequest, Symbol("forPublic"), forPublic)
        return new(listId, forPublic, )
    end
end # type UsersListsShowRequest

const _property_types_UsersListsShowRequest = Dict{Symbol,String}(Symbol("listId")=>"String", Symbol("forPublic")=>"Bool", )
OpenAPI.property_type(::Type{ UsersListsShowRequest }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_UsersListsShowRequest[name]))}

function check_required(o::UsersListsShowRequest)
    o.listId === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ UsersListsShowRequest }, name::Symbol, val)
    if name === Symbol("listId")
        OpenAPI.validate_param(name, "UsersListsShowRequest", :format, val, "misskey:id")
    end
end
