# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""RoleLite

    RoleLite(;
        id=nothing,
        name=nothing,
        color=nothing,
        iconUrl=nothing,
        description=nothing,
        isModerator=nothing,
        isAdministrator=nothing,
        displayOrder=nothing,
    )

    - id::String
    - name::String
    - color::String
    - iconUrl::String
    - description::String
    - isModerator::Bool
    - isAdministrator::Bool
    - displayOrder::Int64
"""
Base.@kwdef mutable struct RoleLite <: OpenAPI.APIModel
    id::Union{Nothing, String} = nothing
    name::Union{Nothing, String} = nothing
    color::Union{Nothing, String} = nothing
    iconUrl::Union{Nothing, String} = nothing
    description::Union{Nothing, String} = nothing
    isModerator::Union{Nothing, Bool} = nothing
    isAdministrator::Union{Nothing, Bool} = nothing
    displayOrder::Union{Nothing, Int64} = nothing

    function RoleLite(id, name, color, iconUrl, description, isModerator, isAdministrator, displayOrder, )
        OpenAPI.validate_property(RoleLite, Symbol("id"), id)
        OpenAPI.validate_property(RoleLite, Symbol("name"), name)
        OpenAPI.validate_property(RoleLite, Symbol("color"), color)
        OpenAPI.validate_property(RoleLite, Symbol("iconUrl"), iconUrl)
        OpenAPI.validate_property(RoleLite, Symbol("description"), description)
        OpenAPI.validate_property(RoleLite, Symbol("isModerator"), isModerator)
        OpenAPI.validate_property(RoleLite, Symbol("isAdministrator"), isAdministrator)
        OpenAPI.validate_property(RoleLite, Symbol("displayOrder"), displayOrder)
        return new(id, name, color, iconUrl, description, isModerator, isAdministrator, displayOrder, )
    end
end # type RoleLite

const _property_types_RoleLite = Dict{Symbol,String}(Symbol("id")=>"String", Symbol("name")=>"String", Symbol("color")=>"String", Symbol("iconUrl")=>"String", Symbol("description")=>"String", Symbol("isModerator")=>"Bool", Symbol("isAdministrator")=>"Bool", Symbol("displayOrder")=>"Int64", )
OpenAPI.property_type(::Type{ RoleLite }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_RoleLite[name]))}

function check_required(o::RoleLite)
    o.id === nothing && (return false)
    o.name === nothing && (return false)
    o.color === nothing && (return false)
    o.iconUrl === nothing && (return false)
    o.description === nothing && (return false)
    o.isModerator === nothing && (return false)
    o.isAdministrator === nothing && (return false)
    o.displayOrder === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ RoleLite }, name::Symbol, val)
    if name === Symbol("id")
        OpenAPI.validate_param(name, "RoleLite", :format, val, "id")
    end
end
