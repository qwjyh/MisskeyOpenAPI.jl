# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""MeDetailedOnly_securityKeysList_inner

    MeDetailedOnlySecurityKeysListInner(;
        id=nothing,
        name=nothing,
        lastUsed=nothing,
    )

    - id::String
    - name::String
    - lastUsed::ZonedDateTime
"""
Base.@kwdef mutable struct MeDetailedOnlySecurityKeysListInner <: OpenAPI.APIModel
    id::Union{Nothing, String} = nothing
    name::Union{Nothing, String} = nothing
    lastUsed::Union{Nothing, ZonedDateTime} = nothing

    function MeDetailedOnlySecurityKeysListInner(id, name, lastUsed, )
        OpenAPI.validate_property(MeDetailedOnlySecurityKeysListInner, Symbol("id"), id)
        OpenAPI.validate_property(MeDetailedOnlySecurityKeysListInner, Symbol("name"), name)
        OpenAPI.validate_property(MeDetailedOnlySecurityKeysListInner, Symbol("lastUsed"), lastUsed)
        return new(id, name, lastUsed, )
    end
end # type MeDetailedOnlySecurityKeysListInner

const _property_types_MeDetailedOnlySecurityKeysListInner = Dict{Symbol,String}(Symbol("id")=>"String", Symbol("name")=>"String", Symbol("lastUsed")=>"ZonedDateTime", )
OpenAPI.property_type(::Type{ MeDetailedOnlySecurityKeysListInner }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_MeDetailedOnlySecurityKeysListInner[name]))}

function check_required(o::MeDetailedOnlySecurityKeysListInner)
    o.id === nothing && (return false)
    o.name === nothing && (return false)
    o.lastUsed === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ MeDetailedOnlySecurityKeysListInner }, name::Symbol, val)
    if name === Symbol("id")
        OpenAPI.validate_param(name, "MeDetailedOnlySecurityKeysListInner", :format, val, "id")
    end
    if name === Symbol("lastUsed")
        OpenAPI.validate_param(name, "MeDetailedOnlySecurityKeysListInner", :format, val, "date-time")
    end
end
