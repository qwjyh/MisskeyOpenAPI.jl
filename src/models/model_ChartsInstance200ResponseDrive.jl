# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""charts___instance_200_response_drive

    ChartsInstance200ResponseDrive(;
        totalFiles=nothing,
        incFiles=nothing,
        decFiles=nothing,
        incUsage=nothing,
        decUsage=nothing,
    )

    - totalFiles::Vector{Float64}
    - incFiles::Vector{Float64}
    - decFiles::Vector{Float64}
    - incUsage::Vector{Float64}
    - decUsage::Vector{Float64}
"""
Base.@kwdef mutable struct ChartsInstance200ResponseDrive <: OpenAPI.APIModel
    totalFiles::Union{Nothing, Vector{Float64}} = nothing
    incFiles::Union{Nothing, Vector{Float64}} = nothing
    decFiles::Union{Nothing, Vector{Float64}} = nothing
    incUsage::Union{Nothing, Vector{Float64}} = nothing
    decUsage::Union{Nothing, Vector{Float64}} = nothing

    function ChartsInstance200ResponseDrive(totalFiles, incFiles, decFiles, incUsage, decUsage, )
        OpenAPI.validate_property(ChartsInstance200ResponseDrive, Symbol("totalFiles"), totalFiles)
        OpenAPI.validate_property(ChartsInstance200ResponseDrive, Symbol("incFiles"), incFiles)
        OpenAPI.validate_property(ChartsInstance200ResponseDrive, Symbol("decFiles"), decFiles)
        OpenAPI.validate_property(ChartsInstance200ResponseDrive, Symbol("incUsage"), incUsage)
        OpenAPI.validate_property(ChartsInstance200ResponseDrive, Symbol("decUsage"), decUsage)
        return new(totalFiles, incFiles, decFiles, incUsage, decUsage, )
    end
end # type ChartsInstance200ResponseDrive

const _property_types_ChartsInstance200ResponseDrive = Dict{Symbol,String}(Symbol("totalFiles")=>"Vector{Float64}", Symbol("incFiles")=>"Vector{Float64}", Symbol("decFiles")=>"Vector{Float64}", Symbol("incUsage")=>"Vector{Float64}", Symbol("decUsage")=>"Vector{Float64}", )
OpenAPI.property_type(::Type{ ChartsInstance200ResponseDrive }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ChartsInstance200ResponseDrive[name]))}

function check_required(o::ChartsInstance200ResponseDrive)
    o.totalFiles === nothing && (return false)
    o.incFiles === nothing && (return false)
    o.decFiles === nothing && (return false)
    o.incUsage === nothing && (return false)
    o.decUsage === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ ChartsInstance200ResponseDrive }, name::Symbol, val)
end
