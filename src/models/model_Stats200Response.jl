# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""stats_200_response

    Stats200Response(;
        notesCount=nothing,
        originalNotesCount=nothing,
        usersCount=nothing,
        originalUsersCount=nothing,
        instances=nothing,
        driveUsageLocal=nothing,
        driveUsageRemote=nothing,
    )

    - notesCount::Float64
    - originalNotesCount::Float64
    - usersCount::Float64
    - originalUsersCount::Float64
    - instances::Float64
    - driveUsageLocal::Float64
    - driveUsageRemote::Float64
"""
Base.@kwdef mutable struct Stats200Response <: OpenAPI.APIModel
    notesCount::Union{Nothing, Float64} = nothing
    originalNotesCount::Union{Nothing, Float64} = nothing
    usersCount::Union{Nothing, Float64} = nothing
    originalUsersCount::Union{Nothing, Float64} = nothing
    instances::Union{Nothing, Float64} = nothing
    driveUsageLocal::Union{Nothing, Float64} = nothing
    driveUsageRemote::Union{Nothing, Float64} = nothing

    function Stats200Response(notesCount, originalNotesCount, usersCount, originalUsersCount, instances, driveUsageLocal, driveUsageRemote, )
        OpenAPI.validate_property(Stats200Response, Symbol("notesCount"), notesCount)
        OpenAPI.validate_property(Stats200Response, Symbol("originalNotesCount"), originalNotesCount)
        OpenAPI.validate_property(Stats200Response, Symbol("usersCount"), usersCount)
        OpenAPI.validate_property(Stats200Response, Symbol("originalUsersCount"), originalUsersCount)
        OpenAPI.validate_property(Stats200Response, Symbol("instances"), instances)
        OpenAPI.validate_property(Stats200Response, Symbol("driveUsageLocal"), driveUsageLocal)
        OpenAPI.validate_property(Stats200Response, Symbol("driveUsageRemote"), driveUsageRemote)
        return new(notesCount, originalNotesCount, usersCount, originalUsersCount, instances, driveUsageLocal, driveUsageRemote, )
    end
end # type Stats200Response

const _property_types_Stats200Response = Dict{Symbol,String}(Symbol("notesCount")=>"Float64", Symbol("originalNotesCount")=>"Float64", Symbol("usersCount")=>"Float64", Symbol("originalUsersCount")=>"Float64", Symbol("instances")=>"Float64", Symbol("driveUsageLocal")=>"Float64", Symbol("driveUsageRemote")=>"Float64", )
OpenAPI.property_type(::Type{ Stats200Response }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_Stats200Response[name]))}

function check_required(o::Stats200Response)
    o.notesCount === nothing && (return false)
    o.originalNotesCount === nothing && (return false)
    o.usersCount === nothing && (return false)
    o.originalUsersCount === nothing && (return false)
    o.instances === nothing && (return false)
    o.driveUsageLocal === nothing && (return false)
    o.driveUsageRemote === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ Stats200Response }, name::Symbol, val)
end
