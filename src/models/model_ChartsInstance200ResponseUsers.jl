# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""charts___instance_200_response_users

    ChartsInstance200ResponseUsers(;
        total=nothing,
        inc=nothing,
        dec=nothing,
    )

    - total::Vector{Float64}
    - inc::Vector{Float64}
    - dec::Vector{Float64}
"""
Base.@kwdef mutable struct ChartsInstance200ResponseUsers <: OpenAPI.APIModel
    total::Union{Nothing, Vector{Float64}} = nothing
    inc::Union{Nothing, Vector{Float64}} = nothing
    dec::Union{Nothing, Vector{Float64}} = nothing

    function ChartsInstance200ResponseUsers(total, inc, dec, )
        OpenAPI.validate_property(ChartsInstance200ResponseUsers, Symbol("total"), total)
        OpenAPI.validate_property(ChartsInstance200ResponseUsers, Symbol("inc"), inc)
        OpenAPI.validate_property(ChartsInstance200ResponseUsers, Symbol("dec"), dec)
        return new(total, inc, dec, )
    end
end # type ChartsInstance200ResponseUsers

const _property_types_ChartsInstance200ResponseUsers = Dict{Symbol,String}(Symbol("total")=>"Vector{Float64}", Symbol("inc")=>"Vector{Float64}", Symbol("dec")=>"Vector{Float64}", )
OpenAPI.property_type(::Type{ ChartsInstance200ResponseUsers }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ChartsInstance200ResponseUsers[name]))}

function check_required(o::ChartsInstance200ResponseUsers)
    o.total === nothing && (return false)
    o.inc === nothing && (return false)
    o.dec === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ ChartsInstance200ResponseUsers }, name::Symbol, val)
end
