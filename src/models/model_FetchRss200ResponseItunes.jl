# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""fetch_rss_200_response_itunes

    FetchRss200ResponseItunes(;
        image=nothing,
        owner=nothing,
        author=nothing,
        summary=nothing,
        explicit=nothing,
        categories=nothing,
        keywords=nothing,
    )

    - image::String
    - owner::FetchRss200ResponseItunesOwner
    - author::String
    - summary::String
    - explicit::String
    - categories::Vector{String}
    - keywords::Vector{String}
"""
Base.@kwdef mutable struct FetchRss200ResponseItunes <: OpenAPI.APIModel
    image::Union{Nothing, String} = nothing
    owner = nothing # spec type: Union{ Nothing, FetchRss200ResponseItunesOwner }
    author::Union{Nothing, String} = nothing
    summary::Union{Nothing, String} = nothing
    explicit::Union{Nothing, String} = nothing
    categories::Union{Nothing, Vector{String}} = nothing
    keywords::Union{Nothing, Vector{String}} = nothing

    function FetchRss200ResponseItunes(image, owner, author, summary, explicit, categories, keywords, )
        OpenAPI.validate_property(FetchRss200ResponseItunes, Symbol("image"), image)
        OpenAPI.validate_property(FetchRss200ResponseItunes, Symbol("owner"), owner)
        OpenAPI.validate_property(FetchRss200ResponseItunes, Symbol("author"), author)
        OpenAPI.validate_property(FetchRss200ResponseItunes, Symbol("summary"), summary)
        OpenAPI.validate_property(FetchRss200ResponseItunes, Symbol("explicit"), explicit)
        OpenAPI.validate_property(FetchRss200ResponseItunes, Symbol("categories"), categories)
        OpenAPI.validate_property(FetchRss200ResponseItunes, Symbol("keywords"), keywords)
        return new(image, owner, author, summary, explicit, categories, keywords, )
    end
end # type FetchRss200ResponseItunes

const _property_types_FetchRss200ResponseItunes = Dict{Symbol,String}(Symbol("image")=>"String", Symbol("owner")=>"FetchRss200ResponseItunesOwner", Symbol("author")=>"String", Symbol("summary")=>"String", Symbol("explicit")=>"String", Symbol("categories")=>"Vector{String}", Symbol("keywords")=>"Vector{String}", )
OpenAPI.property_type(::Type{ FetchRss200ResponseItunes }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_FetchRss200ResponseItunes[name]))}

function check_required(o::FetchRss200ResponseItunes)
    true
end

function OpenAPI.validate_property(::Type{ FetchRss200ResponseItunes }, name::Symbol, val)
end
