# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""admin___server_info_200_response_cpu

    AdminServerInfo200ResponseCpu(;
        model=nothing,
        cores=nothing,
    )

    - model::String
    - cores::Float64
"""
Base.@kwdef mutable struct AdminServerInfo200ResponseCpu <: OpenAPI.APIModel
    model::Union{Nothing, String} = nothing
    cores::Union{Nothing, Float64} = nothing

    function AdminServerInfo200ResponseCpu(model, cores, )
        OpenAPI.validate_property(AdminServerInfo200ResponseCpu, Symbol("model"), model)
        OpenAPI.validate_property(AdminServerInfo200ResponseCpu, Symbol("cores"), cores)
        return new(model, cores, )
    end
end # type AdminServerInfo200ResponseCpu

const _property_types_AdminServerInfo200ResponseCpu = Dict{Symbol,String}(Symbol("model")=>"String", Symbol("cores")=>"Float64", )
OpenAPI.property_type(::Type{ AdminServerInfo200ResponseCpu }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_AdminServerInfo200ResponseCpu[name]))}

function check_required(o::AdminServerInfo200ResponseCpu)
    o.model === nothing && (return false)
    o.cores === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ AdminServerInfo200ResponseCpu }, name::Symbol, val)
end
