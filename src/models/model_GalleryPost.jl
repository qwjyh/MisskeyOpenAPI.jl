# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""GalleryPost

    GalleryPost(;
        id=nothing,
        createdAt=nothing,
        updatedAt=nothing,
        userId=nothing,
        user=nothing,
        title=nothing,
        description=nothing,
        fileIds=nothing,
        files=nothing,
        tags=nothing,
        isSensitive=nothing,
        likedCount=nothing,
        isLiked=nothing,
    )

    - id::String
    - createdAt::ZonedDateTime
    - updatedAt::ZonedDateTime
    - userId::String
    - user::UserLite
    - title::String
    - description::String
    - fileIds::Vector{String}
    - files::Vector{DriveFile}
    - tags::Vector{String}
    - isSensitive::Bool
    - likedCount::Float64
    - isLiked::Bool
"""
Base.@kwdef mutable struct GalleryPost <: OpenAPI.APIModel
    id::Union{Nothing, String} = nothing
    createdAt::Union{Nothing, ZonedDateTime} = nothing
    updatedAt::Union{Nothing, ZonedDateTime} = nothing
    userId::Union{Nothing, String} = nothing
    user = nothing # spec type: Union{ Nothing, UserLite }
    title::Union{Nothing, String} = nothing
    description::Union{Nothing, String} = nothing
    fileIds::Union{Nothing, Vector{String}} = nothing
    files::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{DriveFile} }
    tags::Union{Nothing, Vector{String}} = nothing
    isSensitive::Union{Nothing, Bool} = nothing
    likedCount::Union{Nothing, Float64} = nothing
    isLiked::Union{Nothing, Bool} = nothing

    function GalleryPost(id, createdAt, updatedAt, userId, user, title, description, fileIds, files, tags, isSensitive, likedCount, isLiked, )
        OpenAPI.validate_property(GalleryPost, Symbol("id"), id)
        OpenAPI.validate_property(GalleryPost, Symbol("createdAt"), createdAt)
        OpenAPI.validate_property(GalleryPost, Symbol("updatedAt"), updatedAt)
        OpenAPI.validate_property(GalleryPost, Symbol("userId"), userId)
        OpenAPI.validate_property(GalleryPost, Symbol("user"), user)
        OpenAPI.validate_property(GalleryPost, Symbol("title"), title)
        OpenAPI.validate_property(GalleryPost, Symbol("description"), description)
        OpenAPI.validate_property(GalleryPost, Symbol("fileIds"), fileIds)
        OpenAPI.validate_property(GalleryPost, Symbol("files"), files)
        OpenAPI.validate_property(GalleryPost, Symbol("tags"), tags)
        OpenAPI.validate_property(GalleryPost, Symbol("isSensitive"), isSensitive)
        OpenAPI.validate_property(GalleryPost, Symbol("likedCount"), likedCount)
        OpenAPI.validate_property(GalleryPost, Symbol("isLiked"), isLiked)
        return new(id, createdAt, updatedAt, userId, user, title, description, fileIds, files, tags, isSensitive, likedCount, isLiked, )
    end
end # type GalleryPost

const _property_types_GalleryPost = Dict{Symbol,String}(Symbol("id")=>"String", Symbol("createdAt")=>"ZonedDateTime", Symbol("updatedAt")=>"ZonedDateTime", Symbol("userId")=>"String", Symbol("user")=>"UserLite", Symbol("title")=>"String", Symbol("description")=>"String", Symbol("fileIds")=>"Vector{String}", Symbol("files")=>"Vector{DriveFile}", Symbol("tags")=>"Vector{String}", Symbol("isSensitive")=>"Bool", Symbol("likedCount")=>"Float64", Symbol("isLiked")=>"Bool", )
OpenAPI.property_type(::Type{ GalleryPost }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_GalleryPost[name]))}

function check_required(o::GalleryPost)
    o.id === nothing && (return false)
    o.createdAt === nothing && (return false)
    o.updatedAt === nothing && (return false)
    o.userId === nothing && (return false)
    o.user === nothing && (return false)
    o.title === nothing && (return false)
    o.description === nothing && (return false)
    o.fileIds === nothing && (return false)
    o.files === nothing && (return false)
    o.tags === nothing && (return false)
    o.isSensitive === nothing && (return false)
    o.likedCount === nothing && (return false)
    o.isLiked === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ GalleryPost }, name::Symbol, val)
    if name === Symbol("id")
        OpenAPI.validate_param(name, "GalleryPost", :format, val, "id")
    end
    if name === Symbol("createdAt")
        OpenAPI.validate_param(name, "GalleryPost", :format, val, "date-time")
    end
    if name === Symbol("updatedAt")
        OpenAPI.validate_param(name, "GalleryPost", :format, val, "date-time")
    end
    if name === Symbol("userId")
        OpenAPI.validate_param(name, "GalleryPost", :format, val, "id")
    end
end
