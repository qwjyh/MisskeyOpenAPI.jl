# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""drive___files_request

    DriveFilesRequest(;
        limit=10,
        sinceId=nothing,
        untilId=nothing,
        folderId=nothing,
        type=nothing,
        sort=nothing,
    )

    - limit::Int64
    - sinceId::String
    - untilId::String
    - folderId::String
    - type::String
    - sort::String
"""
Base.@kwdef mutable struct DriveFilesRequest <: OpenAPI.APIModel
    limit::Union{Nothing, Int64} = 10
    sinceId::Union{Nothing, String} = nothing
    untilId::Union{Nothing, String} = nothing
    folderId::Union{Nothing, String} = nothing
    type::Union{Nothing, String} = nothing
    sort::Union{Nothing, String} = nothing

    function DriveFilesRequest(limit, sinceId, untilId, folderId, type, sort, )
        OpenAPI.validate_property(DriveFilesRequest, Symbol("limit"), limit)
        OpenAPI.validate_property(DriveFilesRequest, Symbol("sinceId"), sinceId)
        OpenAPI.validate_property(DriveFilesRequest, Symbol("untilId"), untilId)
        OpenAPI.validate_property(DriveFilesRequest, Symbol("folderId"), folderId)
        OpenAPI.validate_property(DriveFilesRequest, Symbol("type"), type)
        OpenAPI.validate_property(DriveFilesRequest, Symbol("sort"), sort)
        return new(limit, sinceId, untilId, folderId, type, sort, )
    end
end # type DriveFilesRequest

const _property_types_DriveFilesRequest = Dict{Symbol,String}(Symbol("limit")=>"Int64", Symbol("sinceId")=>"String", Symbol("untilId")=>"String", Symbol("folderId")=>"String", Symbol("type")=>"String", Symbol("sort")=>"String", )
OpenAPI.property_type(::Type{ DriveFilesRequest }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_DriveFilesRequest[name]))}

function check_required(o::DriveFilesRequest)
    true
end

function OpenAPI.validate_property(::Type{ DriveFilesRequest }, name::Symbol, val)
    if name === Symbol("limit")
        OpenAPI.validate_param(name, "DriveFilesRequest", :maximum, val, 100, false)
        OpenAPI.validate_param(name, "DriveFilesRequest", :minimum, val, 1, false)
    end
    if name === Symbol("sinceId")
        OpenAPI.validate_param(name, "DriveFilesRequest", :format, val, "misskey:id")
    end
    if name === Symbol("untilId")
        OpenAPI.validate_param(name, "DriveFilesRequest", :format, val, "misskey:id")
    end
    if name === Symbol("folderId")
        OpenAPI.validate_param(name, "DriveFilesRequest", :format, val, "misskey:id")
    end
    if name === Symbol("type")
        OpenAPI.validate_param(name, "DriveFilesRequest", :pattern, val, r"^[a-zA-Z\/\-*]+$")
    end
    if name === Symbol("sort")
        OpenAPI.validate_param(name, "DriveFilesRequest", :enum, val, ["+createdAt", "-createdAt", "+name", "-name", "+size", "-size", "null"])
    end
end
