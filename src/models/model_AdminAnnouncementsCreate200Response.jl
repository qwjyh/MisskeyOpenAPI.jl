# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""admin___announcements___create_200_response

    AdminAnnouncementsCreate200Response(;
        id=nothing,
        createdAt=nothing,
        updatedAt=nothing,
        title=nothing,
        text=nothing,
        imageUrl=nothing,
    )

    - id::String
    - createdAt::ZonedDateTime
    - updatedAt::ZonedDateTime
    - title::String
    - text::String
    - imageUrl::String
"""
Base.@kwdef mutable struct AdminAnnouncementsCreate200Response <: OpenAPI.APIModel
    id::Union{Nothing, String} = nothing
    createdAt::Union{Nothing, ZonedDateTime} = nothing
    updatedAt::Union{Nothing, ZonedDateTime} = nothing
    title::Union{Nothing, String} = nothing
    text::Union{Nothing, String} = nothing
    imageUrl::Union{Nothing, String} = nothing

    function AdminAnnouncementsCreate200Response(id, createdAt, updatedAt, title, text, imageUrl, )
        OpenAPI.validate_property(AdminAnnouncementsCreate200Response, Symbol("id"), id)
        OpenAPI.validate_property(AdminAnnouncementsCreate200Response, Symbol("createdAt"), createdAt)
        OpenAPI.validate_property(AdminAnnouncementsCreate200Response, Symbol("updatedAt"), updatedAt)
        OpenAPI.validate_property(AdminAnnouncementsCreate200Response, Symbol("title"), title)
        OpenAPI.validate_property(AdminAnnouncementsCreate200Response, Symbol("text"), text)
        OpenAPI.validate_property(AdminAnnouncementsCreate200Response, Symbol("imageUrl"), imageUrl)
        return new(id, createdAt, updatedAt, title, text, imageUrl, )
    end
end # type AdminAnnouncementsCreate200Response

const _property_types_AdminAnnouncementsCreate200Response = Dict{Symbol,String}(Symbol("id")=>"String", Symbol("createdAt")=>"ZonedDateTime", Symbol("updatedAt")=>"ZonedDateTime", Symbol("title")=>"String", Symbol("text")=>"String", Symbol("imageUrl")=>"String", )
OpenAPI.property_type(::Type{ AdminAnnouncementsCreate200Response }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_AdminAnnouncementsCreate200Response[name]))}

function check_required(o::AdminAnnouncementsCreate200Response)
    o.id === nothing && (return false)
    o.createdAt === nothing && (return false)
    o.updatedAt === nothing && (return false)
    o.title === nothing && (return false)
    o.text === nothing && (return false)
    o.imageUrl === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ AdminAnnouncementsCreate200Response }, name::Symbol, val)
    if name === Symbol("id")
        OpenAPI.validate_param(name, "AdminAnnouncementsCreate200Response", :format, val, "id")
    end
    if name === Symbol("createdAt")
        OpenAPI.validate_param(name, "AdminAnnouncementsCreate200Response", :format, val, "date-time")
    end
    if name === Symbol("updatedAt")
        OpenAPI.validate_param(name, "AdminAnnouncementsCreate200Response", :format, val, "date-time")
    end
end
