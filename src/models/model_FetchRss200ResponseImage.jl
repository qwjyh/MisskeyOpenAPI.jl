# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""fetch_rss_200_response_image

    FetchRss200ResponseImage(;
        link=nothing,
        url=nothing,
        title=nothing,
    )

    - link::String
    - url::String
    - title::String
"""
Base.@kwdef mutable struct FetchRss200ResponseImage <: OpenAPI.APIModel
    link::Union{Nothing, String} = nothing
    url::Union{Nothing, String} = nothing
    title::Union{Nothing, String} = nothing

    function FetchRss200ResponseImage(link, url, title, )
        OpenAPI.validate_property(FetchRss200ResponseImage, Symbol("link"), link)
        OpenAPI.validate_property(FetchRss200ResponseImage, Symbol("url"), url)
        OpenAPI.validate_property(FetchRss200ResponseImage, Symbol("title"), title)
        return new(link, url, title, )
    end
end # type FetchRss200ResponseImage

const _property_types_FetchRss200ResponseImage = Dict{Symbol,String}(Symbol("link")=>"String", Symbol("url")=>"String", Symbol("title")=>"String", )
OpenAPI.property_type(::Type{ FetchRss200ResponseImage }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_FetchRss200ResponseImage[name]))}

function check_required(o::FetchRss200ResponseImage)
    o.url === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ FetchRss200ResponseImage }, name::Symbol, val)
end
