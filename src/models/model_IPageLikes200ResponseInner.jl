# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""i___page_likes_200_response_inner

    IPageLikes200ResponseInner(;
        id=nothing,
        page=nothing,
    )

    - id::String
    - page::Page
"""
Base.@kwdef mutable struct IPageLikes200ResponseInner <: OpenAPI.APIModel
    id::Union{Nothing, String} = nothing
    page = nothing # spec type: Union{ Nothing, Page }

    function IPageLikes200ResponseInner(id, page, )
        OpenAPI.validate_property(IPageLikes200ResponseInner, Symbol("id"), id)
        OpenAPI.validate_property(IPageLikes200ResponseInner, Symbol("page"), page)
        return new(id, page, )
    end
end # type IPageLikes200ResponseInner

const _property_types_IPageLikes200ResponseInner = Dict{Symbol,String}(Symbol("id")=>"String", Symbol("page")=>"Page", )
OpenAPI.property_type(::Type{ IPageLikes200ResponseInner }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IPageLikes200ResponseInner[name]))}

function check_required(o::IPageLikes200ResponseInner)
    o.id === nothing && (return false)
    o.page === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ IPageLikes200ResponseInner }, name::Symbol, val)
    if name === Symbol("id")
        OpenAPI.validate_param(name, "IPageLikes200ResponseInner", :format, val, "id")
    end
end
