# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""gallery___posts___update_request

    GalleryPostsUpdateRequest(;
        postId=nothing,
        title=nothing,
        description=nothing,
        fileIds=nothing,
        isSensitive=false,
    )

    - postId::String
    - title::String
    - description::String
    - fileIds::Vector{String}
    - isSensitive::Bool
"""
Base.@kwdef mutable struct GalleryPostsUpdateRequest <: OpenAPI.APIModel
    postId::Union{Nothing, String} = nothing
    title::Union{Nothing, String} = nothing
    description::Union{Nothing, String} = nothing
    fileIds::Union{Nothing, Vector{String}} = nothing
    isSensitive::Union{Nothing, Bool} = false

    function GalleryPostsUpdateRequest(postId, title, description, fileIds, isSensitive, )
        OpenAPI.validate_property(GalleryPostsUpdateRequest, Symbol("postId"), postId)
        OpenAPI.validate_property(GalleryPostsUpdateRequest, Symbol("title"), title)
        OpenAPI.validate_property(GalleryPostsUpdateRequest, Symbol("description"), description)
        OpenAPI.validate_property(GalleryPostsUpdateRequest, Symbol("fileIds"), fileIds)
        OpenAPI.validate_property(GalleryPostsUpdateRequest, Symbol("isSensitive"), isSensitive)
        return new(postId, title, description, fileIds, isSensitive, )
    end
end # type GalleryPostsUpdateRequest

const _property_types_GalleryPostsUpdateRequest = Dict{Symbol,String}(Symbol("postId")=>"String", Symbol("title")=>"String", Symbol("description")=>"String", Symbol("fileIds")=>"Vector{String}", Symbol("isSensitive")=>"Bool", )
OpenAPI.property_type(::Type{ GalleryPostsUpdateRequest }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_GalleryPostsUpdateRequest[name]))}

function check_required(o::GalleryPostsUpdateRequest)
    o.postId === nothing && (return false)
    o.title === nothing && (return false)
    o.fileIds === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ GalleryPostsUpdateRequest }, name::Symbol, val)
    if name === Symbol("postId")
        OpenAPI.validate_param(name, "GalleryPostsUpdateRequest", :format, val, "misskey:id")
    end
    if name === Symbol("title")
        OpenAPI.validate_param(name, "GalleryPostsUpdateRequest", :minLength, val, 1)
    end
    if name === Symbol("fileIds")
        OpenAPI.validate_param(name, "GalleryPostsUpdateRequest", :maxItems, val, 32)
        OpenAPI.validate_param(name, "GalleryPostsUpdateRequest", :minItems, val, 1)
        OpenAPI.validate_param(name, "GalleryPostsUpdateRequest", :uniqueItems, val, true)
    end
end
