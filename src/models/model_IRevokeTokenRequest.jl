# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""i___revoke_token_request

    IRevokeTokenRequest(;
        tokenId=nothing,
        token=nothing,
    )

    - tokenId::String
    - token::String
"""
Base.@kwdef mutable struct IRevokeTokenRequest <: OpenAPI.APIModel
    tokenId::Union{Nothing, String} = nothing
    token::Union{Nothing, String} = nothing

    function IRevokeTokenRequest(tokenId, token, )
        OpenAPI.validate_property(IRevokeTokenRequest, Symbol("tokenId"), tokenId)
        OpenAPI.validate_property(IRevokeTokenRequest, Symbol("token"), token)
        return new(tokenId, token, )
    end
end # type IRevokeTokenRequest

const _property_types_IRevokeTokenRequest = Dict{Symbol,String}(Symbol("tokenId")=>"String", Symbol("token")=>"String", )
OpenAPI.property_type(::Type{ IRevokeTokenRequest }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IRevokeTokenRequest[name]))}

function check_required(o::IRevokeTokenRequest)
    true
end

function OpenAPI.validate_property(::Type{ IRevokeTokenRequest }, name::Symbol, val)
    if name === Symbol("tokenId")
        OpenAPI.validate_param(name, "IRevokeTokenRequest", :format, val, "misskey:id")
    end
end
