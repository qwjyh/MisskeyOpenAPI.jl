# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""UserLite_avatarDecorations_inner

    UserLiteAvatarDecorationsInner(;
        id=nothing,
        angle=nothing,
        flipH=nothing,
        url=nothing,
        offsetX=nothing,
        offsetY=nothing,
    )

    - id::String
    - angle::Float64
    - flipH::Bool
    - url::String
    - offsetX::Float64
    - offsetY::Float64
"""
Base.@kwdef mutable struct UserLiteAvatarDecorationsInner <: OpenAPI.APIModel
    id::Union{Nothing, String} = nothing
    angle::Union{Nothing, Float64} = nothing
    flipH::Union{Nothing, Bool} = nothing
    url::Union{Nothing, String} = nothing
    offsetX::Union{Nothing, Float64} = nothing
    offsetY::Union{Nothing, Float64} = nothing

    function UserLiteAvatarDecorationsInner(id, angle, flipH, url, offsetX, offsetY, )
        OpenAPI.validate_property(UserLiteAvatarDecorationsInner, Symbol("id"), id)
        OpenAPI.validate_property(UserLiteAvatarDecorationsInner, Symbol("angle"), angle)
        OpenAPI.validate_property(UserLiteAvatarDecorationsInner, Symbol("flipH"), flipH)
        OpenAPI.validate_property(UserLiteAvatarDecorationsInner, Symbol("url"), url)
        OpenAPI.validate_property(UserLiteAvatarDecorationsInner, Symbol("offsetX"), offsetX)
        OpenAPI.validate_property(UserLiteAvatarDecorationsInner, Symbol("offsetY"), offsetY)
        return new(id, angle, flipH, url, offsetX, offsetY, )
    end
end # type UserLiteAvatarDecorationsInner

const _property_types_UserLiteAvatarDecorationsInner = Dict{Symbol,String}(Symbol("id")=>"String", Symbol("angle")=>"Float64", Symbol("flipH")=>"Bool", Symbol("url")=>"String", Symbol("offsetX")=>"Float64", Symbol("offsetY")=>"Float64", )
OpenAPI.property_type(::Type{ UserLiteAvatarDecorationsInner }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_UserLiteAvatarDecorationsInner[name]))}

function check_required(o::UserLiteAvatarDecorationsInner)
    o.id === nothing && (return false)
    o.angle === nothing && (return false)
    o.flipH === nothing && (return false)
    o.url === nothing && (return false)
    o.offsetX === nothing && (return false)
    o.offsetY === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ UserLiteAvatarDecorationsInner }, name::Symbol, val)
    if name === Symbol("id")
        OpenAPI.validate_param(name, "UserLiteAvatarDecorationsInner", :format, val, "id")
    end
    if name === Symbol("url")
        OpenAPI.validate_param(name, "UserLiteAvatarDecorationsInner", :format, val, "url")
    end
end
