# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""FederationInstance

    FederationInstance(;
        id=nothing,
        firstRetrievedAt=nothing,
        host=nothing,
        usersCount=nothing,
        notesCount=nothing,
        followingCount=nothing,
        followersCount=nothing,
        isNotResponding=nothing,
        isSuspended=nothing,
        suspensionState=nothing,
        isBlocked=nothing,
        softwareName=nothing,
        softwareVersion=nothing,
        openRegistrations=nothing,
        name=nothing,
        description=nothing,
        maintainerName=nothing,
        maintainerEmail=nothing,
        isSilenced=nothing,
        iconUrl=nothing,
        faviconUrl=nothing,
        themeColor=nothing,
        infoUpdatedAt=nothing,
        latestRequestReceivedAt=nothing,
        moderationNote=nothing,
    )

    - id::String
    - firstRetrievedAt::ZonedDateTime
    - host::String
    - usersCount::Float64
    - notesCount::Float64
    - followingCount::Float64
    - followersCount::Float64
    - isNotResponding::Bool
    - isSuspended::Bool
    - suspensionState::String
    - isBlocked::Bool
    - softwareName::String
    - softwareVersion::String
    - openRegistrations::Bool
    - name::String
    - description::String
    - maintainerName::String
    - maintainerEmail::String
    - isSilenced::Bool
    - iconUrl::String
    - faviconUrl::String
    - themeColor::String
    - infoUpdatedAt::ZonedDateTime
    - latestRequestReceivedAt::ZonedDateTime
    - moderationNote::String
"""
Base.@kwdef mutable struct FederationInstance <: OpenAPI.APIModel
    id::Union{Nothing, String} = nothing
    firstRetrievedAt::Union{Nothing, ZonedDateTime} = nothing
    host::Union{Nothing, String} = nothing
    usersCount::Union{Nothing, Float64} = nothing
    notesCount::Union{Nothing, Float64} = nothing
    followingCount::Union{Nothing, Float64} = nothing
    followersCount::Union{Nothing, Float64} = nothing
    isNotResponding::Union{Nothing, Bool} = nothing
    isSuspended::Union{Nothing, Bool} = nothing
    suspensionState::Union{Nothing, String} = nothing
    isBlocked::Union{Nothing, Bool} = nothing
    softwareName::Union{Nothing, String} = nothing
    softwareVersion::Union{Nothing, String} = nothing
    openRegistrations::Union{Nothing, Bool} = nothing
    name::Union{Nothing, String} = nothing
    description::Union{Nothing, String} = nothing
    maintainerName::Union{Nothing, String} = nothing
    maintainerEmail::Union{Nothing, String} = nothing
    isSilenced::Union{Nothing, Bool} = nothing
    iconUrl::Union{Nothing, String} = nothing
    faviconUrl::Union{Nothing, String} = nothing
    themeColor::Union{Nothing, String} = nothing
    infoUpdatedAt::Union{Nothing, ZonedDateTime} = nothing
    latestRequestReceivedAt::Union{Nothing, ZonedDateTime} = nothing
    moderationNote::Union{Nothing, String} = nothing

    function FederationInstance(id, firstRetrievedAt, host, usersCount, notesCount, followingCount, followersCount, isNotResponding, isSuspended, suspensionState, isBlocked, softwareName, softwareVersion, openRegistrations, name, description, maintainerName, maintainerEmail, isSilenced, iconUrl, faviconUrl, themeColor, infoUpdatedAt, latestRequestReceivedAt, moderationNote, )
        OpenAPI.validate_property(FederationInstance, Symbol("id"), id)
        OpenAPI.validate_property(FederationInstance, Symbol("firstRetrievedAt"), firstRetrievedAt)
        OpenAPI.validate_property(FederationInstance, Symbol("host"), host)
        OpenAPI.validate_property(FederationInstance, Symbol("usersCount"), usersCount)
        OpenAPI.validate_property(FederationInstance, Symbol("notesCount"), notesCount)
        OpenAPI.validate_property(FederationInstance, Symbol("followingCount"), followingCount)
        OpenAPI.validate_property(FederationInstance, Symbol("followersCount"), followersCount)
        OpenAPI.validate_property(FederationInstance, Symbol("isNotResponding"), isNotResponding)
        OpenAPI.validate_property(FederationInstance, Symbol("isSuspended"), isSuspended)
        OpenAPI.validate_property(FederationInstance, Symbol("suspensionState"), suspensionState)
        OpenAPI.validate_property(FederationInstance, Symbol("isBlocked"), isBlocked)
        OpenAPI.validate_property(FederationInstance, Symbol("softwareName"), softwareName)
        OpenAPI.validate_property(FederationInstance, Symbol("softwareVersion"), softwareVersion)
        OpenAPI.validate_property(FederationInstance, Symbol("openRegistrations"), openRegistrations)
        OpenAPI.validate_property(FederationInstance, Symbol("name"), name)
        OpenAPI.validate_property(FederationInstance, Symbol("description"), description)
        OpenAPI.validate_property(FederationInstance, Symbol("maintainerName"), maintainerName)
        OpenAPI.validate_property(FederationInstance, Symbol("maintainerEmail"), maintainerEmail)
        OpenAPI.validate_property(FederationInstance, Symbol("isSilenced"), isSilenced)
        OpenAPI.validate_property(FederationInstance, Symbol("iconUrl"), iconUrl)
        OpenAPI.validate_property(FederationInstance, Symbol("faviconUrl"), faviconUrl)
        OpenAPI.validate_property(FederationInstance, Symbol("themeColor"), themeColor)
        OpenAPI.validate_property(FederationInstance, Symbol("infoUpdatedAt"), infoUpdatedAt)
        OpenAPI.validate_property(FederationInstance, Symbol("latestRequestReceivedAt"), latestRequestReceivedAt)
        OpenAPI.validate_property(FederationInstance, Symbol("moderationNote"), moderationNote)
        return new(id, firstRetrievedAt, host, usersCount, notesCount, followingCount, followersCount, isNotResponding, isSuspended, suspensionState, isBlocked, softwareName, softwareVersion, openRegistrations, name, description, maintainerName, maintainerEmail, isSilenced, iconUrl, faviconUrl, themeColor, infoUpdatedAt, latestRequestReceivedAt, moderationNote, )
    end
end # type FederationInstance

const _property_types_FederationInstance = Dict{Symbol,String}(Symbol("id")=>"String", Symbol("firstRetrievedAt")=>"ZonedDateTime", Symbol("host")=>"String", Symbol("usersCount")=>"Float64", Symbol("notesCount")=>"Float64", Symbol("followingCount")=>"Float64", Symbol("followersCount")=>"Float64", Symbol("isNotResponding")=>"Bool", Symbol("isSuspended")=>"Bool", Symbol("suspensionState")=>"String", Symbol("isBlocked")=>"Bool", Symbol("softwareName")=>"String", Symbol("softwareVersion")=>"String", Symbol("openRegistrations")=>"Bool", Symbol("name")=>"String", Symbol("description")=>"String", Symbol("maintainerName")=>"String", Symbol("maintainerEmail")=>"String", Symbol("isSilenced")=>"Bool", Symbol("iconUrl")=>"String", Symbol("faviconUrl")=>"String", Symbol("themeColor")=>"String", Symbol("infoUpdatedAt")=>"ZonedDateTime", Symbol("latestRequestReceivedAt")=>"ZonedDateTime", Symbol("moderationNote")=>"String", )
OpenAPI.property_type(::Type{ FederationInstance }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_FederationInstance[name]))}

function check_required(o::FederationInstance)
    o.id === nothing && (return false)
    o.firstRetrievedAt === nothing && (return false)
    o.host === nothing && (return false)
    o.usersCount === nothing && (return false)
    o.notesCount === nothing && (return false)
    o.followingCount === nothing && (return false)
    o.followersCount === nothing && (return false)
    o.isNotResponding === nothing && (return false)
    o.isSuspended === nothing && (return false)
    o.suspensionState === nothing && (return false)
    o.isBlocked === nothing && (return false)
    o.softwareName === nothing && (return false)
    o.softwareVersion === nothing && (return false)
    o.openRegistrations === nothing && (return false)
    o.name === nothing && (return false)
    o.description === nothing && (return false)
    o.maintainerName === nothing && (return false)
    o.maintainerEmail === nothing && (return false)
    o.isSilenced === nothing && (return false)
    o.iconUrl === nothing && (return false)
    o.faviconUrl === nothing && (return false)
    o.themeColor === nothing && (return false)
    o.infoUpdatedAt === nothing && (return false)
    o.latestRequestReceivedAt === nothing && (return false)
    o.moderationNote === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ FederationInstance }, name::Symbol, val)
    if name === Symbol("id")
        OpenAPI.validate_param(name, "FederationInstance", :format, val, "id")
    end
    if name === Symbol("firstRetrievedAt")
        OpenAPI.validate_param(name, "FederationInstance", :format, val, "date-time")
    end
    if name === Symbol("suspensionState")
        OpenAPI.validate_param(name, "FederationInstance", :enum, val, ["none", "manuallySuspended", "goneSuspended", "autoSuspendedForNotResponding"])
    end
    if name === Symbol("iconUrl")
        OpenAPI.validate_param(name, "FederationInstance", :format, val, "url")
    end
    if name === Symbol("faviconUrl")
        OpenAPI.validate_param(name, "FederationInstance", :format, val, "url")
    end
    if name === Symbol("infoUpdatedAt")
        OpenAPI.validate_param(name, "FederationInstance", :format, val, "date-time")
    end
    if name === Symbol("latestRequestReceivedAt")
        OpenAPI.validate_param(name, "FederationInstance", :format, val, "date-time")
    end
end
