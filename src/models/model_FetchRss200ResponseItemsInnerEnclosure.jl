# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""fetch_rss_200_response_items_inner_enclosure

    FetchRss200ResponseItemsInnerEnclosure(;
        url=nothing,
        length=nothing,
        type=nothing,
    )

    - url::String
    - length::Float64
    - type::String
"""
Base.@kwdef mutable struct FetchRss200ResponseItemsInnerEnclosure <: OpenAPI.APIModel
    url::Union{Nothing, String} = nothing
    length::Union{Nothing, Float64} = nothing
    type::Union{Nothing, String} = nothing

    function FetchRss200ResponseItemsInnerEnclosure(url, length, type, )
        OpenAPI.validate_property(FetchRss200ResponseItemsInnerEnclosure, Symbol("url"), url)
        OpenAPI.validate_property(FetchRss200ResponseItemsInnerEnclosure, Symbol("length"), length)
        OpenAPI.validate_property(FetchRss200ResponseItemsInnerEnclosure, Symbol("type"), type)
        return new(url, length, type, )
    end
end # type FetchRss200ResponseItemsInnerEnclosure

const _property_types_FetchRss200ResponseItemsInnerEnclosure = Dict{Symbol,String}(Symbol("url")=>"String", Symbol("length")=>"Float64", Symbol("type")=>"String", )
OpenAPI.property_type(::Type{ FetchRss200ResponseItemsInnerEnclosure }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_FetchRss200ResponseItemsInnerEnclosure[name]))}

function check_required(o::FetchRss200ResponseItemsInnerEnclosure)
    o.url === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ FetchRss200ResponseItemsInnerEnclosure }, name::Symbol, val)
end
