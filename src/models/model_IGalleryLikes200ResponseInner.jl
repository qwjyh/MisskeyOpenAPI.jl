# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""i___gallery___likes_200_response_inner

    IGalleryLikes200ResponseInner(;
        id=nothing,
        post=nothing,
    )

    - id::String
    - post::GalleryPost
"""
Base.@kwdef mutable struct IGalleryLikes200ResponseInner <: OpenAPI.APIModel
    id::Union{Nothing, String} = nothing
    post = nothing # spec type: Union{ Nothing, GalleryPost }

    function IGalleryLikes200ResponseInner(id, post, )
        OpenAPI.validate_property(IGalleryLikes200ResponseInner, Symbol("id"), id)
        OpenAPI.validate_property(IGalleryLikes200ResponseInner, Symbol("post"), post)
        return new(id, post, )
    end
end # type IGalleryLikes200ResponseInner

const _property_types_IGalleryLikes200ResponseInner = Dict{Symbol,String}(Symbol("id")=>"String", Symbol("post")=>"GalleryPost", )
OpenAPI.property_type(::Type{ IGalleryLikes200ResponseInner }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IGalleryLikes200ResponseInner[name]))}

function check_required(o::IGalleryLikes200ResponseInner)
    o.id === nothing && (return false)
    o.post === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ IGalleryLikes200ResponseInner }, name::Symbol, val)
    if name === Symbol("id")
        OpenAPI.validate_param(name, "IGalleryLikes200ResponseInner", :format, val, "id")
    end
end
