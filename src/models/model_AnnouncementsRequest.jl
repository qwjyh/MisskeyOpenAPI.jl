# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""announcements_request

    AnnouncementsRequest(;
        limit=10,
        sinceId=nothing,
        untilId=nothing,
        isActive=true,
    )

    - limit::Int64
    - sinceId::String
    - untilId::String
    - isActive::Bool
"""
Base.@kwdef mutable struct AnnouncementsRequest <: OpenAPI.APIModel
    limit::Union{Nothing, Int64} = 10
    sinceId::Union{Nothing, String} = nothing
    untilId::Union{Nothing, String} = nothing
    isActive::Union{Nothing, Bool} = true

    function AnnouncementsRequest(limit, sinceId, untilId, isActive, )
        OpenAPI.validate_property(AnnouncementsRequest, Symbol("limit"), limit)
        OpenAPI.validate_property(AnnouncementsRequest, Symbol("sinceId"), sinceId)
        OpenAPI.validate_property(AnnouncementsRequest, Symbol("untilId"), untilId)
        OpenAPI.validate_property(AnnouncementsRequest, Symbol("isActive"), isActive)
        return new(limit, sinceId, untilId, isActive, )
    end
end # type AnnouncementsRequest

const _property_types_AnnouncementsRequest = Dict{Symbol,String}(Symbol("limit")=>"Int64", Symbol("sinceId")=>"String", Symbol("untilId")=>"String", Symbol("isActive")=>"Bool", )
OpenAPI.property_type(::Type{ AnnouncementsRequest }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_AnnouncementsRequest[name]))}

function check_required(o::AnnouncementsRequest)
    true
end

function OpenAPI.validate_property(::Type{ AnnouncementsRequest }, name::Symbol, val)
    if name === Symbol("limit")
        OpenAPI.validate_param(name, "AnnouncementsRequest", :maximum, val, 100, false)
        OpenAPI.validate_param(name, "AnnouncementsRequest", :minimum, val, 1, false)
    end
    if name === Symbol("sinceId")
        OpenAPI.validate_param(name, "AnnouncementsRequest", :format, val, "misskey:id")
    end
    if name === Symbol("untilId")
        OpenAPI.validate_param(name, "AnnouncementsRequest", :format, val, "misskey:id")
    end
end
