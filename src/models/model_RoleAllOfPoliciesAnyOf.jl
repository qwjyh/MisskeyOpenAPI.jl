# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""Role_allOf_policies_anyOf

    RoleAllOfPoliciesAnyOf(;
        value=nothing,
        priority=nothing,
        useDefault=nothing,
    )

    - value::RoleAllOfPoliciesAnyOfValue
    - priority::Int64
    - useDefault::Bool
"""
Base.@kwdef mutable struct RoleAllOfPoliciesAnyOf <: OpenAPI.APIModel
    value = nothing # spec type: Union{ Nothing, RoleAllOfPoliciesAnyOfValue }
    priority::Union{Nothing, Int64} = nothing
    useDefault::Union{Nothing, Bool} = nothing

    function RoleAllOfPoliciesAnyOf(value, priority, useDefault, )
        OpenAPI.validate_property(RoleAllOfPoliciesAnyOf, Symbol("value"), value)
        OpenAPI.validate_property(RoleAllOfPoliciesAnyOf, Symbol("priority"), priority)
        OpenAPI.validate_property(RoleAllOfPoliciesAnyOf, Symbol("useDefault"), useDefault)
        return new(value, priority, useDefault, )
    end
end # type RoleAllOfPoliciesAnyOf

const _property_types_RoleAllOfPoliciesAnyOf = Dict{Symbol,String}(Symbol("value")=>"RoleAllOfPoliciesAnyOfValue", Symbol("priority")=>"Int64", Symbol("useDefault")=>"Bool", )
OpenAPI.property_type(::Type{ RoleAllOfPoliciesAnyOf }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_RoleAllOfPoliciesAnyOf[name]))}

function check_required(o::RoleAllOfPoliciesAnyOf)
    true
end

function OpenAPI.validate_property(::Type{ RoleAllOfPoliciesAnyOf }, name::Symbol, val)
end
