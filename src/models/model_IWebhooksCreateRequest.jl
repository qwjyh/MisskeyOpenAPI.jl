# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""i___webhooks___create_request

    IWebhooksCreateRequest(;
        name=nothing,
        url=nothing,
        secret="",
        on=nothing,
    )

    - name::String
    - url::String
    - secret::String
    - on::Vector{String}
"""
Base.@kwdef mutable struct IWebhooksCreateRequest <: OpenAPI.APIModel
    name::Union{Nothing, String} = nothing
    url::Union{Nothing, String} = nothing
    secret::Union{Nothing, String} = ""
    on::Union{Nothing, Vector{String}} = nothing

    function IWebhooksCreateRequest(name, url, secret, on, )
        OpenAPI.validate_property(IWebhooksCreateRequest, Symbol("name"), name)
        OpenAPI.validate_property(IWebhooksCreateRequest, Symbol("url"), url)
        OpenAPI.validate_property(IWebhooksCreateRequest, Symbol("secret"), secret)
        OpenAPI.validate_property(IWebhooksCreateRequest, Symbol("on"), on)
        return new(name, url, secret, on, )
    end
end # type IWebhooksCreateRequest

const _property_types_IWebhooksCreateRequest = Dict{Symbol,String}(Symbol("name")=>"String", Symbol("url")=>"String", Symbol("secret")=>"String", Symbol("on")=>"Vector{String}", )
OpenAPI.property_type(::Type{ IWebhooksCreateRequest }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IWebhooksCreateRequest[name]))}

function check_required(o::IWebhooksCreateRequest)
    o.name === nothing && (return false)
    o.url === nothing && (return false)
    o.on === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ IWebhooksCreateRequest }, name::Symbol, val)
    if name === Symbol("name")
        OpenAPI.validate_param(name, "IWebhooksCreateRequest", :maxLength, val, 100)
        OpenAPI.validate_param(name, "IWebhooksCreateRequest", :minLength, val, 1)
    end
    if name === Symbol("url")
        OpenAPI.validate_param(name, "IWebhooksCreateRequest", :maxLength, val, 1024)
        OpenAPI.validate_param(name, "IWebhooksCreateRequest", :minLength, val, 1)
    end
    if name === Symbol("secret")
        OpenAPI.validate_param(name, "IWebhooksCreateRequest", :maxLength, val, 1024)
    end
    if name === Symbol("on")
        OpenAPI.validate_param(name, "IWebhooksCreateRequest", :enum, val, [])
    end
end
