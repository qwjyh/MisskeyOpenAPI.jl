# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""drive___files___upload_from_url_request

    DriveFilesUploadFromUrlRequest(;
        url=nothing,
        folderId=nothing,
        isSensitive=false,
        comment=nothing,
        marker=nothing,
        force=false,
    )

    - url::String
    - folderId::String
    - isSensitive::Bool
    - comment::String
    - marker::String
    - force::Bool
"""
Base.@kwdef mutable struct DriveFilesUploadFromUrlRequest <: OpenAPI.APIModel
    url::Union{Nothing, String} = nothing
    folderId::Union{Nothing, String} = nothing
    isSensitive::Union{Nothing, Bool} = false
    comment::Union{Nothing, String} = nothing
    marker::Union{Nothing, String} = nothing
    force::Union{Nothing, Bool} = false

    function DriveFilesUploadFromUrlRequest(url, folderId, isSensitive, comment, marker, force, )
        OpenAPI.validate_property(DriveFilesUploadFromUrlRequest, Symbol("url"), url)
        OpenAPI.validate_property(DriveFilesUploadFromUrlRequest, Symbol("folderId"), folderId)
        OpenAPI.validate_property(DriveFilesUploadFromUrlRequest, Symbol("isSensitive"), isSensitive)
        OpenAPI.validate_property(DriveFilesUploadFromUrlRequest, Symbol("comment"), comment)
        OpenAPI.validate_property(DriveFilesUploadFromUrlRequest, Symbol("marker"), marker)
        OpenAPI.validate_property(DriveFilesUploadFromUrlRequest, Symbol("force"), force)
        return new(url, folderId, isSensitive, comment, marker, force, )
    end
end # type DriveFilesUploadFromUrlRequest

const _property_types_DriveFilesUploadFromUrlRequest = Dict{Symbol,String}(Symbol("url")=>"String", Symbol("folderId")=>"String", Symbol("isSensitive")=>"Bool", Symbol("comment")=>"String", Symbol("marker")=>"String", Symbol("force")=>"Bool", )
OpenAPI.property_type(::Type{ DriveFilesUploadFromUrlRequest }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_DriveFilesUploadFromUrlRequest[name]))}

function check_required(o::DriveFilesUploadFromUrlRequest)
    o.url === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ DriveFilesUploadFromUrlRequest }, name::Symbol, val)
    if name === Symbol("folderId")
        OpenAPI.validate_param(name, "DriveFilesUploadFromUrlRequest", :format, val, "misskey:id")
    end
    if name === Symbol("comment")
        OpenAPI.validate_param(name, "DriveFilesUploadFromUrlRequest", :maxLength, val, 512)
    end
end
