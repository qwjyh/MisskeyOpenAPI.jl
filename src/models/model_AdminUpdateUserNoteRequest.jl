# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""admin___update_user_note_request

    AdminUpdateUserNoteRequest(;
        userId=nothing,
        text=nothing,
    )

    - userId::String
    - text::String
"""
Base.@kwdef mutable struct AdminUpdateUserNoteRequest <: OpenAPI.APIModel
    userId::Union{Nothing, String} = nothing
    text::Union{Nothing, String} = nothing

    function AdminUpdateUserNoteRequest(userId, text, )
        OpenAPI.validate_property(AdminUpdateUserNoteRequest, Symbol("userId"), userId)
        OpenAPI.validate_property(AdminUpdateUserNoteRequest, Symbol("text"), text)
        return new(userId, text, )
    end
end # type AdminUpdateUserNoteRequest

const _property_types_AdminUpdateUserNoteRequest = Dict{Symbol,String}(Symbol("userId")=>"String", Symbol("text")=>"String", )
OpenAPI.property_type(::Type{ AdminUpdateUserNoteRequest }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_AdminUpdateUserNoteRequest[name]))}

function check_required(o::AdminUpdateUserNoteRequest)
    o.userId === nothing && (return false)
    o.text === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ AdminUpdateUserNoteRequest }, name::Symbol, val)
    if name === Symbol("userId")
        OpenAPI.validate_param(name, "AdminUpdateUserNoteRequest", :format, val, "misskey:id")
    end
end
