# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""bubble_game___register_request

    BubbleGameRegisterRequest(;
        score=nothing,
        seed=nothing,
        logs=nothing,
        gameMode=nothing,
        gameVersion=nothing,
    )

    - score::Int64
    - seed::String
    - logs::Vector{Vector{Float64}}
    - gameMode::String
    - gameVersion::Int64
"""
Base.@kwdef mutable struct BubbleGameRegisterRequest <: OpenAPI.APIModel
    score::Union{Nothing, Int64} = nothing
    seed::Union{Nothing, String} = nothing
    logs::Union{Nothing, Vector{Vector{Float64}}} = nothing
    gameMode::Union{Nothing, String} = nothing
    gameVersion::Union{Nothing, Int64} = nothing

    function BubbleGameRegisterRequest(score, seed, logs, gameMode, gameVersion, )
        OpenAPI.validate_property(BubbleGameRegisterRequest, Symbol("score"), score)
        OpenAPI.validate_property(BubbleGameRegisterRequest, Symbol("seed"), seed)
        OpenAPI.validate_property(BubbleGameRegisterRequest, Symbol("logs"), logs)
        OpenAPI.validate_property(BubbleGameRegisterRequest, Symbol("gameMode"), gameMode)
        OpenAPI.validate_property(BubbleGameRegisterRequest, Symbol("gameVersion"), gameVersion)
        return new(score, seed, logs, gameMode, gameVersion, )
    end
end # type BubbleGameRegisterRequest

const _property_types_BubbleGameRegisterRequest = Dict{Symbol,String}(Symbol("score")=>"Int64", Symbol("seed")=>"String", Symbol("logs")=>"Vector{Vector{Float64}}", Symbol("gameMode")=>"String", Symbol("gameVersion")=>"Int64", )
OpenAPI.property_type(::Type{ BubbleGameRegisterRequest }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_BubbleGameRegisterRequest[name]))}

function check_required(o::BubbleGameRegisterRequest)
    o.score === nothing && (return false)
    o.seed === nothing && (return false)
    o.logs === nothing && (return false)
    o.gameMode === nothing && (return false)
    o.gameVersion === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ BubbleGameRegisterRequest }, name::Symbol, val)
    if name === Symbol("score")
        OpenAPI.validate_param(name, "BubbleGameRegisterRequest", :minimum, val, 0, false)
    end
    if name === Symbol("seed")
        OpenAPI.validate_param(name, "BubbleGameRegisterRequest", :maxLength, val, 1024)
        OpenAPI.validate_param(name, "BubbleGameRegisterRequest", :minLength, val, 1)
    end
end
