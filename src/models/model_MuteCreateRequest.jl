# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""mute___create_request

    MuteCreateRequest(;
        userId=nothing,
        expiresAt=nothing,
    )

    - userId::String
    - expiresAt::Int64 : A Unix Epoch timestamp that must lie in the future. &#x60;null&#x60; means an indefinite mute.
"""
Base.@kwdef mutable struct MuteCreateRequest <: OpenAPI.APIModel
    userId::Union{Nothing, String} = nothing
    expiresAt::Union{Nothing, Int64} = nothing

    function MuteCreateRequest(userId, expiresAt, )
        OpenAPI.validate_property(MuteCreateRequest, Symbol("userId"), userId)
        OpenAPI.validate_property(MuteCreateRequest, Symbol("expiresAt"), expiresAt)
        return new(userId, expiresAt, )
    end
end # type MuteCreateRequest

const _property_types_MuteCreateRequest = Dict{Symbol,String}(Symbol("userId")=>"String", Symbol("expiresAt")=>"Int64", )
OpenAPI.property_type(::Type{ MuteCreateRequest }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_MuteCreateRequest[name]))}

function check_required(o::MuteCreateRequest)
    o.userId === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ MuteCreateRequest }, name::Symbol, val)
    if name === Symbol("userId")
        OpenAPI.validate_param(name, "MuteCreateRequest", :format, val, "misskey:id")
    end
end
